{
	"id": "b517f49f3f5ba62dc488b45e68b94211",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.9-nightly.2020.5.28",
	"solcLongVersion": "0.6.9-nightly.2020.5.28+commit.ee8307ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol": {
				"content": "pragma solidity ^0.6.0;\n\ninterface IBEP20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the token decimals.\n     */\n    function decimals() external view returns (uint8);\n\n    /**\n     * @dev Returns the token symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n    * @dev Returns the token name.\n    */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the bep token owner.\n     */\n    function getOwner() external view returns (address);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address _owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n\n\npragma solidity ^0.6.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n\n// File: \n\npragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n\n// File: openzeppelin-solidity/contracts/proxy/Initializable.sol\n\n// SPDX-License-Identifier: MIT\n\npragma solidity >=0.4.24 <0.7.0;\n\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n * \n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.\n * \n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n */\nabstract contract Initializable {\n\n    /**\n     * @dev Indicates that the contract has been initialized.\n     */\n    bool private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Modifier to protect an initializer function from being invoked twice.\n     */\n    modifier initializer() {\n        require(_initializing || _isConstructor() || !_initialized, \"Initializable: contract is already initialized\");\n\n        bool isTopLevelCall = !_initializing;\n        if (isTopLevelCall) {\n            _initializing = true;\n            _initialized = true;\n        }\n\n        _;\n\n        if (isTopLevelCall) {\n            _initializing = false;\n        }\n    }\n\n    /// @dev Returns true if and only if the function is running in the constructor\n    function _isConstructor() private view returns (bool) {\n        // extcodesize checks the size of the code stored in an address, and\n        // address returns the current address. Since the code is still not\n        // deployed when running a constructor, any checks on its code size will\n        // yield zero, making it an effective way to detect if a contract is\n        // under construction or not.\n        address self = address(this);\n        uint256 cs;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { cs := extcodesize(self) }\n        return cs == 0;\n    }\n}\n\n// File: contracts/BEP20TokenImplementation.sol\n\npragma solidity ^0.6.0;\n\n\n\n\n\ncontract BEP20TokenImplementation is Context, IBEP20, Initializable {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n    mapping (address => mapping (address => uint256)) private _allowances;\n    uint256 private _totalSupply;\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    address private _owner;\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    bool private _mintable;\n\n    constructor() public {\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev sets initials supply and the owner\n     */\n    function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable, address owner) public initializer {\n        _owner = owner;\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n        _mintable = mintable;\n        _mint(owner, amount);\n    }\n\n    /**\n    * @dev Leaves the contract without owner. It will not be possible to call\n    * `onlyOwner` functions anymore. Can only be called by the current owner.\n    *\n    * NOTE: Renouncing ownership will leave the contract without an owner,\n    * thereby removing any functionality that is only available to the owner.\n    */\n    function renounceOwnership() public onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n\n    /**\n     * @dev Returns if the token is mintable or not\n     */\n    function mintable() external view returns (bool) {\n        return _mintable;\n    }\n\n    /**\n     * @dev Returns the bep token owner.\n     */\n    function getOwner() external override view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Returns the token decimals.\n     */\n    function decimals() external override view returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev Returns the token symbol.\n     */\n    function symbol() external override view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n    * @dev Returns the token name.\n    */\n    function name() external override view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {BEP20-totalSupply}.\n     */\n    function totalSupply() external override view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {BEP20-balanceOf}.\n     */\n    function balanceOf(address account) external override view returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {BEP20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) external override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {BEP20-allowance}.\n     */\n    function allowance(address owner, address spender) external override view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {BEP20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) external override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {BEP20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {BEP20};\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for `sender`'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {BEP20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {BEP20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n     * the total supply.\n     *\n     * Requirements\n     *\n     * - `msg.sender` must be the token owner\n     * - `_mintable` must be true\n     */\n    function mint(uint256 amount) public onlyOwner returns (bool) {\n        require(_mintable, \"this token is not mintable\");\n        _mint(_msgSender(), amount);\n        return true;\n    }\n\n    /**\n   * @dev Burn `amount` tokens and decreasing the total supply.\n   */\n    function burn(uint256 amount) public returns (bool) {\n        _burn(_msgSender(), amount);\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal {\n        require(sender != address(0), \"BEP20: transfer from the zero address\");\n        require(recipient != address(0), \"BEP20: transfer to the zero address\");\n\n        _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal {\n        require(account != address(0), \"BEP20: mint to the zero address\");\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal {\n        require(account != address(0), \"BEP20: burn from the zero address\");\n\n        _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal {\n        require(owner != address(0), \"BEP20: approve from the zero address\");\n        require(spender != address(0), \"BEP20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n     * from the caller's allowance.\n     *\n     * See {_burn} and {_approve}.\n     */\n    function _burnFrom(address account, uint256 amount) internal {\n        _burn(account, amount);\n        _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol": {
				"BEP20TokenImplementation": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "decimals",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "mintable",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintable",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burn `amount` tokens and decreasing the total supply."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"initialize(string,string,uint8,uint256,bool,address)": {
								"details": "sets initials supply and the owner"
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner - `_mintable` must be true"
							},
							"mintable()": {
								"details": "Returns if the token is mintable or not"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":11737:21749  contract BEP20TokenImplementation is Context, IBEP20, Initializable {... */\n  mstore(0x40, 0x80)\n    /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12236:12264  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12236:12264  constructor() public {... */\n  pop\n    /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":11737:21749  contract BEP20TokenImplementation is Context, IBEP20, Initializable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":11737:21749  contract BEP20TokenImplementation is Context, IBEP20, Initializable {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":11737:21749  contract BEP20TokenImplementation is Context, IBEP20, Initializable {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xef3ebcb8\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x313ce567\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4bf365df\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14379:14471  function name() external override view returns (string memory) {... */\n    tag_3:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_26:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_26)\n    tag_28:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14379:14471  function name() external override view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_29\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_29:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15511:15671  function approve(address spender, uint256 amount) external override returns (bool) {... */\n    tag_4:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_31:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15511:15671  function approve(address spender, uint256 amount) external override returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_32\n      jump\t// in\n    tag_30:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14530:14630  function totalSupply() external override view returns (uint256) {... */\n    tag_5:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16128:16439  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x60\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_36:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16128:16439  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_37\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14075:14167  function decimals() external override view returns (uint8) {... */\n    tag_7:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16833:17040  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_8:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_41\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_41:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16833:17040  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_42\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18295:18412  function burn(uint256 amount) public returns (bool) {... */\n    tag_9:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_44:\n      pop\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18295:18412  function burn(uint256 amount) public returns (bool) {... */\n      calldataload\n      tag_45\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13777:13859  function mintable() external view returns (bool) {... */\n    tag_10:\n      tag_30\n      tag_47\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14687:14806  function balanceOf(address account) external override view returns (uint256) {... */\n    tag_11:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_49:\n      pop\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14687:14806  function balanceOf(address account) external override view returns (uint256) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_50\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13185:13322  function renounceOwnership() public onlyOwner {... */\n    tag_12:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      stop\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13922:14013  function getOwner() external override view returns (address) {... */\n    tag_13:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14227:14323  function symbol() external override view returns (string memory) {... */\n    tag_14:\n      tag_24\n      tag_56\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18026:18211  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_15:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_62\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_62:\n      pop\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18026:18211  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      calldataload\n      tag_63\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17526:17784  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_16:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_65\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_65:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17526:17784  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_66\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15008:15174  function transfer(address recipient, uint256 amount) external override returns (bool) {... */\n    tag_17:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_68\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_68:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15008:15174  function transfer(address recipient, uint256 amount) external override returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_69\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15231:15374  function allowance(address owner, address spender) external override view returns (uint256) {... */\n    tag_18:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_71\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_71:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15231:15374  function allowance(address owner, address spender) external override view returns (uint256) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_72\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12537:12849  function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable, address owner) public initializer {... */\n    tag_19:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:18   */\n      0xc0\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:19   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_74\n      jumpi\n        /* \"--CODEGEN--\":32:33   */\n      0x00\n        /* \"--CODEGEN--\":29:30   */\n      dup1\n        /* \"--CODEGEN--\":22:34   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_74:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12537:12849  function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable, address owner) public initializer {... */\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n        /* \"--CODEGEN--\":27:38   */\n      0x0100000000\n        /* \"--CODEGEN--\":11:39   */\n      dup2\n      gt\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_75\n      jumpi\n        /* \"--CODEGEN--\":52:53   */\n      0x00\n        /* \"--CODEGEN--\":49:50   */\n      dup1\n        /* \"--CODEGEN--\":42:54   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_75:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12537:12849  function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable, address owner) public initializer {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":41:50   */\n      dup4\n        /* \"--CODEGEN--\":34:38   */\n      0x20\n        /* \"--CODEGEN--\":18:32   */\n      dup3\n        /* \"--CODEGEN--\":14:39   */\n      add\n        /* \"--CODEGEN--\":11:51   */\n      gt\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_76\n      jumpi\n        /* \"--CODEGEN--\":64:65   */\n      0x00\n        /* \"--CODEGEN--\":61:62   */\n      dup1\n        /* \"--CODEGEN--\":54:66   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_76:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12537:12849  function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable, address owner) public initializer {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_77\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_77:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12537:12849  function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable, address owner) public initializer {... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":81:97   */\n      swap3\n      add\n        /* \"--CODEGEN--\":74:101   */\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12537:12849  function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable, address owner) public initializer {... */\n      swap3\n      swap6\n      swap5\n      swap4\n      0x20\n      dup2\n      add\n      swap4\n      pop\n      calldataload\n      swap2\n      pop\n      pop\n        /* \"--CODEGEN--\":27:38   */\n      0x0100000000\n        /* \"--CODEGEN--\":11:39   */\n      dup2\n      gt\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_78\n      jumpi\n        /* \"--CODEGEN--\":52:53   */\n      0x00\n        /* \"--CODEGEN--\":49:50   */\n      dup1\n        /* \"--CODEGEN--\":42:54   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_78:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12537:12849  function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable, address owner) public initializer {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":41:50   */\n      dup4\n        /* \"--CODEGEN--\":34:38   */\n      0x20\n        /* \"--CODEGEN--\":18:32   */\n      dup3\n        /* \"--CODEGEN--\":14:39   */\n      add\n        /* \"--CODEGEN--\":11:51   */\n      gt\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_79\n      jumpi\n        /* \"--CODEGEN--\":64:65   */\n      0x00\n        /* \"--CODEGEN--\":61:62   */\n      dup1\n        /* \"--CODEGEN--\":54:66   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_79:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12537:12849  function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable, address owner) public initializer {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_80\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_80:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12537:12849  function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable, address owner) public initializer {... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":81:97   */\n      swap3\n      add\n        /* \"--CODEGEN--\":74:101   */\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12537:12849  function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable, address owner) public initializer {... */\n      swap3\n      swap6\n      pop\n      pop\n      pop\n      dup2\n      calldataload\n      0xff\n      and\n      swap3\n      pop\n      pop\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x60\n      add\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_81\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13471:13703  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_20:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_83\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_83:\n      pop\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13471:13703  function transferOwnership(address newOwner) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_84\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14379:14471  function name() external override view returns (string memory) {... */\n    tag_25:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14459:14464  _name */\n      0x04\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14452:14464  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14427:14440  string memory */\n      0x60\n      swap4\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14452:14464  return _name */\n      swap1\n      swap3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14459:14464  _name */\n      swap1\n      swap2\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14452:14464  return _name */\n      dup4\n      add\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14459:14464  _name */\n      dup3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14452:14464  return _name */\n      dup3\n      dup1\n      iszero\n      tag_86\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_87\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_86)\n    tag_87:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_88:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_88\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_86:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14379:14471  function name() external override view returns (string memory) {... */\n    tag_85:\n      swap1\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15511:15671  function approve(address spender, uint256 amount) external override returns (bool) {... */\n    tag_32:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15588:15592  bool */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15604:15643  _approve(_msgSender(), spender, amount) */\n      tag_90\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15613:15625  _msgSender() */\n      tag_91\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15613:15623  _msgSender */\n      tag_92\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15613:15625  _msgSender() */\n      jump\t// in\n    tag_91:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15627:15634  spender */\n      dup5\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15636:15642  amount */\n      dup5\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15604:15612  _approve */\n      tag_93\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15604:15643  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_90:\n      pop\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15660:15664  true */\n      0x01\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15511:15671  function approve(address spender, uint256 amount) external override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14530:14630  function totalSupply() external override view returns (uint256) {... */\n    tag_34:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14611:14623  _totalSupply */\n      sload(0x03)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14530:14630  function totalSupply() external override view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16128:16439  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n    tag_37:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16228:16232  bool */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16244:16280  _transfer(sender, recipient, amount) */\n      tag_96\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16254:16260  sender */\n      dup5\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16262:16271  recipient */\n      dup5\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16273:16279  amount */\n      dup5\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16244:16253  _transfer */\n      tag_97\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16244:16280  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_96:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16290:16411  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      tag_98\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16299:16305  sender */\n      dup5\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16307:16319  _msgSender() */\n      tag_99\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16307:16317  _msgSender */\n      tag_92\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16307:16319  _msgSender() */\n      jump\t// in\n    tag_99:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16321:16410  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      tag_100\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16359:16365  amount */\n      dup6\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16321:16410  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16321:16340  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16321:16332  _allowances */\n      0x02\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16321:16340  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16341:16353  _msgSender() */\n      tag_101\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16341:16351  _msgSender */\n      tag_92\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16341:16353  _msgSender() */\n      jump\t// in\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16321:16354  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16321:16410  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      swap1\n      0xffffffff\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16321:16358  _allowances[sender][_msgSender()].sub */\n      tag_102\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16321:16410  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      and\n      jump\t// in\n    tag_100:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16290:16298  _approve */\n      tag_93\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16290:16411  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_98:\n      pop\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16428:16432  true */\n      0x01\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16128:16439  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14075:14167  function decimals() external override view returns (uint8) {... */\n    tag_39:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14151:14160  _decimals */\n      and(0xff, sload(0x06))\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14075:14167  function decimals() external override view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16833:17040  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_42:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16913:16917  bool */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16929:17012  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_90\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16938:16950  _msgSender() */\n      tag_106\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16938:16948  _msgSender */\n      tag_92\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16938:16950  _msgSender() */\n      jump\t// in\n    tag_106:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16952:16959  spender */\n      dup5\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16961:17011  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_100\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17000:17010  addedValue */\n      dup6\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16961:16972  _allowances */\n      0x02\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16961:16986  _allowances[_msgSender()] */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16973:16985  _msgSender() */\n      tag_108\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16973:16983  _msgSender */\n      tag_92\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16973:16985  _msgSender() */\n      jump\t// in\n    tag_108:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16961:16986  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16961:16995  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16961:17011  _allowances[_msgSender()][spender].add(addedValue) */\n      0xffffffff\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16961:16999  _allowances[_msgSender()][spender].add */\n      tag_109\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16961:17011  _allowances[_msgSender()][spender].add(addedValue) */\n      and\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18295:18412  function burn(uint256 amount) public returns (bool) {... */\n    tag_45:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18341:18345  bool */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18357:18384  _burn(_msgSender(), amount) */\n      tag_111\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18363:18375  _msgSender() */\n      tag_112\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18363:18373  _msgSender */\n      tag_92\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18363:18375  _msgSender() */\n      jump\t// in\n    tag_112:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18377:18383  amount */\n      dup4\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18357:18362  _burn */\n      tag_113\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18357:18384  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_111:\n      pop\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18401:18405  true */\n      0x01\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18295:18412  function burn(uint256 amount) public returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13777:13859  function mintable() external view returns (bool) {... */\n    tag_47:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13843:13852  _mintable */\n      sload(0x06)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13777:13859  function mintable() external view returns (bool) {... */\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14687:14806  function balanceOf(address account) external override view returns (uint256) {... */\n    tag_50:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14781:14799  _balances[account] */\n      and\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14755:14762  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14781:14799  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14781:14790  _balances */\n      0x01\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14781:14799  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14687:14806  function balanceOf(address account) external override view returns (uint256) {... */\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13185:13322  function renounceOwnership() public onlyOwner {... */\n    tag_52:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12401:12413  _msgSender() */\n      tag_117\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12401:12411  _msgSender */\n      tag_92\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12401:12413  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12391:12397  _owner */\n      sload(0x06)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12391:12413  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12383:12450  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_118\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_118:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13267:13273  _owner */\n      sload(0x06)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13246:13286  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13283:13284  0 */\n      0x00\n      swap2\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13267:13273  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13246:13286  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13283:13284  0 */\n      dup4\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13246:13286  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13296:13302  _owner */\n      0x06\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13296:13315  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      and\n      swap1\n      sstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13185:13322  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13922:14013  function getOwner() external override view returns (address) {... */\n    tag_54:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14000:14006  _owner */\n      sload(0x06)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13922:14013  function getOwner() external override view returns (address) {... */\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14227:14323  function symbol() external override view returns (string memory) {... */\n    tag_56:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14309:14316  _symbol */\n      0x05\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14302:14316  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14277:14290  string memory */\n      0x60\n      swap4\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14302:14316  return _symbol */\n      swap1\n      swap3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14309:14316  _symbol */\n      swap1\n      swap2\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14302:14316  return _symbol */\n      dup4\n      add\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14309:14316  _symbol */\n      dup3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14302:14316  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_86\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_87\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_86)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18026:18211  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_63:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18082:18086  bool */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12401:12413  _msgSender() */\n      tag_126\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12401:12411  _msgSender */\n      tag_92\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12401:12413  _msgSender() */\n      jump\t// in\n    tag_126:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12391:12397  _owner */\n      sload(0x06)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12391:12413  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12383:12450  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_127\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_127:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18106:18115  _mintable */\n      sload(0x06)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18098:18146  require(_mintable, \"this token is not mintable\") */\n      tag_129\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1a\n      0x24\n      dup3\n      add\n      mstore\n      0x7468697320746f6b656e206973206e6f74206d696e7461626c65000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_129:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18156:18183  _mint(_msgSender(), amount) */\n      tag_111\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18162:18174  _msgSender() */\n      tag_131\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18162:18172  _msgSender */\n      tag_92\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18162:18174  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18176:18182  amount */\n      dup4\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18156:18161  _mint */\n      tag_132\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18156:18183  _mint(_msgSender(), amount) */\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17526:17784  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_66:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17611:17615  bool */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17627:17756  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      tag_90\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17636:17648  _msgSender() */\n      tag_135\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17636:17646  _msgSender */\n      tag_92\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17636:17648  _msgSender() */\n      jump\t// in\n    tag_135:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17650:17657  spender */\n      dup5\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17659:17755  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      tag_100\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17698:17713  subtractedValue */\n      dup6\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17659:17755  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17659:17670  _allowances */\n      0x02\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17659:17684  _allowances[_msgSender()] */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17671:17683  _msgSender() */\n      tag_137\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17671:17681  _msgSender */\n      tag_92\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17671:17683  _msgSender() */\n      jump\t// in\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17659:17684  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17659:17693  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17659:17755  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      swap1\n      0xffffffff\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17659:17697  _allowances[_msgSender()][spender].sub */\n      tag_102\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17659:17755  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      and\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15008:15174  function transfer(address recipient, uint256 amount) external override returns (bool) {... */\n    tag_69:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15088:15092  bool */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15104:15146  _transfer(_msgSender(), recipient, amount) */\n      tag_90\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15114:15126  _msgSender() */\n      tag_140\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15114:15124  _msgSender */\n      tag_92\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15114:15126  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15128:15137  recipient */\n      dup5\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15139:15145  amount */\n      dup5\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15104:15113  _transfer */\n      tag_97\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15104:15146  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15231:15374  function allowance(address owner, address spender) external override view returns (uint256) {... */\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15340:15358  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15314:15321  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15340:15358  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15340:15351  _allowances */\n      0x02\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15340:15358  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15340:15367  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15231:15374  function allowance(address owner, address spender) external override view returns (uint256) {... */\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12537:12849  function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable, address owner) public initializer {... */\n    tag_81:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10622:10635  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10622:10655  _initializing || _isConstructor() */\n      tag_144\n      jumpi\n      pop\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10639:10655  _isConstructor() */\n      tag_144\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10639:10653  _isConstructor */\n      tag_145\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10639:10655  _isConstructor() */\n      jump\t// in\n    tag_144:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10622:10672  _initializing || _isConstructor() || !_initialized */\n      dup1\n      tag_146\n      jumpi\n      pop\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10660:10672  _initialized */\n      and(0xff, sload(0x00))\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10659:10672  !_initialized */\n      iszero\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10622:10672  _initializing || _isConstructor() || !_initialized */\n    tag_146:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10614:10723  require(_initializing || _isConstructor() || !_initialized, \"Initializable: contract is already initialized\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759\n      0x2e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10734:10753  bool isTopLevelCall */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10757:10770  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10756:10770  !_initializing */\n      iszero\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10780:10878  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_148\n      jumpi\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10814:10827  _initializing */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10814:10834  _initializing = true */\n      dup1\n      sload\n      not(0xff)\n      not(0xff00)\n      swap1\n      swap2\n      and\n      0x0100\n      or\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10848:10867  _initialized = true */\n      and\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10830:10834  true */\n      0x01\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10848:10867  _initialized = true */\n      or\n      swap1\n      sstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10780:10878  if (isTopLevelCall) {... */\n    tag_148:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12690:12696  _owner */\n      0x06\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12690:12704  _owner = owner */\n      dup1\n      sload\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      and\n      0x0100\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      mul\n      or\n      swap1\n      sstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12714:12726  _name = name */\n      dup7\n      mload\n      tag_150\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12714:12719  _name */\n      0x04\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12714:12726  _name = name */\n      0x20\n      dup11\n      add\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      pop\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12736:12752  _symbol = symbol */\n      dup6\n      mload\n      tag_152\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12736:12743  _symbol */\n      0x05\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12736:12752  _symbol = symbol */\n      0x20\n      dup10\n      add\n      swap1\n      tag_151\n      jump\t// in\n    tag_152:\n      pop\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12762:12771  _decimals */\n      0x06\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12762:12782  _decimals = decimals */\n      dup1\n      sload\n      not(0xff)\n      and\n      0xff\n      dup8\n      and\n      or\n      not(shl(0xa8, 0xff))\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12792:12812  _mintable = mintable */\n      and\n      shl(0xa8, 0x01)\n      dup6\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12822:12842  _mint(owner, amount) */\n      tag_153\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12828:12833  owner */\n      dup3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12835:12841  amount */\n      dup6\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12822:12827  _mint */\n      tag_132\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12822:12842  _mint(owner, amount) */\n      jump\t// in\n    tag_153:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10904:10918  isTopLevelCall */\n      dup1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10900:10966  if (isTopLevelCall) {... */\n      iszero\n      tag_154\n      jumpi\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10950:10955  false */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10934:10955  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10900:10966  if (isTopLevelCall) {... */\n    tag_154:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12537:12849  function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable, address owner) public initializer {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13471:13703  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_84:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12401:12413  _msgSender() */\n      tag_156\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12401:12411  _msgSender */\n      tag_92\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12401:12413  _msgSender() */\n      jump\t// in\n    tag_156:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12391:12397  _owner */\n      sload(0x06)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12391:12413  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12383:12450  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_157\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_157:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13551:13573  newOwner != address(0) */\n      dup2\n      and\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13543:13616  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13652:13658  _owner */\n      sload(0x06)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13631:13669  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup5\n      and\n      swap3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13652:13658  _owner */\n      0x0100\n      swap1\n      div\n      and\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13631:13669  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13679:13685  _owner */\n      0x06\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13679:13696  _owner = newOwner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      0x0100\n      mul\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13471:13703  function transferOwnership(address newOwner) public onlyOwner {... */\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":3606:3710  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_92:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":3693:3703  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":3606:3710  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":21008:21340  function _approve(address owner, address spender, uint256 amount) internal {... */\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":21101:21120  owner != address(0) */\n      dup4\n      and\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":21093:21161  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":21179:21200  spender != address(0) */\n      dup3\n      and\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":21171:21239  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":21250:21268  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":21250:21261  _allowances */\n      0x02\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":21250:21268  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":21250:21277  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":21250:21286  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":21301:21333  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":21008:21340  function _approve(address owner, address spender, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18886:19350  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_97:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18983:19003  sender != address(0) */\n      dup4\n      and\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18975:19045  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19063:19086  recipient != address(0) */\n      dup3\n      and\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19055:19126  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19157:19228  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_167\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19179:19185  amount */\n      dup2\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19157:19228  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19157:19174  _balances[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19157:19166  _balances */\n      0x01\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19157:19174  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19157:19228  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap1\n      0xffffffff\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19157:19178  _balances[sender].sub */\n      tag_102\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19157:19228  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      and\n      jump\t// in\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19137:19154  _balances[sender] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19137:19146  _balances */\n      0x01\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19137:19154  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19137:19228  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19261:19281  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19261:19293  _balances[recipient].add(amount) */\n      tag_168\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19286:19292  amount */\n      dup3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19261:19293  _balances[recipient].add(amount) */\n      0xffffffff\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19261:19285  _balances[recipient].add */\n      tag_109\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19261:19293  _balances[recipient].add(amount) */\n      and\n      jump\t// in\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19238:19258  _balances[recipient] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19238:19247  _balances */\n      0x01\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19238:19258  _balances[recipient] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19238:19293  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19308:19343  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19238:19258  _balances[recipient] */\n      swap2\n      swap4\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19308:19343  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18886:19350  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5674:5861  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_102:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5760:5767  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5795:5807  errorMessage */\n      dup2\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5787:5793  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5779:5808  require(b <= a, errorMessage) */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_171:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_173\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_171)\n    tag_173:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5779:5808  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_174\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_174:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5830:5835  a - b */\n      swap1\n      sub\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5674:5861  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":4802:4978  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_109:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":4860:4867  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":4891:4896  a + b */\n      dup3\n      dup3\n      add\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":4914:4920  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":4906:4952  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_176\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_176:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":4970:4971  c */\n      swap4\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":4802:4978  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20241:20583  function _burn(address account, uint256 amount) internal {... */\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20316:20337  account != address(0) */\n      dup3\n      and\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20308:20375  require(account != address(0), \"BEP20: burn from the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20407:20475  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      tag_179\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20430:20436  amount */\n      dup2\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20407:20475  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032\n      0x22\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20407:20425  _balances[account] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20407:20416  _balances */\n      0x01\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20407:20425  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20407:20475  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      swap1\n      0xffffffff\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20407:20429  _balances[account].sub */\n      tag_102\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20407:20475  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      and\n      jump\t// in\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20386:20404  _balances[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20386:20395  _balances */\n      0x01\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20386:20404  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20386:20475  _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      sstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20500:20512  _totalSupply */\n      sload(0x03)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20500:20524  _totalSupply.sub(amount) */\n      tag_180\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20517:20523  amount */\n      dup3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20500:20524  _totalSupply.sub(amount) */\n      0xffffffff\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20500:20516  _totalSupply.sub */\n      tag_181\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20500:20524  _totalSupply.sub(amount) */\n      and\n      jump\t// in\n    tag_180:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20485:20497  _totalSupply */\n      0x03\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20485:20524  _totalSupply = _totalSupply.sub(amount) */\n      sstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20539:20576  Transfer(account, address(0), amount) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20565:20566  0 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20539:20576  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20241:20583  function _burn(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19620:19922  function _mint(address account, uint256 amount) internal {... */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19695:19716  account != address(0) */\n      dup3\n      and\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19687:19752  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_183\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_183:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19778:19790  _totalSupply */\n      sload(0x03)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19778:19802  _totalSupply.add(amount) */\n      tag_184\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19795:19801  amount */\n      dup3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19778:19802  _totalSupply.add(amount) */\n      0xffffffff\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19778:19794  _totalSupply.add */\n      tag_109\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19778:19802  _totalSupply.add(amount) */\n      and\n      jump\t// in\n    tag_184:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19763:19775  _totalSupply */\n      0x03\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19763:19802  _totalSupply = _totalSupply.add(amount) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19833:19851  _balances[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19833:19842  _balances */\n      0x01\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19833:19851  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19833:19863  _balances[account].add(amount) */\n      tag_185\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19856:19862  amount */\n      dup3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19833:19863  _balances[account].add(amount) */\n      0xffffffff\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19833:19855  _balances[account].add */\n      tag_109\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19833:19863  _balances[account].add(amount) */\n      and\n      jump\t// in\n    tag_185:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19812:19830  _balances[account] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19812:19821  _balances */\n      0x01\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19812:19830  _balances[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19812:19863  _balances[account] = _balances[account].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19878:19915  Transfer(address(0), account, amount) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19812:19830  _balances[account] */\n      swap3\n      swap4\n      swap2\n      swap3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19878:19915  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19620:19922  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":11062:11655  function _isConstructor() private view returns (bool) {... */\n    tag_145:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":11498:11502  this */\n      address\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":11606:11623  extcodesize(self) */\n      extcodesize\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":11641:11648  cs == 0 */\n      iszero\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":11062:11655  function _isConstructor() private view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5249:5383  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_181:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5307:5314  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5333:5376  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_176\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5337:5338  a */\n      dup4\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5340:5341  b */\n      dup4\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5333:5376  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5333:5336  sub */\n      tag_102\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5333:5376  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_151:\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      0x1f\n      lt\n      tag_190\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_192)\n    tag_190:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_192\n      jumpi\n      swap2\n      dup3\n      add\n    tag_191:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_192\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_191)\n    tag_192:\n      pop\n      tag_193\n      swap3\n      swap2\n      pop\n      tag_194\n      jump\t// in\n    tag_193:\n      pop\n      swap1\n      jump\t// out\n    tag_194:\n      tag_85\n      swap2\n      swap1\n    tag_196:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_193\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_196)\n    stop\n    data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57 42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4 42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759 496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2 42455032303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855 42455032303a206275726e2066726f6d20746865207a65726f2061646472657373\n    data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032 42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365\n    data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5 42455032303a20617070726f766520746f20746865207a65726f2061646472657373\n\n    auxdata: 0xa2646970667358221220b533bbd1a5692e5441948b1b725074be1c97f71eef126c041ea84e9ab05bb8c164736f6c637827302e362e392d6e696768746c792e323032302e352e32382b636f6d6d69742e65653833303763650058\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13EF DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0xEF3EBCB8 EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4E2 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2F3 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x4BF365DF EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x297 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x145 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x18A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x59F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x64F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x658 JUMP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6D7 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x6F2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CF PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x123 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x826 JUMP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x906 JUMP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x974 JUMP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x988 JUMP JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP POP DUP2 CALLDATALOAD PUSH1 0xFF AND SWAP3 POP POP PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9B3 JUMP JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xACD JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x594 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x569 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x594 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x577 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B3 PUSH2 0x5AC PUSH2 0xBE8 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xBEC JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CF DUP5 DUP5 DUP5 PUSH2 0xCD8 JUMP JUMPDEST PUSH2 0x645 DUP5 PUSH2 0x5DB PUSH2 0xBE8 JUMP JUMPDEST PUSH2 0x640 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x126C PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x619 PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xE36 AND JUMP JUMPDEST PUSH2 0xBEC JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B3 PUSH2 0x665 PUSH2 0xBE8 JUMP JUMPDEST DUP5 PUSH2 0x640 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x676 PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xECD AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6BF PUSH2 0x6B9 PUSH2 0xBE8 JUMP JUMPDEST DUP4 PUSH2 0xF2E JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6FA PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x761 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x6 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x594 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x569 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x594 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x830 PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x897 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8F5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7468697320746F6B656E206973206E6F74206D696E7461626C65000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6BF PUSH2 0x900 PUSH2 0xBE8 JUMP JUMPDEST DUP4 PUSH2 0x102A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B3 PUSH2 0x913 PUSH2 0xBE8 JUMP JUMPDEST DUP5 PUSH2 0x640 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x93D PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xE36 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B3 PUSH2 0x981 PUSH2 0xBE8 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xCD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x9CC JUMPI POP PUSH2 0x9CC PUSH2 0x111C JUMP JUMPDEST DUP1 PUSH2 0x9DA JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xA15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1294 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xA40 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND MUL OR SWAP1 SSTORE DUP7 MLOAD PUSH2 0xA73 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP11 ADD SWAP1 PUSH2 0x1164 JUMP JUMPDEST POP DUP6 MLOAD PUSH2 0xA87 SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP10 ADD SWAP1 PUSH2 0x1164 JUMP JUMPDEST POP PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP8 AND OR PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL DUP6 ISZERO ISZERO MUL OR SWAP1 SSTORE PUSH2 0xAB2 DUP3 DUP6 PUSH2 0x102A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAC4 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAD5 PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xB3C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB81 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1246 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1222 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1373 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x11FD PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x12E8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDA5 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C2 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xE36 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xDDA SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xECD AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xEC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE8A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE72 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEB7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xF27 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1330 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFB6 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1351 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xE36 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x3 SLOAD PUSH2 0xFE2 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1122 AND JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1085 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1098 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xECD AND JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x10C4 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xECD AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF27 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xE36 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x11A5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x11D2 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x11D2 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x11D2 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x11B7 JUMP JUMPDEST POP PUSH2 0x11DE SWAP3 SWAP2 POP PUSH2 0x11E2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x59C SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x11DE JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x11E8 JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E6365496E PUSH10 0x7469616C697A61626C65 GASPRICE KECCAK256 PUSH4 0x6F6E7472 PUSH2 0x6374 KECCAK256 PUSH10 0x7320616C726561647920 PUSH10 0x6E697469616C697A6564 TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737342455032303A206275726E20616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65424550 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A2646970667358221220B533BBD1A569 0x2E SLOAD COINBASE SWAP5 DUP12 SHL PUSH19 0x5074BE1C97F71EEF126C041EA84E9AB05BB8C1 PUSH5 0x736F6C6378 0x27 ADDRESS 0x2E CALLDATASIZE 0x2E CODECOPY 0x2D PUSH15 0x696768746C792E323032302E352E32 CODESIZE 0x2B PUSH4 0x6F6D6D69 PUSH21 0x2E6565383330376365005800000000000000000000 ",
							"sourceMap": "11737:10012:0:-:0;;;12236:28;5:9:-1;2:2;;;27:1;24;17:12;2:2;12236:28:0;11737:10012;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0xEF3EBCB8 EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4E2 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2F3 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x4BF365DF EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x297 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x145 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x18A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x59F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x64F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x658 JUMP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6D7 JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x6F2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CF PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x123 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x826 JUMP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x906 JUMP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x974 JUMP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x988 JUMP JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP POP DUP2 CALLDATALOAD PUSH1 0xFF AND SWAP3 POP POP PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9B3 JUMP JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xACD JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x594 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x569 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x594 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x577 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B3 PUSH2 0x5AC PUSH2 0xBE8 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xBEC JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CF DUP5 DUP5 DUP5 PUSH2 0xCD8 JUMP JUMPDEST PUSH2 0x645 DUP5 PUSH2 0x5DB PUSH2 0xBE8 JUMP JUMPDEST PUSH2 0x640 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x126C PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x619 PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xE36 AND JUMP JUMPDEST PUSH2 0xBEC JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B3 PUSH2 0x665 PUSH2 0xBE8 JUMP JUMPDEST DUP5 PUSH2 0x640 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x676 PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xECD AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6BF PUSH2 0x6B9 PUSH2 0xBE8 JUMP JUMPDEST DUP4 PUSH2 0xF2E JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6FA PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x761 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x6 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x594 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x569 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x594 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x830 PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x897 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8F5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7468697320746F6B656E206973206E6F74206D696E7461626C65000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6BF PUSH2 0x900 PUSH2 0xBE8 JUMP JUMPDEST DUP4 PUSH2 0x102A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B3 PUSH2 0x913 PUSH2 0xBE8 JUMP JUMPDEST DUP5 PUSH2 0x640 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x93D PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xE36 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B3 PUSH2 0x981 PUSH2 0xBE8 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xCD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x9CC JUMPI POP PUSH2 0x9CC PUSH2 0x111C JUMP JUMPDEST DUP1 PUSH2 0x9DA JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xA15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1294 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xA40 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND MUL OR SWAP1 SSTORE DUP7 MLOAD PUSH2 0xA73 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP11 ADD SWAP1 PUSH2 0x1164 JUMP JUMPDEST POP DUP6 MLOAD PUSH2 0xA87 SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP10 ADD SWAP1 PUSH2 0x1164 JUMP JUMPDEST POP PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP8 AND OR PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL DUP6 ISZERO ISZERO MUL OR SWAP1 SSTORE PUSH2 0xAB2 DUP3 DUP6 PUSH2 0x102A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAC4 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAD5 PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xB3C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB81 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1246 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1222 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1373 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x11FD PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x12E8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDA5 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C2 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xE36 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xDDA SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xECD AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xEC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE8A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE72 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEB7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xF27 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1330 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFB6 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1351 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xE36 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x3 SLOAD PUSH2 0xFE2 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1122 AND JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1085 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1098 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xECD AND JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x10C4 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xECD AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF27 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xE36 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x11A5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x11D2 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x11D2 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x11D2 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x11B7 JUMP JUMPDEST POP PUSH2 0x11DE SWAP3 SWAP2 POP PUSH2 0x11E2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x59C SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x11DE JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x11E8 JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E6365496E PUSH10 0x7469616C697A61626C65 GASPRICE KECCAK256 PUSH4 0x6F6E7472 PUSH2 0x6374 KECCAK256 PUSH10 0x7320616C726561647920 PUSH10 0x6E697469616C697A6564 TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737342455032303A206275726E20616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65424550 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A2646970667358221220B533BBD1A569 0x2E SLOAD COINBASE SWAP5 DUP12 SHL PUSH19 0x5074BE1C97F71EEF126C041EA84E9AB05BB8C1 PUSH5 0x736F6C6378 0x27 ADDRESS 0x2E CALLDATASIZE 0x2E CODECOPY 0x2D PUSH15 0x696768746C792E323032302E352E32 CODESIZE 0x2B PUSH4 0x6F6D6D69 PUSH21 0x2E6565383330376365005800000000000000000000 ",
							"sourceMap": "11737:10012:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;11737:10012:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;14379:92:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14379:92:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15511:160;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;15511:160:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;14530:100;;;:::i;:::-;;;;;;;;;;;;;;;;16128:311;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;16128:311:0;;;;;;;;;;;;;;;;;:::i;14075:92::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;16833:207;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;16833:207:0;;;;;;;;:::i;18295:117::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;18295:117:0;;:::i;13777:82::-;;;:::i;14687:119::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;14687:119:0;-1:-1:-1;;;;;14687:119:0;;:::i;13185:137::-;;;:::i;:::-;;13922:91;;;:::i;:::-;;;;-1:-1:-1;;;;;13922:91:0;;;;;;;;;;;;;;14227:96;;;:::i;18026:185::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;18026:185:0;;:::i;17526:258::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;17526:258:0;;;;;;;;:::i;15008:166::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;15008:166:0;;;;;;;;:::i;15231:143::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;15231:143:0;;;;;;;;;;:::i;12537:312::-;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;12537:312:0;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;12537:312:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;12537:312:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;12537:312:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;12537:312:0;;;;;;;;-1:-1:-1;12537:312:0;;-1:-1:-1;;27:11;11:28;;8:2;;;52:1;49;42:12;8:2;12537:312:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;12537:312:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;12537:312:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;12537:312:0;;-1:-1:-1;;;12537:312:0;;;;;-1:-1:-1;;12537:312:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;12537:312:0;;:::i;13471:232::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;13471:232:0;-1:-1:-1;;;;;13471:232:0;;:::i;14379:92::-;14459:5;14452:12;;;;;;;;-1:-1:-1;;14452:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14427:13;;14452:12;;14459:5;;14452:12;;14459:5;14452:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14379:92;;:::o;15511:160::-;15588:4;15604:39;15613:12;:10;:12::i;:::-;15627:7;15636:6;15604:8;:39::i;:::-;-1:-1:-1;15660:4:0;15511:160;;;;:::o;14530:100::-;14611:12;;14530:100;:::o;16128:311::-;16228:4;16244:36;16254:6;16262:9;16273:6;16244:9;:36::i;:::-;16290:121;16299:6;16307:12;:10;:12::i;:::-;16321:89;16359:6;16321:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16321:19:0;;;;;;:11;:19;;;;;;16341:12;:10;:12::i;:::-;-1:-1:-1;;;;;16321:33:0;;;;;;;;;;;;-1:-1:-1;16321:33:0;;;:89;;:37;:89;:::i;:::-;16290:8;:121::i;:::-;-1:-1:-1;16428:4:0;16128:311;;;;;:::o;14075:92::-;14151:9;;;;14075:92;:::o;16833:207::-;16913:4;16929:83;16938:12;:10;:12::i;:::-;16952:7;16961:50;17000:10;16961:11;:25;16973:12;:10;:12::i;:::-;-1:-1:-1;;;;;16961:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;16961:25:0;;;:34;;;;;;;;;;;:50;:38;:50;:::i;18295:117::-;18341:4;18357:27;18363:12;:10;:12::i;:::-;18377:6;18357:5;:27::i;:::-;-1:-1:-1;18401:4:0;18295:117;;;:::o;13777:82::-;13843:9;;-1:-1:-1;;;13843:9:0;;;;;13777:82::o;14687:119::-;-1:-1:-1;;;;;14781:18:0;14755:7;14781:18;;;:9;:18;;;;;;;14687:119::o;13185:137::-;12401:12;:10;:12::i;:::-;12391:6;;;;;-1:-1:-1;;;;;12391:6:0;;;:22;;;12383:67;;;;;-1:-1:-1;;;12383:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13267:6:::1;::::0;13246:40:::1;::::0;13283:1:::1;::::0;13267:6:::1;::::0;::::1;-1:-1:-1::0;;;;;13267:6:0::1;::::0;13246:40:::1;::::0;13283:1;;13246:40:::1;13296:6;:19:::0;;-1:-1:-1;;;;;;13296:19:0::1;::::0;;13185:137::o;13922:91::-;14000:6;;;;;-1:-1:-1;;;;;14000:6:0;;13922:91::o;14227:96::-;14309:7;14302:14;;;;;;;;-1:-1:-1;;14302:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14277:13;;14302:14;;14309:7;;14302:14;;14309:7;14302:14;;;;;;;;;;;;;;;;;;;;;;;;18026:185;18082:4;12401:12;:10;:12::i;:::-;12391:6;;;;;-1:-1:-1;;;;;12391:6:0;;;:22;;;12383:67;;;;;-1:-1:-1;;;12383:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18106:9:::1;::::0;-1:-1:-1;;;18106:9:0;::::1;;;18098:48;;;::::0;;-1:-1:-1;;;18098:48:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;18156:27;18162:12;:10;:12::i;:::-;18176:6;18156:5;:27::i;17526:258::-:0;17611:4;17627:129;17636:12;:10;:12::i;:::-;17650:7;17659:96;17698:15;17659:96;;;;;;;;;;;;;;;;;:11;:25;17671:12;:10;:12::i;:::-;-1:-1:-1;;;;;17659:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;17659:25:0;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;15008:166::-;15088:4;15104:42;15114:12;:10;:12::i;:::-;15128:9;15139:6;15104:9;:42::i;15231:143::-;-1:-1:-1;;;;;15340:18:0;;;15314:7;15340:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;15231:143::o;12537:312::-;10622:13;;;;;;;;:33;;;10639:16;:14;:16::i;:::-;10622:50;;;-1:-1:-1;10660:12:0;;;;10659:13;10622:50;10614:109;;;;-1:-1:-1;;;10614:109:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10734:19;10757:13;;;;;;10756:14;10780:98;;;;10814:13;:20;;-1:-1:-1;;;;10814:20:0;;;;;10848:19;10830:4;10848:19;;;10780:98;12690:6:::1;:14:::0;;-1:-1:-1;;;;;;12690:14:0::1;;-1:-1:-1::0;;;;;12690:14:0;::::1;;;::::0;;12714:12;;::::1;::::0;:5:::1;::::0;:12:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;12736:16:0;;::::1;::::0;:7:::1;::::0;:16:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;12762:9:0::1;:20:::0;;-1:-1:-1;;12762:20:0::1;;::::0;::::1;;-1:-1:-1::0;;;;12792:20:0::1;-1:-1:-1::0;;;12792:20:0;::::1;;;;::::0;;12822::::1;12828:5:::0;12835:6;12822:5:::1;:20::i;:::-;10904:14:::0;10900:66;;;10950:5;10934:21;;-1:-1:-1;;10934:21:0;;;10900:66;12537:312;;;;;;;:::o;13471:232::-;12401:12;:10;:12::i;:::-;12391:6;;;;;-1:-1:-1;;;;;12391:6:0;;;:22;;;12383:67;;;;;-1:-1:-1;;;12383:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13551:22:0;::::1;13543:73;;;;-1:-1:-1::0;;;13543:73:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13652:6;::::0;13631:38:::1;::::0;-1:-1:-1;;;;;13631:38:0;;::::1;::::0;13652:6:::1;::::0;::::1;;::::0;13631:38:::1;::::0;;;::::1;13679:6;:17:::0;;-1:-1:-1;;;;;13679:17:0;;::::1;;;-1:-1:-1::0;;;;;;13679:17:0;;::::1;::::0;;;::::1;::::0;;13471:232::o;3606:104::-;3693:10;3606:104;:::o;21008:332::-;-1:-1:-1;;;;;21101:19:0;;21093:68;;;;-1:-1:-1;;;21093:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21179:21:0;;21171:68;;;;-1:-1:-1;;;21171:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21250:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;21301:32;;;;;;;;;;;;;;;;;21008:332;;;:::o;18886:464::-;-1:-1:-1;;;;;18983:20:0;;18975:70;;;;-1:-1:-1;;;18975:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19063:23:0;;19055:71;;;;-1:-1:-1;;;19055:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19157;19179:6;19157:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19157:17:0;;;;;;:9;:17;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;19137:17:0;;;;;;;:9;:17;;;;;;:91;;;;19261:20;;;;;;;:32;;19286:6;19261:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;19238:20:0;;;;;;;:9;:20;;;;;;;;;:55;;;;19308:35;;;;;;;19238:20;;19308:35;;;;;;;;;;;;;18886:464;;;:::o;5674:187::-;5760:7;5795:12;5787:6;;;;5779:29;;;;-1:-1:-1;;;5779:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5779:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5830:5:0;;;5674:187::o;4802:176::-;4860:7;4891:5;;;4914:6;;;;4906:46;;;;;-1:-1:-1;;;4906:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;4970:1;4802:176;-1:-1:-1;;;4802:176:0:o;20241:342::-;-1:-1:-1;;;;;20316:21:0;;20308:67;;;;-1:-1:-1;;;20308:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20407:68;20430:6;20407:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20407:18:0;;;;;;:9;:18;;;;;;;:68;;:22;:68;:::i;:::-;-1:-1:-1;;;;;20386:18:0;;;;;;:9;:18;;;;;:89;20500:12;;:24;;20517:6;20500:24;:16;:24;:::i;:::-;20485:12;:39;20539:37;;;;;;;;20565:1;;-1:-1:-1;;;;;20539:37:0;;;;;;;;;;;;20241:342;;:::o;19620:302::-;-1:-1:-1;;;;;19695:21:0;;19687:65;;;;;-1:-1:-1;;;19687:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;19778:12;;:24;;19795:6;19778:24;:16;:24;:::i;:::-;19763:12;:39;-1:-1:-1;;;;;19833:18:0;;;;;;:9;:18;;;;;;:30;;19856:6;19833:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;19812:18:0;;;;;;:9;:18;;;;;;;;:51;;;;19878:37;;;;;;;19812:18;;;;19878:37;;;;;;;;;;19620:302;;:::o;11062:593::-;11498:4;11606:17;11641:7;11062:593;:::o;5249:134::-;5307:7;5333:43;5337:1;5340;5333:43;;;;;;;;;;;;;;;;;:3;:43::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1020600",
								"executionCost": "1061",
								"totalCost": "1021661"
							},
							"external": {
								"allowance(address,address)": "1316",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1253",
								"burn(uint256)": "infinite",
								"decimals()": "1036",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "1093",
								"increaseAllowance(address,uint256)": "infinite",
								"initialize(string,string,uint8,uint256,bool,address)": "infinite",
								"mint(uint256)": "infinite",
								"mintable()": "1116",
								"name()": "infinite",
								"renounceOwnership()": "24246",
								"symbol()": "infinite",
								"totalSupply()": "1066",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 11737,
									"end": 21749,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 11737,
									"end": 21749,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11737,
									"end": 21749,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12236,
									"end": 12264,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 12236,
									"end": 12264,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11737,
									"end": 21749,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11737,
									"end": 21749,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11737,
									"end": 21749,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11737,
									"end": 21749,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11737,
									"end": 21749,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 11737,
									"end": 21749,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11737,
									"end": 21749,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b533bbd1a5692e5441948b1b725074be1c97f71eef126c041ea84e9ab05bb8c164736f6c637827302e362e392d6e696768746c792e323032302e352e32382b636f6d6d69742e65653833303763650058",
									".code": [
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH",
											"source": 0,
											"value": "EF3EBCB8"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH",
											"source": 0,
											"value": "A0712D68"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH",
											"source": 0,
											"value": "4BF365DF"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11737,
											"end": 21749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "26"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "28"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "26"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "28"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "31"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "31"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14630,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14530,
											"end": 14630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14530,
											"end": 14630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14530,
											"end": 14630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14530,
											"end": 14630,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14530,
											"end": 14630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14530,
											"end": 14630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14630,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14630,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14630,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14530,
											"end": 14630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14630,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "36"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "36"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14075,
											"end": 14167,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 14075,
											"end": 14167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14075,
											"end": 14167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 14075,
											"end": 14167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 14075,
											"end": 14167,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14075,
											"end": 14167,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 14075,
											"end": 14167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14075,
											"end": 14167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14075,
											"end": 14167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14075,
											"end": 14167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14075,
											"end": 14167,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14075,
											"end": 14167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14075,
											"end": 14167,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14075,
											"end": 14167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14075,
											"end": 14167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14075,
											"end": 14167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14075,
											"end": 14167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14075,
											"end": 14167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14075,
											"end": 14167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14075,
											"end": 14167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14075,
											"end": 14167,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14075,
											"end": 14167,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14075,
											"end": 14167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14075,
											"end": 14167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14075,
											"end": 14167,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16833,
											"end": 17040,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 16833,
											"end": 17040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16833,
											"end": 17040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 16833,
											"end": 17040,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16833,
											"end": 17040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16833,
											"end": 17040,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16833,
											"end": 17040,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "41"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "41"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16833,
											"end": 17040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16833,
											"end": 17040,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16833,
											"end": 17040,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16833,
											"end": 17040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16833,
											"end": 17040,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16833,
											"end": 17040,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16833,
											"end": 17040,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16833,
											"end": 17040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 16833,
											"end": 17040,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18295,
											"end": 18412,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 18295,
											"end": 18412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18295,
											"end": 18412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 18295,
											"end": 18412,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18295,
											"end": 18412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18295,
											"end": 18412,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18295,
											"end": 18412,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "44"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "44"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18295,
											"end": 18412,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 18295,
											"end": 18412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 18295,
											"end": 18412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13777,
											"end": 13859,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 13777,
											"end": 13859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 13777,
											"end": 13859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 13777,
											"end": 13859,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14687,
											"end": 14806,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 14687,
											"end": 14806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14687,
											"end": 14806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14687,
											"end": 14806,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14687,
											"end": 14806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14687,
											"end": 14806,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14687,
											"end": 14806,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "49"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "49"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14687,
											"end": 14806,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14687,
											"end": 14806,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14687,
											"end": 14806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 14687,
											"end": 14806,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13185,
											"end": 13322,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13185,
											"end": 13322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 13185,
											"end": 13322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 13185,
											"end": 13322,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13185,
											"end": 13322,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 13185,
											"end": 13322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13322,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14013,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13922,
											"end": 14013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13922,
											"end": 14013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13922,
											"end": 14013,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13922,
											"end": 14013,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13922,
											"end": 14013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13922,
											"end": 14013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14013,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13922,
											"end": 14013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14013,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14013,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14013,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14013,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14013,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14013,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13922,
											"end": 14013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14013,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14227,
											"end": 14323,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 14227,
											"end": 14323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14227,
											"end": 14323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14227,
											"end": 14323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14227,
											"end": 14323,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18026,
											"end": 18211,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 18026,
											"end": 18211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18026,
											"end": 18211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 18026,
											"end": 18211,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18026,
											"end": 18211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18026,
											"end": 18211,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18026,
											"end": 18211,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "62"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "62"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18026,
											"end": 18211,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 18026,
											"end": 18211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 18026,
											"end": 18211,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17526,
											"end": 17784,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 17526,
											"end": 17784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17526,
											"end": 17784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 17526,
											"end": 17784,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17526,
											"end": 17784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17526,
											"end": 17784,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17526,
											"end": 17784,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "65"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "65"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17526,
											"end": 17784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17526,
											"end": 17784,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17526,
											"end": 17784,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17526,
											"end": 17784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17526,
											"end": 17784,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17526,
											"end": 17784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17526,
											"end": 17784,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17526,
											"end": 17784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 17526,
											"end": 17784,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15008,
											"end": 15174,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 15008,
											"end": 15174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 15008,
											"end": 15174,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15008,
											"end": 15174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15174,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15174,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "68"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "68"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15008,
											"end": 15174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15174,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15174,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15174,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15008,
											"end": 15174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15174,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 15008,
											"end": 15174,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15231,
											"end": 15374,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 15231,
											"end": 15374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 15231,
											"end": 15374,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15231,
											"end": 15374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15374,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15374,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "71"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "71"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15231,
											"end": 15374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15374,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15374,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15374,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15231,
											"end": 15374,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15374,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 15231,
											"end": 15374,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 18,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 19,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "74"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 32,
											"end": 33,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22,
											"end": 34,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "74"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27,
											"end": 38,
											"name": "PUSH",
											"source": -1,
											"value": "100000000"
										},
										{
											"begin": 11,
											"end": 39,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 11,
											"end": 39,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "75"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 52,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 42,
											"end": 54,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "75"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41,
											"end": 50,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 34,
											"end": 38,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 18,
											"end": 32,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14,
											"end": 39,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11,
											"end": 51,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "76"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 64,
											"end": 65,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 62,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 54,
											"end": 66,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "76"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"source": -1,
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "77"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "77"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 74,
											"end": 101,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 74,
											"end": 101,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 74,
											"end": 101,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27,
											"end": 38,
											"name": "PUSH",
											"source": -1,
											"value": "100000000"
										},
										{
											"begin": 11,
											"end": 39,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 11,
											"end": 39,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "78"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 52,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 42,
											"end": 54,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "78"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41,
											"end": 50,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 34,
											"end": 38,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 18,
											"end": 32,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14,
											"end": 39,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11,
											"end": 51,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "79"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 64,
											"end": 65,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 62,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 54,
											"end": 66,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "79"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"source": -1,
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 74,
											"end": 101,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 74,
											"end": 101,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 74,
											"end": 101,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13471,
											"end": 13703,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13471,
											"end": 13703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13471,
											"end": 13703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 13471,
											"end": 13703,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13471,
											"end": 13703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13471,
											"end": 13703,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13471,
											"end": 13703,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "83"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "83"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13471,
											"end": 13703,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13471,
											"end": 13703,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13471,
											"end": 13703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 13471,
											"end": 13703,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14459,
											"end": 14464,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14427,
											"end": 14440,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14427,
											"end": 14440,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14459,
											"end": 14464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14459,
											"end": 14464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14459,
											"end": 14464,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14379,
											"end": 14471,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15588,
											"end": 15592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15604,
											"end": 15643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 15613,
											"end": 15625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 15613,
											"end": 15623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 15613,
											"end": 15625,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15613,
											"end": 15625,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 15613,
											"end": 15625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15627,
											"end": 15634,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15636,
											"end": 15642,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15604,
											"end": 15612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 15604,
											"end": 15643,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15604,
											"end": 15643,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 15604,
											"end": 15643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15660,
											"end": 15664,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15511,
											"end": 15671,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14530,
											"end": 14630,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14530,
											"end": 14630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14611,
											"end": 14623,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14611,
											"end": 14623,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14630,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16228,
											"end": 16232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16244,
											"end": 16280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 16254,
											"end": 16260,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16262,
											"end": 16271,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16273,
											"end": 16279,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16244,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 16244,
											"end": 16280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16244,
											"end": 16280,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 16244,
											"end": 16280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16290,
											"end": 16411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 16299,
											"end": 16305,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16307,
											"end": 16319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 16307,
											"end": 16317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 16307,
											"end": 16319,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16307,
											"end": 16319,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 16307,
											"end": 16319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16359,
											"end": 16365,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16321,
											"end": 16410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16410,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16321,
											"end": 16410,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16321,
											"end": 16410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16410,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 16321,
											"end": 16410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16410,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16321,
											"end": 16410,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16410,
											"name": "PUSH data",
											"source": 0,
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 16321,
											"end": 16410,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 16321,
											"end": 16410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16410,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16321,
											"end": 16340,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16321,
											"end": 16340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16332,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16321,
											"end": 16340,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16321,
											"end": 16340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16321,
											"end": 16340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16340,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16341,
											"end": 16353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 16341,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 16341,
											"end": 16353,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16341,
											"end": 16353,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 16341,
											"end": 16353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16321,
											"end": 16354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16354,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16321,
											"end": 16354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16354,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16321,
											"end": 16354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 16321,
											"end": 16354,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16321,
											"end": 16358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 16321,
											"end": 16410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16321,
											"end": 16410,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16321,
											"end": 16410,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16321,
											"end": 16410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16290,
											"end": 16298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 16290,
											"end": 16411,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16290,
											"end": 16411,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 16290,
											"end": 16411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16428,
											"end": 16432,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16128,
											"end": 16439,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14075,
											"end": 14167,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 14075,
											"end": 14167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14151,
											"end": 14160,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14151,
											"end": 14160,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14151,
											"end": 14160,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14151,
											"end": 14160,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14075,
											"end": 14167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14075,
											"end": 14167,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16833,
											"end": 17040,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 16833,
											"end": 17040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16913,
											"end": 16917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16929,
											"end": 17012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 16938,
											"end": 16950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 16938,
											"end": 16948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 16938,
											"end": 16950,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16938,
											"end": 16950,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 16938,
											"end": 16950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16952,
											"end": 16959,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 17011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 17000,
											"end": 17010,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 16972,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16961,
											"end": 16986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16973,
											"end": 16985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 16973,
											"end": 16983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 16973,
											"end": 16985,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16973,
											"end": 16985,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 16973,
											"end": 16985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16961,
											"end": 16986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 16986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 16986,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 16986,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 16986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 16986,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16961,
											"end": 16986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 16986,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 16986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 16986,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 16986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 16986,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 16986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 16986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16961,
											"end": 16986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 16986,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 16986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 16961,
											"end": 16986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 16986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 16986,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 16995,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 16995,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 16995,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 16995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 16995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 16995,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 16995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 16995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 16995,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 16995,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 16995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 17011,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16961,
											"end": 16999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 16961,
											"end": 17011,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16961,
											"end": 17011,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18295,
											"end": 18412,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 18295,
											"end": 18412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18341,
											"end": 18345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18357,
											"end": 18384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 18363,
											"end": 18375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 18363,
											"end": 18373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 18363,
											"end": 18375,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18363,
											"end": 18375,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 18363,
											"end": 18375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18377,
											"end": 18383,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18357,
											"end": 18362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 18357,
											"end": 18384,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18357,
											"end": 18384,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 18357,
											"end": 18384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18401,
											"end": 18405,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18295,
											"end": 18412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18295,
											"end": 18412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18295,
											"end": 18412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18295,
											"end": 18412,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13777,
											"end": 13859,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 13777,
											"end": 13859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13843,
											"end": 13852,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13843,
											"end": 13852,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13843,
											"end": 13852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13843,
											"end": 13852,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13843,
											"end": 13852,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 13843,
											"end": 13852,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13843,
											"end": 13852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13859,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14687,
											"end": 14806,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 14687,
											"end": 14806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14781,
											"end": 14799,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14755,
											"end": 14762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14781,
											"end": 14799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14781,
											"end": 14799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14781,
											"end": 14799,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14781,
											"end": 14790,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14781,
											"end": 14799,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14781,
											"end": 14799,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14781,
											"end": 14799,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14781,
											"end": 14799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14781,
											"end": 14799,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14781,
											"end": 14799,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14781,
											"end": 14799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14687,
											"end": 14806,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13185,
											"end": 13322,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 13185,
											"end": 13322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12401,
											"end": 12413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 12401,
											"end": 12411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 12401,
											"end": 12413,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12401,
											"end": 12413,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 12401,
											"end": 12413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12397,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12391,
											"end": 12397,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12397,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12391,
											"end": 12397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12397,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12391,
											"end": 12397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12397,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12413,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12413,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13267,
											"end": 13273,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13267,
											"end": 13273,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13246,
											"end": 13286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13246,
											"end": 13286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13283,
											"end": 13284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13283,
											"end": 13284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13267,
											"end": 13273,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13267,
											"end": 13273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13267,
											"end": 13273,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13267,
											"end": 13273,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13267,
											"end": 13273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13246,
											"end": 13286,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 13246,
											"end": 13286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13283,
											"end": 13284,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13283,
											"end": 13284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13246,
											"end": 13286,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13296,
											"end": 13302,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13296,
											"end": 13315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13296,
											"end": 13315,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13296,
											"end": 13315,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13296,
											"end": 13315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13296,
											"end": 13315,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13185,
											"end": 13322,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13922,
											"end": 14013,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13922,
											"end": 14013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14000,
											"end": 14006,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14000,
											"end": 14006,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14000,
											"end": 14006,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14000,
											"end": 14006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14000,
											"end": 14006,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14000,
											"end": 14006,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14000,
											"end": 14006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14013,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14227,
											"end": 14323,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14227,
											"end": 14323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14316,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14277,
											"end": 14290,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14277,
											"end": 14290,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14316,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14302,
											"end": 14316,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18026,
											"end": 18211,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 18026,
											"end": 18211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18082,
											"end": 18086,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12401,
											"end": 12413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 12401,
											"end": 12411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 12401,
											"end": 12413,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12401,
											"end": 12413,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 12401,
											"end": 12413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12397,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12391,
											"end": 12397,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12397,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12391,
											"end": 12397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12397,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12391,
											"end": 12397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12397,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12413,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12413,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18106,
											"end": 18115,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 18106,
											"end": 18115,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18106,
											"end": 18115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18106,
											"end": 18115,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18106,
											"end": 18115,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 18106,
											"end": 18115,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "PUSH",
											"source": 0,
											"value": "7468697320746F6B656E206973206E6F74206D696E7461626C65000000000000"
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 18098,
											"end": 18146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18156,
											"end": 18183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 18162,
											"end": 18174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 18162,
											"end": 18172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 18162,
											"end": 18174,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18162,
											"end": 18174,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 18162,
											"end": 18174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18176,
											"end": 18182,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18156,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 18156,
											"end": 18183,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17526,
											"end": 17784,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 17526,
											"end": 17784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17611,
											"end": 17615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17627,
											"end": 17756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 17636,
											"end": 17648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 17636,
											"end": 17646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 17636,
											"end": 17648,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17636,
											"end": 17648,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 17636,
											"end": 17648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17650,
											"end": 17657,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 17698,
											"end": 17713,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17659,
											"end": 17755,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17755,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17659,
											"end": 17755,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17659,
											"end": 17755,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17755,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 17659,
											"end": 17755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17755,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17755,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17659,
											"end": 17755,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17755,
											"name": "PUSH data",
											"source": 0,
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 17659,
											"end": 17755,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 17659,
											"end": 17755,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17755,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17670,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17659,
											"end": 17684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17671,
											"end": 17683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 17671,
											"end": 17681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 17671,
											"end": 17683,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17671,
											"end": 17683,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 17671,
											"end": 17683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17659,
											"end": 17684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17684,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17684,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17659,
											"end": 17684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17684,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17684,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17684,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17684,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17684,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17684,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17659,
											"end": 17684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17684,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 17659,
											"end": 17684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17684,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17693,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17693,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17693,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17693,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17693,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17755,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17659,
											"end": 17697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 17659,
											"end": 17755,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17659,
											"end": 17755,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15008,
											"end": 15174,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 15008,
											"end": 15174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15088,
											"end": 15092,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15104,
											"end": 15146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 15114,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 15114,
											"end": 15124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 15114,
											"end": 15126,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15114,
											"end": 15126,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 15114,
											"end": 15126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15128,
											"end": 15137,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15139,
											"end": 15145,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 15104,
											"end": 15146,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15231,
											"end": 15374,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 15231,
											"end": 15374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15340,
											"end": 15358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15340,
											"end": 15358,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15340,
											"end": 15358,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15314,
											"end": 15321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15340,
											"end": 15358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15340,
											"end": 15358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15340,
											"end": 15358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15340,
											"end": 15351,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15340,
											"end": 15358,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15340,
											"end": 15358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15340,
											"end": 15358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15340,
											"end": 15358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15340,
											"end": 15358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15340,
											"end": 15358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15340,
											"end": 15358,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15340,
											"end": 15358,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15340,
											"end": 15367,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15340,
											"end": 15367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15340,
											"end": 15367,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15340,
											"end": 15367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15340,
											"end": 15367,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15340,
											"end": 15367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15340,
											"end": 15367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15340,
											"end": 15367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15340,
											"end": 15367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15340,
											"end": 15367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15340,
											"end": 15367,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15340,
											"end": 15367,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15340,
											"end": 15367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15231,
											"end": 15374,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10622,
											"end": 10635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10622,
											"end": 10635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10622,
											"end": 10635,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10622,
											"end": 10635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10622,
											"end": 10635,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10622,
											"end": 10635,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10622,
											"end": 10635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10622,
											"end": 10635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10622,
											"end": 10655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 10622,
											"end": 10655,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10622,
											"end": 10655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10639,
											"end": 10655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 10639,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 10639,
											"end": 10655,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10639,
											"end": 10655,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 10639,
											"end": 10655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10622,
											"end": 10672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10622,
											"end": 10672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 10622,
											"end": 10672,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10660,
											"end": 10672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10660,
											"end": 10672,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10660,
											"end": 10672,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10660,
											"end": 10672,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10659,
											"end": 10672,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10622,
											"end": 10672,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 10622,
											"end": 10672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "PUSH",
											"source": 0,
											"value": "2E"
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "PUSH data",
											"source": 0,
											"value": "7A2A4E26842155EA933FE6EB6E3137EB5A296DCDF55721C552BE7B4C3CC23759"
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "PUSH",
											"source": 0,
											"value": "2E"
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 10614,
											"end": 10723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10734,
											"end": 10753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10757,
											"end": 10770,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10770,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10757,
											"end": 10770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10770,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10770,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10757,
											"end": 10770,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10756,
											"end": 10770,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10780,
											"end": 10878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10780,
											"end": 10878,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10780,
											"end": 10878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 10780,
											"end": 10878,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10814,
											"end": 10827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10848,
											"end": 10867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10830,
											"end": 10834,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10848,
											"end": 10867,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10848,
											"end": 10867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10848,
											"end": 10867,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10780,
											"end": 10878,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 10780,
											"end": 10878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12690,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12690,
											"end": 12704,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12690,
											"end": 12704,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12690,
											"end": 12704,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12690,
											"end": 12704,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12690,
											"end": 12704,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12690,
											"end": 12704,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12690,
											"end": 12704,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12690,
											"end": 12704,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12690,
											"end": 12704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12690,
											"end": 12704,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12714,
											"end": 12726,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12714,
											"end": 12726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12714,
											"end": 12726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 12714,
											"end": 12726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12714,
											"end": 12719,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12714,
											"end": 12719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12714,
											"end": 12726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12714,
											"end": 12726,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 12714,
											"end": 12726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12714,
											"end": 12726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12714,
											"end": 12726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 12714,
											"end": 12726,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12714,
											"end": 12726,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 12714,
											"end": 12726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12736,
											"end": 12752,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12736,
											"end": 12752,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12736,
											"end": 12752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 12736,
											"end": 12752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12736,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12736,
											"end": 12743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12736,
											"end": 12752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12736,
											"end": 12752,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 12736,
											"end": 12752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12736,
											"end": 12752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12736,
											"end": 12752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 12736,
											"end": 12752,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12736,
											"end": 12752,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 12736,
											"end": 12752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12762,
											"end": 12771,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12762,
											"end": 12782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12762,
											"end": 12782,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12762,
											"end": 12782,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12762,
											"end": 12782,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 12762,
											"end": 12782,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12762,
											"end": 12782,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12762,
											"end": 12782,
											"name": "OR",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12792,
											"end": 12812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12792,
											"end": 12812,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12792,
											"end": 12812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12792,
											"end": 12812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12792,
											"end": 12812,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12792,
											"end": 12812,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12792,
											"end": 12812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12792,
											"end": 12812,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 12828,
											"end": 12833,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12835,
											"end": 12841,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12822,
											"end": 12827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 12822,
											"end": 12842,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12822,
											"end": 12842,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 12822,
											"end": 12842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10904,
											"end": 10918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10900,
											"end": 10966,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10900,
											"end": 10966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 10900,
											"end": 10966,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10950,
											"end": 10955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10934,
											"end": 10955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10955,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10934,
											"end": 10955,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10955,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10900,
											"end": 10966,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 10900,
											"end": 10966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12849,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13471,
											"end": 13703,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 13471,
											"end": 13703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12401,
											"end": 12413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 12401,
											"end": 12411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 12401,
											"end": 12413,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12401,
											"end": 12413,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 12401,
											"end": 12413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12397,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12391,
											"end": 12397,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12397,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12391,
											"end": 12397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12397,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12391,
											"end": 12397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12397,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12413,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12413,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 12383,
											"end": 12450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13551,
											"end": 13573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13551,
											"end": 13573,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "PUSH data",
											"source": 0,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 13543,
											"end": 13616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13652,
											"end": 13658,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13652,
											"end": 13658,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13669,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13631,
											"end": 13669,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13631,
											"end": 13669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13669,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13669,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13669,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13652,
											"end": 13658,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13652,
											"end": 13658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13652,
											"end": 13658,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13652,
											"end": 13658,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13652,
											"end": 13658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13669,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 13631,
											"end": 13669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13669,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13631,
											"end": 13669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13669,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13679,
											"end": 13685,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13679,
											"end": 13696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13679,
											"end": 13696,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13679,
											"end": 13696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13679,
											"end": 13696,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13679,
											"end": 13696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13679,
											"end": 13696,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13679,
											"end": 13696,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13679,
											"end": 13696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13679,
											"end": 13696,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13679,
											"end": 13696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13679,
											"end": 13696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13679,
											"end": 13696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13679,
											"end": 13696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13679,
											"end": 13696,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13679,
											"end": 13696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13679,
											"end": 13696,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13471,
											"end": 13703,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3606,
											"end": 3710,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3606,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3693,
											"end": 3703,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3606,
											"end": 3710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3606,
											"end": 3710,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21008,
											"end": 21340,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 21008,
											"end": 21340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21101,
											"end": 21120,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21101,
											"end": 21120,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "PUSH data",
											"source": 0,
											"value": "1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4"
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 21093,
											"end": 21161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21179,
											"end": 21200,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21179,
											"end": 21200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "PUSH data",
											"source": 0,
											"value": "F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5"
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 21171,
											"end": 21239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21250,
											"end": 21268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21250,
											"end": 21268,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21250,
											"end": 21268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21250,
											"end": 21268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21250,
											"end": 21268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21250,
											"end": 21268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21250,
											"end": 21268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21250,
											"end": 21261,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21250,
											"end": 21268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21250,
											"end": 21268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21250,
											"end": 21268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21250,
											"end": 21268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21250,
											"end": 21268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21250,
											"end": 21268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21250,
											"end": 21268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21250,
											"end": 21268,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21250,
											"end": 21277,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 21250,
											"end": 21277,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21250,
											"end": 21277,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21250,
											"end": 21277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21250,
											"end": 21277,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21250,
											"end": 21277,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21250,
											"end": 21277,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 21250,
											"end": 21277,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21250,
											"end": 21277,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21250,
											"end": 21277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21250,
											"end": 21277,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21250,
											"end": 21277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21250,
											"end": 21277,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21250,
											"end": 21286,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21250,
											"end": 21286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21250,
											"end": 21286,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21301,
											"end": 21333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21301,
											"end": 21333,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21301,
											"end": 21333,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21301,
											"end": 21333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21301,
											"end": 21333,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21301,
											"end": 21333,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21301,
											"end": 21333,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21301,
											"end": 21333,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 21301,
											"end": 21333,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21301,
											"end": 21333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21301,
											"end": 21333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21301,
											"end": 21333,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21301,
											"end": 21333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21301,
											"end": 21333,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21301,
											"end": 21333,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21301,
											"end": 21333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21301,
											"end": 21333,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 21008,
											"end": 21340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21008,
											"end": 21340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21008,
											"end": 21340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21008,
											"end": 21340,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18886,
											"end": 19350,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 18886,
											"end": 19350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18983,
											"end": 19003,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18983,
											"end": 19003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "PUSH data",
											"source": 0,
											"value": "D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57"
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 18975,
											"end": 19045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19063,
											"end": 19086,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19063,
											"end": 19086,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "PUSH data",
											"source": 0,
											"value": "ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2"
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 19055,
											"end": 19126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19157,
											"end": 19228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 19179,
											"end": 19185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19157,
											"end": 19228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19157,
											"end": 19228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19157,
											"end": 19228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19157,
											"end": 19228,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19157,
											"end": 19228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19157,
											"end": 19228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19157,
											"end": 19228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19157,
											"end": 19228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19157,
											"end": 19228,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 19157,
											"end": 19228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19157,
											"end": 19228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19157,
											"end": 19228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19157,
											"end": 19228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19157,
											"end": 19228,
											"name": "PUSH data",
											"source": 0,
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 19157,
											"end": 19228,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 19157,
											"end": 19228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19157,
											"end": 19228,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19157,
											"end": 19174,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19157,
											"end": 19174,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19157,
											"end": 19174,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19157,
											"end": 19174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19157,
											"end": 19174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19157,
											"end": 19174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19157,
											"end": 19166,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19157,
											"end": 19174,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19157,
											"end": 19174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19157,
											"end": 19174,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19157,
											"end": 19174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19157,
											"end": 19174,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19157,
											"end": 19174,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19157,
											"end": 19174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19157,
											"end": 19228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19157,
											"end": 19228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19157,
											"end": 19178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 19157,
											"end": 19228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19157,
											"end": 19228,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19157,
											"end": 19228,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 19157,
											"end": 19228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19137,
											"end": 19154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19154,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19137,
											"end": 19154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19146,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19137,
											"end": 19154,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19137,
											"end": 19154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19137,
											"end": 19154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19154,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19154,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19228,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19228,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19228,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19261,
											"end": 19281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19261,
											"end": 19281,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19261,
											"end": 19281,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19261,
											"end": 19281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19261,
											"end": 19281,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19261,
											"end": 19281,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19261,
											"end": 19281,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19261,
											"end": 19293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 19261,
											"end": 19293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19286,
											"end": 19292,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19261,
											"end": 19293,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19261,
											"end": 19285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 19261,
											"end": 19293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19261,
											"end": 19293,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19261,
											"end": 19293,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 19261,
											"end": 19293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19238,
											"end": 19258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19258,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19238,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19247,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19238,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19238,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19238,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19258,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19293,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19293,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19293,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19308,
											"end": 19343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19308,
											"end": 19343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19308,
											"end": 19343,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19308,
											"end": 19343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19308,
											"end": 19343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19308,
											"end": 19343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19308,
											"end": 19343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19258,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19308,
											"end": 19343,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19308,
											"end": 19343,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19308,
											"end": 19343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19308,
											"end": 19343,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19308,
											"end": 19343,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 19308,
											"end": 19343,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19308,
											"end": 19343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19308,
											"end": 19343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19308,
											"end": 19343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19308,
											"end": 19343,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19308,
											"end": 19343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19308,
											"end": 19343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19308,
											"end": 19343,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 18886,
											"end": 19350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18886,
											"end": 19350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18886,
											"end": 19350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18886,
											"end": 19350,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5674,
											"end": 5861,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5674,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5760,
											"end": 5767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5795,
											"end": 5807,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5793,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5793,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "171"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "173"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "171"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "173"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 5779,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5830,
											"end": 5835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5830,
											"end": 5835,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5830,
											"end": 5835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5674,
											"end": 5861,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4802,
											"end": 4978,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4802,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4860,
											"end": 4867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4891,
											"end": 4896,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4891,
											"end": 4896,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4891,
											"end": 4896,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4920,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4920,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4920,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 4906,
											"end": 4952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4970,
											"end": 4971,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4802,
											"end": 4978,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4802,
											"end": 4978,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20241,
											"end": 20583,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 20241,
											"end": 20583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20316,
											"end": 20337,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20316,
											"end": 20337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "PUSH data",
											"source": 0,
											"value": "B81EDBF10508D9B81724F18FF8F3D8BFBA9790734CE1F1C54DFE1030B4914855"
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 20308,
											"end": 20375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20407,
											"end": 20475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 20430,
											"end": 20436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20407,
											"end": 20475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20407,
											"end": 20475,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20407,
											"end": 20475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20407,
											"end": 20475,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 20407,
											"end": 20475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20407,
											"end": 20475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20407,
											"end": 20475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20407,
											"end": 20475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20407,
											"end": 20475,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 20407,
											"end": 20475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20407,
											"end": 20475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20407,
											"end": 20475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20407,
											"end": 20475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20407,
											"end": 20475,
											"name": "PUSH data",
											"source": 0,
											"value": "DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032"
										},
										{
											"begin": 20407,
											"end": 20475,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 20407,
											"end": 20475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20407,
											"end": 20475,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20407,
											"end": 20425,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20407,
											"end": 20425,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20407,
											"end": 20425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20407,
											"end": 20425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20407,
											"end": 20425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20407,
											"end": 20425,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20407,
											"end": 20416,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20407,
											"end": 20425,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20407,
											"end": 20425,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20407,
											"end": 20425,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20407,
											"end": 20425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20407,
											"end": 20425,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20407,
											"end": 20425,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20407,
											"end": 20425,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20407,
											"end": 20475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20407,
											"end": 20475,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20407,
											"end": 20429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 20407,
											"end": 20475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20407,
											"end": 20475,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20407,
											"end": 20475,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 20407,
											"end": 20475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20386,
											"end": 20404,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20386,
											"end": 20404,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20386,
											"end": 20404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20386,
											"end": 20404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20386,
											"end": 20404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20386,
											"end": 20404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20386,
											"end": 20395,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20386,
											"end": 20404,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20386,
											"end": 20404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20386,
											"end": 20404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20386,
											"end": 20404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20386,
											"end": 20404,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20386,
											"end": 20475,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20500,
											"end": 20512,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 20500,
											"end": 20512,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20500,
											"end": 20524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 20500,
											"end": 20524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20517,
											"end": 20523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20500,
											"end": 20524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 20500,
											"end": 20516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 20500,
											"end": 20524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20500,
											"end": 20524,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20500,
											"end": 20524,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 20500,
											"end": 20524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20485,
											"end": 20497,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 20485,
											"end": 20524,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20539,
											"end": 20576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20539,
											"end": 20576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20539,
											"end": 20576,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20539,
											"end": 20576,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20539,
											"end": 20576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20539,
											"end": 20576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20539,
											"end": 20576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20539,
											"end": 20576,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20565,
											"end": 20566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20565,
											"end": 20566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20539,
											"end": 20576,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20539,
											"end": 20576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20539,
											"end": 20576,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20539,
											"end": 20576,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 20539,
											"end": 20576,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20539,
											"end": 20576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20539,
											"end": 20576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20539,
											"end": 20576,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20539,
											"end": 20576,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20539,
											"end": 20576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20539,
											"end": 20576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20539,
											"end": 20576,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20241,
											"end": 20583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20241,
											"end": 20583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20241,
											"end": 20583,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19620,
											"end": 19922,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 19620,
											"end": 19922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19695,
											"end": 19716,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19695,
											"end": 19716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "PUSH",
											"source": 0,
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 19687,
											"end": 19752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19790,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 19778,
											"end": 19790,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 19778,
											"end": 19802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19801,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19802,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19778,
											"end": 19794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 19778,
											"end": 19802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19778,
											"end": 19802,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19778,
											"end": 19802,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 19778,
											"end": 19802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19763,
											"end": 19775,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 19763,
											"end": 19802,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19833,
											"end": 19851,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19833,
											"end": 19851,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19833,
											"end": 19851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19833,
											"end": 19851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19833,
											"end": 19851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19833,
											"end": 19851,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19833,
											"end": 19842,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19833,
											"end": 19851,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19833,
											"end": 19851,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19833,
											"end": 19851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19833,
											"end": 19851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19833,
											"end": 19851,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19833,
											"end": 19851,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19833,
											"end": 19863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 19833,
											"end": 19863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19862,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19833,
											"end": 19863,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19833,
											"end": 19855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 19833,
											"end": 19863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19833,
											"end": 19863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19833,
											"end": 19863,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 19833,
											"end": 19863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19812,
											"end": 19830,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19812,
											"end": 19830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19821,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19812,
											"end": 19830,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19812,
											"end": 19830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19830,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19812,
											"end": 19830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19830,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19830,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19863,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19863,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19863,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19878,
											"end": 19915,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19878,
											"end": 19915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19878,
											"end": 19915,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19878,
											"end": 19915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19878,
											"end": 19915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19878,
											"end": 19915,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19878,
											"end": 19915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19830,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19830,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19812,
											"end": 19830,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19878,
											"end": 19915,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 19878,
											"end": 19915,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19878,
											"end": 19915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19878,
											"end": 19915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19878,
											"end": 19915,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19878,
											"end": 19915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19878,
											"end": 19915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19878,
											"end": 19915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19878,
											"end": 19915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19878,
											"end": 19915,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 19620,
											"end": 19922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19620,
											"end": 19922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19620,
											"end": 19922,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11062,
											"end": 11655,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 11062,
											"end": 11655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11498,
											"end": 11502,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 11606,
											"end": 11623,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 11641,
											"end": 11648,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11062,
											"end": 11655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11062,
											"end": 11655,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5249,
											"end": 5383,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 5249,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5307,
											"end": 5314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5333,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 5337,
											"end": 5338,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5340,
											"end": 5341,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5333,
											"end": 5376,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5333,
											"end": 5376,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5333,
											"end": 5376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5333,
											"end": 5376,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5333,
											"end": 5376,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5333,
											"end": 5376,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5333,
											"end": 5376,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5333,
											"end": 5376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5333,
											"end": 5376,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 5333,
											"end": 5376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5333,
											"end": 5376,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5333,
											"end": 5376,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5333,
											"end": 5376,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5333,
											"end": 5376,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 5333,
											"end": 5376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5333,
											"end": 5376,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5333,
											"end": 5376,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5333,
											"end": 5336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5333,
											"end": 5376,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "190"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "192"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "190"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "192"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "191"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "192"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "191"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "192"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "193"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "194"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "193"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "194"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "85"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "196"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "193"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "196"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										}
									],
									".data": {
										"1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"7A2A4E26842155EA933FE6EB6E3137EB5A296DCDF55721C552BE7B4C3CC23759": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"B81EDBF10508D9B81724F18FF8F3D8BFBA9790734CE1F1C54DFE1030B4914855": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
										"D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
										"F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"initialize(string,string,uint8,uint256,bool,address)": "ef3ebcb8",
							"mint(uint256)": "a0712d68",
							"mintable()": "4bf365df",
							"name()": "06fdde03",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.9-nightly.2020.5.28+commit.ee8307ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"mintable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burn `amount` tokens and decreasing the total supply.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize(string,string,uint8,uint256,bool,address)\":{\"details\":\"sets initials supply and the owner\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner - `_mintable` must be true\"},\"mintable()\":{\"details\":\"Returns if the token is mintable or not\"},\"name()\":{\"details\":\"Returns the token name.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":\"BEP20TokenImplementation\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":{\"keccak256\":\"0xb7c5702a57543c00a1a136c6ddf3bdea5a2b8311b6e3c7ce1b43133428808b8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbd866059a3d81d4c2364c02c5277d1cd61fb683235bffe1e1135240784d229\",\"dweb:/ipfs/QmPskAbeb9DUdMhRxE4ECS2WyStibicTrjLbkwYnfTQ8MN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 322,
								"contract": "Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 325,
								"contract": "Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 401,
								"contract": "Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 407,
								"contract": "Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 409,
								"contract": "Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 411,
								"contract": "Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 413,
								"contract": "Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 415,
								"contract": "Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_decimals",
								"offset": 0,
								"slot": "6",
								"type": "t_uint8"
							},
							{
								"astId": 417,
								"contract": "Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_owner",
								"offset": 1,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 425,
								"contract": "Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_mintable",
								"offset": 21,
								"slot": "6",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.9-nightly.2020.5.28+commit.ee8307ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":{\"keccak256\":\"0xb7c5702a57543c00a1a136c6ddf3bdea5a2b8311b6e3c7ce1b43133428808b8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbd866059a3d81d4c2364c02c5277d1cd61fb683235bffe1e1135240784d229\",\"dweb:/ipfs/QmPskAbeb9DUdMhRxE4ECS2WyStibicTrjLbkwYnfTQ8MN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.9-nightly.2020.5.28+commit.ee8307ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":\"IBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":{\"keccak256\":\"0xb7c5702a57543c00a1a136c6ddf3bdea5a2b8311b6e3c7ce1b43133428808b8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbd866059a3d81d4c2364c02c5277d1cd61fb683235bffe1e1135240784d229\",\"dweb:/ipfs/QmPskAbeb9DUdMhRxE4ECS2WyStibicTrjLbkwYnfTQ8MN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Initializable": {
					"abi": [],
					"devdoc": {
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.  TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.  CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.9-nightly.2020.5.28+commit.ee8307ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.  TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.  CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":\"Initializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":{\"keccak256\":\"0xb7c5702a57543c00a1a136c6ddf3bdea5a2b8311b6e3c7ce1b43133428808b8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbd866059a3d81d4c2364c02c5277d1cd61fb683235bffe1e1135240784d229\",\"dweb:/ipfs/QmPskAbeb9DUdMhRxE4ECS2WyStibicTrjLbkwYnfTQ8MN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 322,
								"contract": "Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 325,
								"contract": "Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":4550:9128  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":4550:9128  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n\n    auxdata: 0xa2646970667358221220408888ec0534fb878d0178d4bbced76b87ee870afb2f3b06c2fe5c9a07efe0c164736f6c637827302e362e392d6e696768746c792e323032302e352e32382b636f6d6d69742e65653833303763650058\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "607b6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220408888ec0534fb878d0178d4bbced76b87ee870afb2f3b06c2fe5c9a07efe0c164736f6c637827302e362e392d6e696768746c792e323032302e352e32382b636f6d6d69742e65653833303763650058",
							"opcodes": "PUSH1 0x7B PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH DUP9 DUP9 0xEC SDIV CALLVALUE 0xFB DUP8 DUP14 ADD PUSH25 0xD4BBCED76B87EE870AFB2F3B06C2FE5C9A07EFE0C164736F6C PUSH4 0x7827302E CALLDATASIZE 0x2E CODECOPY 0x2D PUSH15 0x696768746C792E323032302E352E32 CODESIZE 0x2B PUSH4 0x6F6D6D69 PUSH21 0x2E6565383330376365005800000000000000000000 ",
							"sourceMap": "4550:4578:0:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220408888ec0534fb878d0178d4bbced76b87ee870afb2f3b06c2fe5c9a07efe0c164736f6c637827302e362e392d6e696768746c792e323032302e352e32382b636f6d6d69742e65653833303763650058",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH DUP9 DUP9 0xEC SDIV CALLVALUE 0xFB DUP8 DUP14 ADD PUSH25 0xD4BBCED76B87EE870AFB2F3B06C2FE5C9A07EFE0C164736F6C PUSH4 0x7827302E CALLDATASIZE 0x2E CODECOPY 0x2D PUSH15 0x696768746C792E323032302E352E32 CODESIZE 0x2B PUSH4 0x6F6D6D69 PUSH21 0x2E6565383330376365005800000000000000000000 ",
							"sourceMap": "4550:4578:0:-:0;;;;;;12:1:-1;9;2:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "24600",
								"executionCost": "103",
								"totalCost": "24703"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4550,
									"end": 9128,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4550,
									"end": 9128,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"source": -1,
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE",
									"source": -1
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS",
									"source": -1
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8",
									"source": -1
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN",
									"source": -1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220408888ec0534fb878d0178d4bbced76b87ee870afb2f3b06c2fe5c9a07efe0c164736f6c637827302e362e392d6e696768746c792e323032302e352e32382b636f6d6d69742e65653833303763650058",
									".code": [
										{
											"begin": 4550,
											"end": 9128,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 9128,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 9128,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 9128,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4550,
											"end": 9128,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4550,
											"end": 9128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.9-nightly.2020.5.28+commit.ee8307ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":{\"keccak256\":\"0xb7c5702a57543c00a1a136c6ddf3bdea5a2b8311b6e3c7ce1b43133428808b8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbd866059a3d81d4c2364c02c5277d1cd61fb683235bffe1e1135240784d229\",\"dweb:/ipfs/QmPskAbeb9DUdMhRxE4ECS2WyStibicTrjLbkwYnfTQ8MN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "Warning: This is a pre-release compiler version, please do not use it in production.\n",
				"message": "This is a pre-release compiler version, please do not use it in production.",
				"severity": "warning",
				"type": "Warning"
			}
		],
		"sources": {
			"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol": {
				"ast": {
					"absolutePath": "Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol",
					"exportedSymbols": {
						"BEP20TokenImplementation": [
							1034
						],
						"Context": [
							122
						],
						"IBEP20": [
							100
						],
						"Initializable": [
							387
						],
						"SafeMath": [
							317
						]
					},
					"id": 1035,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100
							],
							"name": "IBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "48:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 7,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "139:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 7,
												"src": "165:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "165:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "164:9:0"
									},
									"scope": 100,
									"src": "119:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "180:51:0",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "253:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 13,
												"src": "279:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 10,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "279:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "278:7:0"
									},
									"scope": 100,
									"src": "236:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "292:49:0",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "361:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 19,
												"src": "387:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 16,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "387:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "386:15:0"
									},
									"scope": 100,
									"src": "346:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "408:45:0",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "471:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 25,
												"src": "497:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 22,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "497:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "496:15:0"
									},
									"scope": 100,
									"src": "458:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "518:52:0",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "592:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "618:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "618:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "617:9:0"
									},
									"scope": 100,
									"src": "575:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "633:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 39,
												"src": "729:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "728:17:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 39,
												"src": "769:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "768:9:0"
									},
									"scope": 100,
									"src": "710:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "784:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 49,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 49,
												"src": "1016:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 49,
												"src": "1035:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1015:35:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 49,
												"src": "1069:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1069:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1068:6:0"
									},
									"scope": 100,
									"src": "998:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1081:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 59,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 59,
												"src": "1369:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1369:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 59,
												"src": "1385:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1385:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1368:33:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 59,
												"src": "1425:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1425:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1424:9:0"
									},
									"scope": 100,
									"src": "1350:84:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "1440:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 69,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 69,
												"src": "2104:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 69,
												"src": "2121:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2103:33:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 69,
												"src": "2155:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 66,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2155:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2154:6:0"
									},
									"scope": 100,
									"src": "2087:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "2167:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "2490:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2490:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "2506:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "2525:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2489:51:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "2559:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 78,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2559:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2558:6:0"
									},
									"scope": 100,
									"src": "2468:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2571:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 90,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "2749:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "2771:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2771:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "2791:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2748:57:0"
									},
									"src": "2734:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "2812:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 99,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 99,
												"src": "2980:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2980:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 99,
												"src": "3003:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3003:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 99,
												"src": "3028:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3028:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2979:63:0"
									},
									"src": "2965:78:0"
								}
							],
							"scope": 1035,
							"src": "25:3020:0"
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3049:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 122,
							"linearizedBaseContracts": [
								122
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "3676:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 106,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "3693:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3693:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 105,
												"id": 108,
												"nodeType": "Return",
												"src": "3686:17:0"
											}
										]
									},
									"documentation": null,
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3625:2:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 110,
												"src": "3659:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3659:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3658:17:0"
									},
									"scope": 122,
									"src": "3606:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "3781:165:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 115,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "3791:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$122",
														"typeString": "contract Context"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "3791:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 117,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "3931:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3931:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 114,
												"id": 119,
												"nodeType": "Return",
												"src": "3924:15:0"
											}
										]
									},
									"documentation": null,
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3733:2:0"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 121,
												"src": "3767:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 112,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3767:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3766:14:0"
									},
									"scope": 122,
									"src": "3716:230:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1035,
							"src": "3574:374:0"
						},
						{
							"id": 123,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3961:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 124,
								"nodeType": "StructuredDocumentation",
								"src": "3986:563:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 317,
							"linearizedBaseContracts": [
								317
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "4869:109:0",
										"statements": [
											{
												"assignments": [
													135
												],
												"declarations": [
													{
														"constant": false,
														"id": 135,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 149,
														"src": "4879:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 134,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 139,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 136,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "4891:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 137,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4895:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4891:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 141,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "4914:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 142,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 127,
																"src": "4919:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4914:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4922:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 140,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4906:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4906:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "4906:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 147,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 135,
													"src": "4970:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 133,
												"id": 148,
												"nodeType": "Return",
												"src": "4963:8:0"
											}
										]
									},
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "4573:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 150,
												"src": "4815:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4815:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 150,
												"src": "4826:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4826:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4814:22:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 150,
												"src": "4860:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4859:9:0"
									},
									"scope": 317,
									"src": "4802:176:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "5316:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 161,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "5337:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 162,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "5340:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5343:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 160,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															167,
															195
														],
														"referencedDeclaration": 195,
														"src": "5333:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5333:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 159,
												"id": 165,
												"nodeType": "Return",
												"src": "5326:50:0"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "4984:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 167,
												"src": "5262:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5262:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 167,
												"src": "5273:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5273:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5261:22:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 167,
												"src": "5307:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5307:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5306:9:0"
									},
									"scope": 317,
									"src": "5249:134:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "5769:92:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 180,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "5787:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 181,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 170,
																"src": "5792:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5787:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 183,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "5795:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 179,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5779:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5779:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "5779:29:0"
											},
											{
												"assignments": [
													187
												],
												"declarations": [
													{
														"constant": false,
														"id": 187,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 194,
														"src": "5818:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 186,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5818:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 191,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 188,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 170,
														"src": "5830:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 189,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "5834:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5830:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5818:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 192,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 187,
													"src": "5853:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 178,
												"id": 193,
												"nodeType": "Return",
												"src": "5846:8:0"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "5389:280:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 195,
												"src": "5687:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 195,
												"src": "5698:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5698:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 195,
												"src": "5709:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5709:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5686:50:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 195,
												"src": "5760:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5760:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5759:9:0"
									},
									"scope": 317,
									"src": "5674:187:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "6175:392:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 205,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "6407:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 206,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6412:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6407:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 211,
												"nodeType": "IfStatement",
												"src": "6403:45:0",
												"trueBody": {
													"id": 210,
													"nodeType": "Block",
													"src": "6415:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6436:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 204,
															"id": 209,
															"nodeType": "Return",
															"src": "6429:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													213
												],
												"declarations": [
													{
														"constant": false,
														"id": 213,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 229,
														"src": "6458:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 212,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6458:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 217,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 214,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "6470:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 215,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "6474:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6470:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6458:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 219,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 213,
																	"src": "6493:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 220,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "6497:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6493:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 222,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "6502:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6493:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6505:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 218,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6485:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6485:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "6485:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 227,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 213,
													"src": "6559:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 204,
												"id": 228,
												"nodeType": "Return",
												"src": "6552:8:0"
											}
										]
									},
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "5867:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 230,
												"src": "6121:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 230,
												"src": "6132:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6120:22:0"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 230,
												"src": "6166:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6165:9:0"
									},
									"scope": 317,
									"src": "6108:459:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 246,
										"nodeType": "Block",
										"src": "7096:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 241,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "7117:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 242,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "7120:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7123:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 240,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															247,
															275
														],
														"referencedDeclaration": 275,
														"src": "7113:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7113:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 239,
												"id": 245,
												"nodeType": "Return",
												"src": "7106:46:0"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "6573:451:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 247,
												"src": "7042:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7042:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 247,
												"src": "7053:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7053:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7041:22:0"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 247,
												"src": "7087:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7087:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7086:9:0"
									},
									"scope": 317,
									"src": "7029:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "7736:177:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 260,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "7754:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7758:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7754:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 263,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "7761:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 259,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7746:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7746:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "7746:28:0"
											},
											{
												"assignments": [
													267
												],
												"declarations": [
													{
														"constant": false,
														"id": 267,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 274,
														"src": "7784:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 266,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7784:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 271,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 268,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 250,
														"src": "7796:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 269,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "7800:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7796:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7784:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 272,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 267,
													"src": "7905:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 258,
												"id": 273,
												"nodeType": "Return",
												"src": "7898:8:0"
											}
										]
									},
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "7165:471:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 275,
												"src": "7654:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7654:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 275,
												"src": "7665:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7665:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 275,
												"src": "7676:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 253,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7676:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7653:50:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 275,
												"src": "7727:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7726:9:0"
									},
									"scope": 317,
									"src": "7641:272:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "8431:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 286,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "8452:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 287,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "8455:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8458:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 285,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															292,
															316
														],
														"referencedDeclaration": 316,
														"src": "8448:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8448:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 284,
												"id": 290,
												"nodeType": "Return",
												"src": "8441:44:0"
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "7919:440:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 292,
												"src": "8377:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8377:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 292,
												"src": "8388:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8388:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8376:22:0"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 292,
												"src": "8422:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8422:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8421:9:0"
									},
									"scope": 317,
									"src": "8364:128:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "9058:68:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 297,
																"src": "9076:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9081:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9076:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 308,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "9084:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 304,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9068:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9068:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "9068:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 311,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "9114:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 312,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "9118:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9114:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 303,
												"id": 314,
												"nodeType": "Return",
												"src": "9107:12:0"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "8498:460:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 316,
												"src": "8976:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8976:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 316,
												"src": "8987:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 316,
												"src": "8998:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 298,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8998:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8975:50:0"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 316,
												"src": "9049:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9049:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9048:9:0"
									},
									"scope": 317,
									"src": "8963:163:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1035,
							"src": "4550:4578:0"
						},
						{
							"id": 318,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".24",
								"<",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "9229:32:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 319,
								"nodeType": "StructuredDocumentation",
								"src": "9264:940:0",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n \n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.\n \n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity."
							},
							"fullyImplemented": true,
							"id": 387,
							"linearizedBaseContracts": [
								387
							],
							"name": "Initializable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "10244:73:0",
										"text": " @dev Indicates that the contract has been initialized."
									},
									"id": 322,
									"mutability": "mutable",
									"name": "_initialized",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 387,
									"src": "10322:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 321,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "10322:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "10354:91:0",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 325,
									"mutability": "mutable",
									"name": "_initializing",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 387,
									"src": "10450:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 324,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "10450:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "10604:368:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 329,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 325,
																	"src": "10622:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 330,
																		"name": "_isConstructor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 386,
																		"src": "10639:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																			"typeString": "function () view returns (bool)"
																		}
																	},
																	"id": 331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10639:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "10622:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "10659:13:0",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 333,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "10660:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "10622:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10674:48:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 328,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10614:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10614:109:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "10614:109:0"
											},
											{
												"assignments": [
													340
												],
												"declarations": [
													{
														"constant": false,
														"id": 340,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 363,
														"src": "10734:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 339,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10734:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 343,
												"initialValue": {
													"argumentTypes": null,
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10756:14:0",
													"subExpression": {
														"argumentTypes": null,
														"id": 341,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 325,
														"src": "10757:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10734:36:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 344,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 340,
													"src": "10784:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 354,
												"nodeType": "IfStatement",
												"src": "10780:98:0",
												"trueBody": {
													"id": 353,
													"nodeType": "Block",
													"src": "10800:78:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 345,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 325,
																	"src": "10814:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10830:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "10814:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 348,
															"nodeType": "ExpressionStatement",
															"src": "10814:20:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 349,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "10848:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10863:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "10848:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 352,
															"nodeType": "ExpressionStatement",
															"src": "10848:19:0"
														}
													]
												}
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "10888:1:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 356,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 340,
													"src": "10904:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 362,
												"nodeType": "IfStatement",
												"src": "10900:66:0",
												"trueBody": {
													"id": 361,
													"nodeType": "Block",
													"src": "10920:46:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 357,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 325,
																	"src": "10934:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "66616c7365",
																	"id": 358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10950:5:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "10934:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 360,
															"nodeType": "ExpressionStatement",
															"src": "10934:21:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "10483:93:0",
										"text": " @dev Modifier to protect an initializer function from being invoked twice."
									},
									"id": 364,
									"name": "initializer",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10601:2:0"
									},
									"src": "10581:391:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "11116:539:0",
										"statements": [
											{
												"assignments": [
													371
												],
												"declarations": [
													{
														"constant": false,
														"id": 371,
														"mutability": "mutable",
														"name": "self",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 385,
														"src": "11475:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 370,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11475:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 376,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 374,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -28,
															"src": "11498:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Initializable_$387",
																"typeString": "contract Initializable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_Initializable_$387",
																"typeString": "contract Initializable"
															}
														],
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11490:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 372,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11490:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11490:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11475:28:0"
											},
											{
												"assignments": [
													378
												],
												"declarations": [
													{
														"constant": false,
														"id": 378,
														"mutability": "mutable",
														"name": "cs",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 385,
														"src": "11513:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 377,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:10:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "11598:27:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11600:23:0",
															"value": {
																"arguments": [
																	{
																		"name": "self",
																		"nodeType": "YulIdentifier",
																		"src": "11618:4:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "11606:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "11606:17:0"
															},
															"variableNames": [
																{
																	"name": "cs",
																	"nodeType": "YulIdentifier",
																	"src": "11600:2:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 378,
														"isOffset": false,
														"isSlot": false,
														"src": "11600:2:0",
														"valueSize": 1
													},
													{
														"declaration": 371,
														"isOffset": false,
														"isSlot": false,
														"src": "11618:4:0",
														"valueSize": 1
													}
												],
												"id": 380,
												"nodeType": "InlineAssembly",
												"src": "11589:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 381,
														"name": "cs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "11641:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11647:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11641:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 369,
												"id": 384,
												"nodeType": "Return",
												"src": "11634:14:0"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "10978:79:0",
										"text": "@dev Returns true if and only if the function is running in the constructor"
									},
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isConstructor",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11085:2:0"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 386,
												"src": "11110:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 367,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11110:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11109:6:0"
									},
									"scope": 387,
									"src": "11062:593:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1035,
							"src": "10205:1452:0"
						},
						{
							"id": 388,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "11708:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 389,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 122,
										"src": "11774:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$122",
											"typeString": "contract Context"
										}
									},
									"id": 390,
									"nodeType": "InheritanceSpecifier",
									"src": "11774:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 391,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 100,
										"src": "11783:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$100",
											"typeString": "contract IBEP20"
										}
									},
									"id": 392,
									"nodeType": "InheritanceSpecifier",
									"src": "11783:6:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 393,
										"name": "Initializable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 387,
										"src": "11791:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Initializable_$387",
											"typeString": "contract Initializable"
										}
									},
									"id": 394,
									"nodeType": "InheritanceSpecifier",
									"src": "11791:13:0"
								}
							],
							"contractDependencies": [
								100,
								122,
								387
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1034,
							"linearizedBaseContracts": [
								1034,
								387,
								100,
								122
							],
							"name": "BEP20TokenImplementation",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 397,
									"libraryName": {
										"contractScope": null,
										"id": 395,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 317,
										"src": "11817:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$317",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "11811:27:0",
									"typeName": {
										"id": 396,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11830:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 401,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1034,
									"src": "11844:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 400,
										"keyType": {
											"id": 398,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11853:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11844:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 399,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "11864:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 407,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1034,
									"src": "11896:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 406,
										"keyType": {
											"id": 402,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11905:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11896:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 405,
											"keyType": {
												"id": 403,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11925:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "11916:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 404,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11936:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 409,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1034,
									"src": "11971:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 408,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11971:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 411,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1034,
									"src": "12005:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 410,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12005:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 413,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1034,
									"src": "12031:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 412,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12031:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 415,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1034,
									"src": "12059:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 414,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "12059:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 417,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1034,
									"src": "12089:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 416,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "12089:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 423,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 423,
												"src": "12144:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12144:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 423,
												"src": "12175:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12175:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12143:57:0"
									},
									"src": "12117:84:0"
								},
								{
									"constant": false,
									"id": 425,
									"mutability": "mutable",
									"name": "_mintable",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1034,
									"src": "12207:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 424,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "12207:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "12257:7:0",
										"statements": []
									},
									"documentation": null,
									"id": 429,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12247:2:0"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12257:0:0"
									},
									"scope": 1034,
									"src": "12236:28:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "12373:95:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 433,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "12391:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 434,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "12401:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12401:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "12391:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12415:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 432,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "12383:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12383:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "12383:67:0"
											},
											{
												"id": 440,
												"nodeType": "PlaceholderStatement",
												"src": "12460:1:0"
											}
										]
									},
									"documentation": {
										"id": 430,
										"nodeType": "StructuredDocumentation",
										"src": "12270:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 442,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12370:2:0"
									},
									"src": "12352:116:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "12680:169:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 460,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "12690:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 461,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 455,
														"src": "12699:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12690:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "12690:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 464,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "12714:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 465,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "12722:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12714:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 467,
												"nodeType": "ExpressionStatement",
												"src": "12714:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 468,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "12736:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 469,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "12746:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12736:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "12736:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 472,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "12762:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 473,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "12774:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "12762:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "12762:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 476,
														"name": "_mintable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "12792:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 477,
														"name": "mintable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "12804:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12792:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "12792:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 481,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "12828:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 482,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "12835:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 480,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "12822:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12822:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "12822:20:0"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "12474:58:0",
										"text": " @dev sets initials supply and the owner"
									},
									"functionSelector": "ef3ebcb8",
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 458,
											"modifierName": {
												"argumentTypes": null,
												"id": 457,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 364,
												"src": "12668:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12668:11:0"
										}
									],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "name",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 486,
												"src": "12557:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 444,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12557:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 486,
												"src": "12577:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 446,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12577:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "decimals",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 486,
												"src": "12599:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 448,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "12599:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 486,
												"src": "12615:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12615:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "mintable",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 486,
												"src": "12631:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 452,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12631:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 486,
												"src": "12646:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12646:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12556:104:0"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12680:0:0"
									},
									"scope": 1034,
									"src": "12537:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "13231:91:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 493,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "13267:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13283:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13275:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 494,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13275:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13275:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 492,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "13246:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13246:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "EmitStatement",
												"src": "13241:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 500,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "13296:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13313:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13305:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 501,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13305:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13305:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "13296:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "13296:19:0"
											}
										]
									},
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "12855:325:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 490,
											"modifierName": {
												"argumentTypes": null,
												"id": 489,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "13221:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "13221:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13211:2:0"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13231:0:0"
									},
									"scope": 1034,
									"src": "13185:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "13533:170:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 517,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "13551:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13571:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13563:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 518,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13563:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13563:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "13551:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13575:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 516,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "13543:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13543:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "13543:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 527,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "13652:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 528,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "13660:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 526,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "13631:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13631:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 530,
												"nodeType": "EmitStatement",
												"src": "13626:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 531,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "13679:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 532,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 511,
														"src": "13688:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13679:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "13679:17:0"
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "13328:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 514,
											"modifierName": {
												"argumentTypes": null,
												"id": 513,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "13523:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "13523:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 536,
												"src": "13498:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13498:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13497:18:0"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13533:0:0"
									},
									"scope": 1034,
									"src": "13471:232:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "13826:33:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 542,
													"name": "_mintable",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 425,
													"src": "13843:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 541,
												"id": 543,
												"nodeType": "Return",
												"src": "13836:16:0"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "13709:63:0",
										"text": " @dev Returns if the token is mintable or not"
									},
									"functionSelector": "4bf365df",
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintable",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13794:2:0"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 545,
												"src": "13820:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 539,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13820:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13819:6:0"
									},
									"scope": 1034,
									"src": "13777:82:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										31
									],
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "13983:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 552,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 417,
													"src": "14000:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 551,
												"id": 553,
												"nodeType": "Return",
												"src": "13993:13:0"
											}
										]
									},
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "13865:52:0",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 548,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13951:8:0"
									},
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13939:2:0"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 555,
												"src": "13974:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13974:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13973:9:0"
									},
									"scope": 1034,
									"src": "13922:91:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										13
									],
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "14134:33:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 562,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 415,
													"src": "14151:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 561,
												"id": 563,
												"nodeType": "Return",
												"src": "14144:16:0"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "14019:51:0",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 558,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14104:8:0"
									},
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14092:2:0"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 565,
												"src": "14127:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 559,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "14127:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14126:7:0"
									},
									"scope": 1034,
									"src": "14075:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										19
									],
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "14292:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 572,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 413,
													"src": "14309:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 571,
												"id": 573,
												"nodeType": "Return",
												"src": "14302:14:0"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "14173:49:0",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 568,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14254:8:0"
									},
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14242:2:0"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 575,
												"src": "14277:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 569,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14277:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14276:15:0"
									},
									"scope": 1034,
									"src": "14227:96:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										25
									],
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "14442:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 582,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 411,
													"src": "14459:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 581,
												"id": 583,
												"nodeType": "Return",
												"src": "14452:12:0"
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "14329:45:0",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 578,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14404:8:0"
									},
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14392:2:0"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 585,
												"src": "14427:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 579,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14427:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14426:15:0"
									},
									"scope": 1034,
									"src": "14379:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										7
									],
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "14594:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 592,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 409,
													"src": "14611:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 591,
												"id": 593,
												"nodeType": "Return",
												"src": "14604:19:0"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "14477:48:0",
										"text": " @dev See {BEP20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 588,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14562:8:0"
									},
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14550:2:0"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 595,
												"src": "14585:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14585:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14584:9:0"
									},
									"scope": 1034,
									"src": "14530:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										39
									],
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "14764:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 604,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "14781:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 606,
													"indexExpression": {
														"argumentTypes": null,
														"id": 605,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "14791:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14781:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 603,
												"id": 607,
												"nodeType": "Return",
												"src": "14774:25:0"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "14636:46:0",
										"text": " @dev See {BEP20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 600,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14732:8:0"
									},
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 609,
												"src": "14706:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14706:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14705:17:0"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 609,
												"src": "14755:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14754:9:0"
									},
									"scope": 1034,
									"src": "14687:119:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										49
									],
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "15094:80:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 621,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "15114:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15114:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 623,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "15128:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 624,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "15139:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 620,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "15104:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15104:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "15104:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15163:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 619,
												"id": 628,
												"nodeType": "Return",
												"src": "15156:11:0"
											}
										]
									},
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "14812:191:0",
										"text": " @dev See {BEP20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 616,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15070:8:0"
									},
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 630,
												"src": "15026:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15026:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 630,
												"src": "15045:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15045:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15025:35:0"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 630,
												"src": "15088:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15088:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15087:6:0"
									},
									"scope": 1034,
									"src": "15008:166:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										59
									],
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "15323:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 641,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "15340:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 643,
														"indexExpression": {
															"argumentTypes": null,
															"id": 642,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "15352:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "15340:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 645,
													"indexExpression": {
														"argumentTypes": null,
														"id": 644,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "15359:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15340:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 640,
												"id": 646,
												"nodeType": "Return",
												"src": "15333:34:0"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "15180:46:0",
										"text": " @dev See {BEP20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 637,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15291:8:0"
									},
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "15250:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15250:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "15265:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15265:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15249:32:0"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "15314:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15314:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15313:9:0"
									},
									"scope": 1034,
									"src": "15231:143:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										69
									],
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "15594:77:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 660,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "15613:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15613:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 662,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "15627:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 663,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "15636:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 659,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "15604:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15604:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "15604:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15660:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 658,
												"id": 667,
												"nodeType": "Return",
												"src": "15653:11:0"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "15380:126:0",
										"text": " @dev See {BEP20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 655,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15570:8:0"
									},
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 669,
												"src": "15528:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15528:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 669,
												"src": "15545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15527:33:0"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 669,
												"src": "15588:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 656,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15588:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15587:6:0"
									},
									"scope": 1034,
									"src": "15511:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										81
									],
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "16234:205:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 683,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "16254:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 684,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "16262:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 685,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "16273:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 682,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "16244:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16244:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "16244:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 689,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "16299:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 690,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "16307:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16307:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 699,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 676,
																	"src": "16359:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16367:42:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 692,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "16321:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 694,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 693,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 672,
																			"src": "16333:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "16321:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 697,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 695,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 110,
																			"src": "16341:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16341:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16321:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 195,
																"src": "16321:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16321:89:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 688,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "16290:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16290:121:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "16290:121:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16428:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 681,
												"id": 705,
												"nodeType": "Return",
												"src": "16421:11:0"
											}
										]
									},
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "15677:446:0",
										"text": " @dev See {BEP20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {BEP20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for `sender`'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 678,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16210:8:0"
									},
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 707,
												"src": "16150:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 707,
												"src": "16166:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16166:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 707,
												"src": "16185:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16185:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16149:51:0"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 707,
												"src": "16228:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 679,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16228:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16227:6:0"
									},
									"scope": 1034,
									"src": "16128:311:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "16919:121:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 718,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "16938:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16938:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 720,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "16952:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 728,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "17000:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 721,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "16961:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 724,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 722,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 110,
																				"src": "16973:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16973:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "16961:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 726,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 725,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 710,
																		"src": "16987:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16961:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 150,
																"src": "16961:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16961:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 717,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "16929:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16929:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 731,
												"nodeType": "ExpressionStatement",
												"src": "16929:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17029:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 716,
												"id": 733,
												"nodeType": "Return",
												"src": "17022:11:0"
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "16445:383:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 735,
												"src": "16860:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 735,
												"src": "16877:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16877:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16859:37:0"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 735,
												"src": "16913:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 714,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16913:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16912:6:0"
									},
									"scope": 1034,
									"src": "16833:207:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "17617:167:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 746,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "17636:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17636:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 748,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "17650:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 756,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "17698:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17715:39:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 749,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "17659:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 752,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 750,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 110,
																				"src": "17671:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17671:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "17659:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 754,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 753,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 738,
																		"src": "17685:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17659:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 195,
																"src": "17659:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17659:96:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 745,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "17627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17627:129:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "17627:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17773:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 744,
												"id": 762,
												"nodeType": "Return",
												"src": "17766:11:0"
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "17046:475:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 764,
												"src": "17553:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17553:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 764,
												"src": "17570:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17570:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17552:42:0"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 764,
												"src": "17611:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 742,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17611:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17610:6:0"
									},
									"scope": 1034,
									"src": "17526:258:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "18088:123:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 775,
															"name": "_mintable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "18106:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7468697320746f6b656e206973206e6f74206d696e7461626c65",
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18117:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386",
																"typeString": "literal_string \"this token is not mintable\""
															},
															"value": "this token is not mintable"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386",
																"typeString": "literal_string \"this token is not mintable\""
															}
														],
														"id": 774,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "18098:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18098:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "18098:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 780,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "18162:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18162:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 782,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "18176:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 779,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "18156:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18156:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "18156:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18200:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 773,
												"id": 786,
												"nodeType": "Return",
												"src": "18193:11:0"
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "17790:231:0",
										"text": " @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n the total supply.\n Requirements\n - `msg.sender` must be the token owner\n - `_mintable` must be true"
									},
									"functionSelector": "a0712d68",
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 770,
											"modifierName": {
												"argumentTypes": null,
												"id": 769,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "18063:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "18063:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 788,
												"src": "18040:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18040:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18039:16:0"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 788,
												"src": "18082:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 771,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18082:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18081:6:0"
									},
									"scope": 1034,
									"src": "18026:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 804,
										"nodeType": "Block",
										"src": "18347:65:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 797,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "18363:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18363:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 799,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "18377:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 796,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "18357:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18357:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 801,
												"nodeType": "ExpressionStatement",
												"src": "18357:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18401:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 795,
												"id": 803,
												"nodeType": "Return",
												"src": "18394:11:0"
											}
										]
									},
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "18217:73:0",
										"text": " @dev Burn `amount` tokens and decreasing the total supply."
									},
									"functionSelector": "42966c68",
									"id": 805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 805,
												"src": "18309:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18309:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18308:16:0"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 805,
												"src": "18341:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 793,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18341:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18340:6:0"
									},
									"scope": 1034,
									"src": "18295:117:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "18965:385:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 816,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "18983:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19001:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18993:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 817,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18993:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18993:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18983:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19005:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 815,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "18975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18975:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "18975:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 826,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "19063:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19084:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19076:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 827,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19076:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19076:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "19063:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19088:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 825,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "19055:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19055:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "19055:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 835,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "19137:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 837,
														"indexExpression": {
															"argumentTypes": null,
															"id": 836,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "19147:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19137:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 842,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 812,
																"src": "19179:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19187:40:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 838,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "19157:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 840,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 839,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "19167:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19157:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 195,
															"src": "19157:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19157:71:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19137:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "19137:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 847,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "19238:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 849,
														"indexExpression": {
															"argumentTypes": null,
															"id": 848,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "19248:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19238:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 854,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 812,
																"src": "19286:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 850,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "19261:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 852,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 851,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "19271:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19261:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 150,
															"src": "19261:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19261:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19238:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "19238:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 859,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "19317:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 860,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "19325:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 861,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "19336:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 858,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "19308:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19308:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 863,
												"nodeType": "EmitStatement",
												"src": "19303:40:0"
											}
										]
									},
									"documentation": {
										"id": 806,
										"nodeType": "StructuredDocumentation",
										"src": "18418:463:0",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 865,
												"src": "18905:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18905:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 865,
												"src": "18921:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18921:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 865,
												"src": "18940:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18940:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18904:51:0"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18965:0:0"
									},
									"scope": 1034,
									"src": "18886:464:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 910,
										"nodeType": "Block",
										"src": "19677:245:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 874,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 868,
																"src": "19695:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19714:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19706:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 875,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19706:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19706:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "19695:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19718:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 873,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "19687:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19687:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 882,
												"nodeType": "ExpressionStatement",
												"src": "19687:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 883,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "19763:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 886,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "19795:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 884,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "19778:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 150,
															"src": "19778:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19778:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19763:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 889,
												"nodeType": "ExpressionStatement",
												"src": "19763:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 890,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "19812:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 892,
														"indexExpression": {
															"argumentTypes": null,
															"id": 891,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "19822:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19812:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 897,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "19856:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 893,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "19833:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 895,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 894,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "19843:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19833:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 150,
															"src": "19833:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19833:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19812:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 900,
												"nodeType": "ExpressionStatement",
												"src": "19812:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19895:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19887:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 902,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19887:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19887:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 906,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "19899:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 907,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "19908:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 901,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "19878:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19878:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 909,
												"nodeType": "EmitStatement",
												"src": "19873:42:0"
											}
										]
									},
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "19356:259:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
									},
									"id": 911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 911,
												"src": "19635:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 911,
												"src": "19652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19634:33:0"
									},
									"returnParameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19677:0:0"
									},
									"scope": 1034,
									"src": "19620:302:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "20298:285:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 920,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "20316:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20335:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20327:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 921,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20327:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20327:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "20316:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20339:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 919,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "20308:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20308:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "20308:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 929,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "20386:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 931,
														"indexExpression": {
															"argumentTypes": null,
															"id": 930,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "20396:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20386:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 936,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 916,
																"src": "20430:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20438:36:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 932,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "20407:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 934,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 933,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 914,
																	"src": "20417:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20407:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 195,
															"src": "20407:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 938,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20407:68:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20386:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 940,
												"nodeType": "ExpressionStatement",
												"src": "20386:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 941,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "20485:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 944,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 916,
																"src": "20517:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 942,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "20500:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 167,
															"src": "20500:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20500:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20485:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 947,
												"nodeType": "ExpressionStatement",
												"src": "20485:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 949,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "20548:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20565:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20557:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 950,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20557:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20557:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 954,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "20569:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 948,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "20539:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20539:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 956,
												"nodeType": "EmitStatement",
												"src": "20534:42:0"
											}
										]
									},
									"documentation": {
										"id": 912,
										"nodeType": "StructuredDocumentation",
										"src": "19928:308:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 958,
												"src": "20256:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20256:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 958,
												"src": "20273:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20273:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20255:33:0"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20298:0:0"
									},
									"scope": 1034,
									"src": "20241:342:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "21083:257:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 969,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "21101:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21118:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21110:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 970,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21110:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21110:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "21101:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21122:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 968,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "21093:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21093:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "21093:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 979,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "21179:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21198:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21190:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 980,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21190:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21190:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "21179:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21202:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 978,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "21171:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21171:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "21171:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 988,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "21250:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 991,
															"indexExpression": {
																"argumentTypes": null,
																"id": 989,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "21262:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21250:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 992,
														"indexExpression": {
															"argumentTypes": null,
															"id": 990,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "21269:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21250:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 993,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "21280:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21250:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 995,
												"nodeType": "ExpressionStatement",
												"src": "21250:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 997,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "21310:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 998,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "21317:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 999,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "21326:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 996,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "21301:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21301:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1001,
												"nodeType": "EmitStatement",
												"src": "21296:37:0"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "20589:414:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1003,
												"src": "21026:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21026:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1003,
												"src": "21041:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21041:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1003,
												"src": "21058:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21058:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21025:48:0"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21083:0:0"
									},
									"scope": 1034,
									"src": "21008:332:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "21579:168:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1012,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "21595:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1013,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "21604:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1011,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "21589:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21589:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1015,
												"nodeType": "ExpressionStatement",
												"src": "21589:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1017,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "21630:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1018,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "21639:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21639:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1027,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "21692:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21700:38:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1020,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "21653:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1022,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1021,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1006,
																			"src": "21665:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "21653:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1025,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1023,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 110,
																			"src": "21674:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 1024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21674:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "21653:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 195,
																"src": "21653:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21653:86:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1016,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "21621:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21621:119:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "21621:119:0"
											}
										]
									},
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "21346:167:0",
										"text": " @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n from the caller's allowance.\n See {_burn} and {_approve}."
									},
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1033,
												"src": "21537:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21537:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1033,
												"src": "21554:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21554:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21536:33:0"
									},
									"returnParameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21579:0:0"
									},
									"scope": 1034,
									"src": "21518:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1035,
							"src": "11737:10012:0"
						}
					],
					"src": "0:21749:0"
				},
				"id": 0
			}
		}
	}
}