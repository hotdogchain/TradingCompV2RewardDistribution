{
	"id": "52c772f7830ed4cecb37a19c4e4848f6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol": {
				"content": "pragma solidity ^0.6.0;\n\ninterface IBEP20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the token decimals.\n     */\n    function decimals() external view returns (uint8);\n\n    /**\n     * @dev Returns the token symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n    * @dev Returns the token name.\n    */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the bep token owner.\n     */\n    function getOwner() external view returns (address);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address _owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n\n\npragma solidity ^0.6.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n\n\n\npragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n\n\n\npragma solidity >=0.4.24 <0.7.0;\n\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n * \n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.\n * \n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n */\nabstract contract Initializable {\n\n    /**\n     * @dev Indicates that the contract has been initialized.\n     */\n    bool private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Modifier to protect an initializer function from being invoked twice.\n     */\n    modifier initializer() {\n        require(_initializing || _isConstructor() || !_initialized, \"Initializable: contract is already initialized\");\n\n        bool isTopLevelCall = !_initializing;\n        if (isTopLevelCall) {\n            _initializing = true;\n            _initialized = true;\n        }\n\n        _;\n\n        if (isTopLevelCall) {\n            _initializing = false;\n        }\n    }\n\n    /// @dev Returns true if and only if the function is running in the constructor\n    function _isConstructor() private view returns (bool) {\n        // extcodesize checks the size of the code stored in an address, and\n        // address returns the current address. Since the code is still not\n        // deployed when running a constructor, any checks on its code size will\n        // yield zero, making it an effective way to detect if a contract is\n        // under construction or not.\n        address self = address(this);\n        uint256 cs;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { cs := extcodesize(self) }\n        return cs == 0;\n    }\n}\n\n\n\npragma solidity ^0.6.0;\n\n\n\n\n\ncontract BEP20TokenImplementation is Context, IBEP20, Initializable {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n    mapping (address => mapping (address => uint256)) private _allowances;\n    uint256 private _totalSupply;\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    address private _owner;\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    bool private _mintable;\n\n    constructor() public {\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev sets initials supply and the owner\n     */\n    function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable, address owner) public initializer {\n        _owner = owner;\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n        _mintable = mintable;\n        _mint(owner, amount);\n    }\n\n    /**\n    * @dev Leaves the contract without owner. It will not be possible to call\n    * `onlyOwner` functions anymore. Can only be called by the current owner.\n    *\n    * NOTE: Renouncing ownership will leave the contract without an owner,\n    * thereby removing any functionality that is only available to the owner.\n    */\n    function renounceOwnership() public onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n\n    /**\n     * @dev Returns if the token is mintable or not\n     */\n    function mintable() external view returns (bool) {\n        return _mintable;\n    }\n\n    /**\n     * @dev Returns the bep token owner.\n     */\n    function getOwner() external override view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Returns the token decimals.\n     */\n    function decimals() external override view returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev Returns the token symbol.\n     */\n    function symbol() external override view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n    * @dev Returns the token name.\n    */\n    function name() external override view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {BEP20-totalSupply}.\n     */\n    function totalSupply() external override view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {BEP20-balanceOf}.\n     */\n    function balanceOf(address account) external override view returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {BEP20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) external override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {BEP20-allowance}.\n     */\n    function allowance(address owner, address spender) external override view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {BEP20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) external override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {BEP20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {BEP20};\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for `sender`'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {BEP20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {BEP20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n     * the total supply.\n     *\n     * Requirements\n     *\n     * - `msg.sender` must be the token owner\n     * - `_mintable` must be true\n     */\n    function mint(uint256 amount) public onlyOwner returns (bool) {\n        require(_mintable, \"this token is not mintable\");\n        _mint(_msgSender(), amount);\n        return true;\n    }\n\n    /**\n   * @dev Burn `amount` tokens and decreasing the total supply.\n   */\n    function burn(uint256 amount) public returns (bool) {\n        _burn(_msgSender(), amount);\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal {\n        require(sender != address(0), \"BEP20: transfer from the zero address\");\n        require(recipient != address(0), \"BEP20: transfer to the zero address\");\n\n        _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal {\n        require(account != address(0), \"BEP20: mint to the zero address\");\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal {\n        require(account != address(0), \"BEP20: burn from the zero address\");\n\n        _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal {\n        require(owner != address(0), \"BEP20: approve from the zero address\");\n        require(spender != address(0), \"BEP20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n     * from the caller's allowance.\n     *\n     * See {_burn} and {_approve}.\n     */\n    function _burnFrom(address account, uint256 amount) internal {\n        _burn(account, amount);\n        _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol": {
				"BEP20TokenImplementation": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "decimals",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "mintable",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintable",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burn `amount` tokens and decreasing the total supply."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"initialize(string,string,uint8,uint256,bool,address)": {
								"details": "sets initials supply and the owner"
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner - `_mintable` must be true"
							},
							"mintable()": {
								"details": "Returns if the token is mintable or not"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":11584:21596  contract BEP20TokenImplementation is Context, IBEP20, Initializable {... */\n  mstore(0x40, 0x80)\n    /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12083:12111  constructor() public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":11584:21596  contract BEP20TokenImplementation is Context, IBEP20, Initializable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":11584:21596  contract BEP20TokenImplementation is Context, IBEP20, Initializable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xef3ebcb8\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x313ce567\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4bf365df\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14226:14318  function name() external override view returns (string memory) {... */\n    tag_3:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_26:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_28\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_26)\n    tag_28:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_29\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_29:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15358:15518  function approve(address spender, uint256 amount) external override returns (bool) {... */\n    tag_4:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_32\n      jump\t// in\n    tag_30:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14377:14477  function totalSupply() external override view returns (uint256) {... */\n    tag_5:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15975:16286  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_37\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13922:14014  function decimals() external override view returns (uint8) {... */\n    tag_7:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16680:16887  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_8:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_42\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18142:18259  function burn(uint256 amount) public returns (bool) {... */\n    tag_9:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      calldataload\n      tag_45\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13624:13706  function mintable() external view returns (bool) {... */\n    tag_10:\n      tag_30\n      tag_47\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14534:14653  function balanceOf(address account) external override view returns (uint256) {... */\n    tag_11:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_50\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13032:13169  function renounceOwnership() public onlyOwner {... */\n    tag_12:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      stop\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13769:13860  function getOwner() external override view returns (address) {... */\n    tag_13:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14074:14170  function symbol() external override view returns (string memory) {... */\n    tag_14:\n      tag_24\n      tag_56\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17873:18058  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_15:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      calldataload\n      tag_63\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17373:17631  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_16:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_66\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14855:15021  function transfer(address recipient, uint256 amount) external override returns (bool) {... */\n    tag_17:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_69\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15078:15221  function allowance(address owner, address spender) external override view returns (uint256) {... */\n    tag_18:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_72\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12384:12696  function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable, address owner) public initializer {... */\n    tag_19:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xc0\n      dup2\n      lt\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      swap5\n      swap4\n      0x20\n      dup2\n      add\n      swap4\n      pop\n      calldataload\n      swap2\n      pop\n      pop\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      pop\n      pop\n      dup2\n      calldataload\n      0xff\n      and\n      swap3\n      pop\n      pop\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x60\n      add\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_81\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13318:13550  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_20:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_84\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14226:14318  function name() external override view returns (string memory) {... */\n    tag_25:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14306:14311  _name */\n      0x04\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14299:14311  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14274:14287  string memory */\n      0x60\n      swap4\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14299:14311  return _name */\n      swap1\n      swap3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14306:14311  _name */\n      swap1\n      swap2\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14299:14311  return _name */\n      dup4\n      add\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14306:14311  _name */\n      dup3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14299:14311  return _name */\n      dup3\n      dup1\n      iszero\n      tag_86\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_87\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_86)\n    tag_87:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_88:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_88\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_86:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14226:14318  function name() external override view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15358:15518  function approve(address spender, uint256 amount) external override returns (bool) {... */\n    tag_32:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15435:15439  bool */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15451:15490  _approve(_msgSender(), spender, amount) */\n      tag_90\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15460:15472  _msgSender() */\n      tag_91\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15460:15470  _msgSender */\n      tag_92\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15460:15472  _msgSender() */\n      jump\t// in\n    tag_91:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15474:15481  spender */\n      dup5\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15483:15489  amount */\n      dup5\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15451:15459  _approve */\n      tag_93\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15451:15490  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_90:\n      pop\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15507:15511  true */\n      0x01\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15358:15518  function approve(address spender, uint256 amount) external override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14377:14477  function totalSupply() external override view returns (uint256) {... */\n    tag_34:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14458:14470  _totalSupply */\n      sload(0x03)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14377:14477  function totalSupply() external override view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15975:16286  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n    tag_37:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16075:16079  bool */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16091:16127  _transfer(sender, recipient, amount) */\n      tag_96\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16101:16107  sender */\n      dup5\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16109:16118  recipient */\n      dup5\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16120:16126  amount */\n      dup5\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16091:16100  _transfer */\n      tag_97\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16091:16127  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_96:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16137:16258  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      tag_98\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16146:16152  sender */\n      dup5\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16154:16166  _msgSender() */\n      tag_99\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16154:16164  _msgSender */\n      tag_92\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16154:16166  _msgSender() */\n      jump\t// in\n    tag_99:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16168:16257  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      tag_100\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16206:16212  amount */\n      dup6\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16168:16257  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16168:16187  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16168:16179  _allowances */\n      0x02\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16168:16187  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16188:16200  _msgSender() */\n      tag_101\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16188:16198  _msgSender */\n      tag_92\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16188:16200  _msgSender() */\n      jump\t// in\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16168:16201  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16168:16257  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16168:16205  _allowances[sender][_msgSender()].sub */\n      tag_102\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16168:16257  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      jump\t// in\n    tag_100:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16137:16145  _approve */\n      tag_93\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16137:16258  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_98:\n      pop\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16275:16279  true */\n      0x01\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15975:16286  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13922:14014  function decimals() external override view returns (uint8) {... */\n    tag_39:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13998:14007  _decimals */\n      and(0xff, sload(0x06))\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13922:14014  function decimals() external override view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16680:16887  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_42:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16760:16764  bool */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16776:16859  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_90\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16785:16797  _msgSender() */\n      tag_106\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16785:16795  _msgSender */\n      tag_92\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16785:16797  _msgSender() */\n      jump\t// in\n    tag_106:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16799:16806  spender */\n      dup5\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16808:16858  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_100\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16847:16857  addedValue */\n      dup6\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16808:16819  _allowances */\n      0x02\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16808:16833  _allowances[_msgSender()] */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16820:16832  _msgSender() */\n      tag_108\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16820:16830  _msgSender */\n      tag_92\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16820:16832  _msgSender() */\n      jump\t// in\n    tag_108:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16808:16833  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16808:16842  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16808:16846  _allowances[_msgSender()][spender].add */\n      tag_109\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":16808:16858  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18142:18259  function burn(uint256 amount) public returns (bool) {... */\n    tag_45:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18188:18192  bool */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18204:18231  _burn(_msgSender(), amount) */\n      tag_111\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18210:18222  _msgSender() */\n      tag_112\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18210:18220  _msgSender */\n      tag_92\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18210:18222  _msgSender() */\n      jump\t// in\n    tag_112:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18224:18230  amount */\n      dup4\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18204:18209  _burn */\n      tag_113\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18204:18231  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_111:\n      pop\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18248:18252  true */\n      0x01\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18142:18259  function burn(uint256 amount) public returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13624:13706  function mintable() external view returns (bool) {... */\n    tag_47:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13690:13699  _mintable */\n      sload(0x06)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13624:13706  function mintable() external view returns (bool) {... */\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14534:14653  function balanceOf(address account) external override view returns (uint256) {... */\n    tag_50:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14628:14646  _balances[account] */\n      and\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14602:14609  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14628:14646  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14628:14637  _balances */\n      0x01\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14628:14646  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14534:14653  function balanceOf(address account) external override view returns (uint256) {... */\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13032:13169  function renounceOwnership() public onlyOwner {... */\n    tag_52:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12248:12260  _msgSender() */\n      tag_117\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12248:12258  _msgSender */\n      tag_92\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12248:12260  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12238:12244  _owner */\n      sload(0x06)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12238:12260  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12230:12297  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_118\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_118:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13114:13120  _owner */\n      sload(0x06)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13093:13133  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13130:13131  0 */\n      0x00\n      swap2\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13114:13120  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13093:13133  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13130:13131  0 */\n      dup4\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13093:13133  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13143:13149  _owner */\n      0x06\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13143:13162  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      and\n      swap1\n      sstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13032:13169  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13769:13860  function getOwner() external override view returns (address) {... */\n    tag_54:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13847:13853  _owner */\n      sload(0x06)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13769:13860  function getOwner() external override view returns (address) {... */\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14074:14170  function symbol() external override view returns (string memory) {... */\n    tag_56:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14156:14163  _symbol */\n      0x05\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14149:14163  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14124:14137  string memory */\n      0x60\n      swap4\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14149:14163  return _symbol */\n      swap1\n      swap3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14156:14163  _symbol */\n      swap1\n      swap2\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14149:14163  return _symbol */\n      dup4\n      add\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14156:14163  _symbol */\n      dup3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14149:14163  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_86\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_87\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_86)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17873:18058  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_63:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17929:17933  bool */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12248:12260  _msgSender() */\n      tag_126\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12248:12258  _msgSender */\n      tag_92\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12248:12260  _msgSender() */\n      jump\t// in\n    tag_126:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12238:12244  _owner */\n      sload(0x06)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12238:12260  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12230:12297  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_127\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_127:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17953:17962  _mintable */\n      sload(0x06)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17945:17993  require(_mintable, \"this token is not mintable\") */\n      tag_129\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1a\n      0x24\n      dup3\n      add\n      mstore\n      0x7468697320746f6b656e206973206e6f74206d696e7461626c65000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_129:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18003:18030  _mint(_msgSender(), amount) */\n      tag_111\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18009:18021  _msgSender() */\n      tag_131\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18009:18019  _msgSender */\n      tag_92\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18009:18021  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18023:18029  amount */\n      dup4\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18003:18008  _mint */\n      tag_132\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18003:18030  _mint(_msgSender(), amount) */\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17373:17631  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_66:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17458:17462  bool */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17474:17603  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      tag_90\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17483:17495  _msgSender() */\n      tag_135\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17483:17493  _msgSender */\n      tag_92\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17483:17495  _msgSender() */\n      jump\t// in\n    tag_135:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17497:17504  spender */\n      dup5\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17506:17602  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      tag_100\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17545:17560  subtractedValue */\n      dup6\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17506:17602  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17506:17517  _allowances */\n      0x02\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17506:17531  _allowances[_msgSender()] */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17518:17530  _msgSender() */\n      tag_137\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17518:17528  _msgSender */\n      tag_92\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17518:17530  _msgSender() */\n      jump\t// in\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17506:17531  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17506:17540  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17506:17602  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17506:17544  _allowances[_msgSender()][spender].sub */\n      tag_102\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":17506:17602  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14855:15021  function transfer(address recipient, uint256 amount) external override returns (bool) {... */\n    tag_69:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14935:14939  bool */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14951:14993  _transfer(_msgSender(), recipient, amount) */\n      tag_90\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14961:14973  _msgSender() */\n      tag_140\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14961:14971  _msgSender */\n      tag_92\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14961:14973  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14975:14984  recipient */\n      dup5\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14986:14992  amount */\n      dup5\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14951:14960  _transfer */\n      tag_97\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":14951:14993  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15078:15221  function allowance(address owner, address spender) external override view returns (uint256) {... */\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15187:15205  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15161:15168  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15187:15205  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15187:15198  _allowances */\n      0x02\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15187:15205  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15187:15214  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":15078:15221  function allowance(address owner, address spender) external override view returns (uint256) {... */\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12384:12696  function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable, address owner) public initializer {... */\n    tag_81:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10516:10529  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10516:10549  _initializing || _isConstructor() */\n      tag_144\n      jumpi\n      pop\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10533:10549  _isConstructor() */\n      tag_144\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10533:10547  _isConstructor */\n      tag_145\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10533:10549  _isConstructor() */\n      jump\t// in\n    tag_144:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10516:10566  _initializing || _isConstructor() || !_initialized */\n      dup1\n      tag_146\n      jumpi\n      pop\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10554:10566  _initialized */\n      and(0xff, sload(0x00))\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10553:10566  !_initialized */\n      iszero\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10516:10566  _initializing || _isConstructor() || !_initialized */\n    tag_146:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10508:10617  require(_initializing || _isConstructor() || !_initialized, \"Initializable: contract is already initialized\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759\n      0x2e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10628:10647  bool isTopLevelCall */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10651:10664  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10650:10664  !_initializing */\n      iszero\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10674:10772  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_148\n      jumpi\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10708:10721  _initializing */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10708:10728  _initializing = true */\n      dup1\n      sload\n      not(0xff)\n      not(0xff00)\n      swap1\n      swap2\n      and\n      0x0100\n      or\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10742:10761  _initialized = true */\n      and\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10724:10728  true */\n      0x01\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10742:10761  _initialized = true */\n      or\n      swap1\n      sstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10674:10772  if (isTopLevelCall) {... */\n    tag_148:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12537:12543  _owner */\n      0x06\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12537:12551  _owner = owner */\n      dup1\n      sload\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      and\n      0x0100\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      mul\n      or\n      swap1\n      sstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12561:12573  _name = name */\n      dup7\n      mload\n      tag_150\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12561:12566  _name */\n      0x04\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12561:12573  _name = name */\n      0x20\n      dup11\n      add\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      pop\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12583:12599  _symbol = symbol */\n      dup6\n      mload\n      tag_152\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12583:12590  _symbol */\n      0x05\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12583:12599  _symbol = symbol */\n      0x20\n      dup10\n      add\n      swap1\n      tag_151\n      jump\t// in\n    tag_152:\n      pop\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12609:12618  _decimals */\n      0x06\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12609:12629  _decimals = decimals */\n      dup1\n      sload\n      not(0xff)\n      and\n      0xff\n      dup8\n      and\n      or\n      not(shl(0xa8, 0xff))\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12639:12659  _mintable = mintable */\n      and\n      shl(0xa8, 0x01)\n      dup6\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12669:12689  _mint(owner, amount) */\n      tag_153\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12675:12680  owner */\n      dup3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12682:12688  amount */\n      dup6\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12669:12674  _mint */\n      tag_132\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12669:12689  _mint(owner, amount) */\n      jump\t// in\n    tag_153:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10798:10812  isTopLevelCall */\n      dup1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10794:10860  if (isTopLevelCall) {... */\n      iszero\n      tag_154\n      jumpi\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10844:10849  false */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10828:10849  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10794:10860  if (isTopLevelCall) {... */\n    tag_154:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12384:12696  function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable, address owner) public initializer {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13318:13550  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_84:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12248:12260  _msgSender() */\n      tag_156\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12248:12258  _msgSender */\n      tag_92\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12248:12260  _msgSender() */\n      jump\t// in\n    tag_156:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12238:12244  _owner */\n      sload(0x06)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12238:12260  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":12230:12297  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_157\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_157:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13398:13420  newOwner != address(0) */\n      dup2\n      and\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13390:13463  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13499:13505  _owner */\n      sload(0x06)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13478:13516  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup5\n      and\n      swap3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13499:13505  _owner */\n      0x0100\n      swap1\n      div\n      and\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13478:13516  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13526:13532  _owner */\n      0x06\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13526:13543  _owner = newOwner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      0x0100\n      mul\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":13318:13550  function transferOwnership(address newOwner) public onlyOwner {... */\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":3606:3710  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_92:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":3693:3703  msg.sender */\n      caller\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":3606:3710  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20855:21187  function _approve(address owner, address spender, uint256 amount) internal {... */\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20948:20967  owner != address(0) */\n      dup4\n      and\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20940:21008  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":21026:21047  spender != address(0) */\n      dup3\n      and\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":21018:21086  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":21097:21115  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":21097:21108  _allowances */\n      0x02\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":21097:21115  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":21097:21124  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":21097:21133  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":21148:21180  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20855:21187  function _approve(address owner, address spender, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18733:19197  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_97:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18830:18850  sender != address(0) */\n      dup4\n      and\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18822:18892  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18910:18933  recipient != address(0) */\n      dup3\n      and\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18902:18973  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19004:19075  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_167\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19026:19032  amount */\n      dup2\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19004:19075  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19004:19021  _balances[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19004:19013  _balances */\n      0x01\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19004:19021  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19004:19075  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19004:19025  _balances[sender].sub */\n      tag_102\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19004:19075  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      jump\t// in\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18984:19001  _balances[sender] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18984:18993  _balances */\n      0x01\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18984:19001  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18984:19075  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19108:19128  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19108:19140  _balances[recipient].add(amount) */\n      tag_168\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19133:19139  amount */\n      dup3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19108:19132  _balances[recipient].add */\n      tag_109\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19108:19140  _balances[recipient].add(amount) */\n      jump\t// in\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19085:19105  _balances[recipient] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19085:19094  _balances */\n      0x01\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19085:19105  _balances[recipient] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19085:19140  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19155:19190  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19085:19105  _balances[recipient] */\n      swap2\n      swap4\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19155:19190  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":18733:19197  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5665:5852  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_102:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5751:5758  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5786:5798  errorMessage */\n      dup2\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5778:5784  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5770:5799  require(b <= a, errorMessage) */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_171:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_173\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_171)\n    tag_173:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_174\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_174:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n      pop\n      pop\n      pop\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5821:5826  a - b */\n      swap1\n      sub\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5665:5852  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":4793:4969  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_109:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":4851:4858  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":4882:4887  a + b */\n      dup3\n      dup3\n      add\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":4905:4911  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":4897:4943  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_176\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_176:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":4961:4962  c */\n      swap4\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":4793:4969  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20088:20430  function _burn(address account, uint256 amount) internal {... */\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20163:20184  account != address(0) */\n      dup3\n      and\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20155:20222  require(account != address(0), \"BEP20: burn from the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20254:20322  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      tag_179\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20277:20283  amount */\n      dup2\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20254:20322  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032\n      0x22\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20254:20272  _balances[account] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20254:20263  _balances */\n      0x01\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20254:20272  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20254:20322  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20254:20276  _balances[account].sub */\n      tag_102\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20254:20322  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      jump\t// in\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20233:20251  _balances[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20233:20242  _balances */\n      0x01\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20233:20251  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20233:20322  _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      sstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20347:20359  _totalSupply */\n      sload(0x03)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20347:20371  _totalSupply.sub(amount) */\n      tag_180\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20364:20370  amount */\n      dup3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20347:20363  _totalSupply.sub */\n      tag_181\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20347:20371  _totalSupply.sub(amount) */\n      jump\t// in\n    tag_180:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20332:20344  _totalSupply */\n      0x03\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20332:20371  _totalSupply = _totalSupply.sub(amount) */\n      sstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20386:20423  Transfer(account, address(0), amount) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20412:20413  0 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20386:20423  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":20088:20430  function _burn(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19467:19769  function _mint(address account, uint256 amount) internal {... */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19542:19563  account != address(0) */\n      dup3\n      and\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19534:19599  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_183\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_183:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19625:19637  _totalSupply */\n      sload(0x03)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19625:19649  _totalSupply.add(amount) */\n      tag_184\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19642:19648  amount */\n      dup3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19625:19641  _totalSupply.add */\n      tag_109\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19625:19649  _totalSupply.add(amount) */\n      jump\t// in\n    tag_184:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19610:19622  _totalSupply */\n      0x03\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19610:19649  _totalSupply = _totalSupply.add(amount) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19680:19698  _balances[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19680:19689  _balances */\n      0x01\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19680:19698  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19680:19710  _balances[account].add(amount) */\n      tag_185\n      swap1\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19703:19709  amount */\n      dup3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19680:19702  _balances[account].add */\n      tag_109\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19680:19710  _balances[account].add(amount) */\n      jump\t// in\n    tag_185:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19659:19677  _balances[account] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19659:19668  _balances */\n      0x01\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19659:19677  _balances[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19659:19710  _balances[account] = _balances[account].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19725:19762  Transfer(address(0), account, amount) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19659:19677  _balances[account] */\n      swap3\n      swap4\n      swap2\n      swap3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19725:19762  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":19467:19769  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10956:11549  function _isConstructor() private view returns (bool) {... */\n    tag_145:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":11392:11396  this */\n      address\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":11500:11517  extcodesize(self) */\n      extcodesize\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":11535:11542  cs == 0 */\n      iszero\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":10956:11549  function _isConstructor() private view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5240:5374  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_181:\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5298:5305  uint256 */\n      0x00\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5324:5367  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_176\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5328:5329  a */\n      dup4\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5331:5332  b */\n      dup4\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5324:5367  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5324:5327  sub */\n      tag_102\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":5324:5367  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_151:\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      0x1f\n      lt\n      tag_190\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_192)\n    tag_190:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_192\n      jumpi\n      swap2\n      dup3\n      add\n    tag_191:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_192\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_191)\n    tag_192:\n      pop\n      tag_193\n      swap3\n      swap2\n      pop\n      tag_194\n      jump\t// in\n    tag_193:\n      pop\n      swap1\n      jump\t// out\n    tag_194:\n    tag_195:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_193\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_195)\n    stop\n    data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57 42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4 42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759 496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2 42455032303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855 42455032303a206275726e2066726f6d20746865207a65726f2061646472657373\n    data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032 42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365\n    data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5 42455032303a20617070726f766520746f20746865207a65726f2061646472657373\n\n    auxdata: 0xa264697066735822122000c874143ee13aaf1ca14eac5206b14fd2901d6dedede60e600221bc4cc0363064736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138E DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0xEF3EBCB8 EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4E2 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2F3 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x4BF365DF EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x297 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x145 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x18A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x59E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x648 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x651 JUMP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x69F JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x6BA JUMP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6CA JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x6E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CF PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x123 PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x819 JUMP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x8F9 JUMP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x961 JUMP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x975 JUMP JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP POP DUP2 CALLDATALOAD PUSH1 0xFF AND SWAP3 POP POP PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xABA JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x594 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x569 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x594 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x577 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B2 PUSH2 0x5AB PUSH2 0xBD5 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xBD9 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CE DUP5 DUP5 DUP5 PUSH2 0xCC5 JUMP JUMPDEST PUSH2 0x63E DUP5 PUSH2 0x5DA PUSH2 0xBD5 JUMP JUMPDEST PUSH2 0x639 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1230 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x618 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xE17 JUMP JUMPDEST PUSH2 0xBD9 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B2 PUSH2 0x65E PUSH2 0xBD5 JUMP JUMPDEST DUP5 PUSH2 0x639 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x66F PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xEAE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B2 PUSH2 0x6AC PUSH2 0xBD5 JUMP JUMPDEST DUP4 PUSH2 0xF0F JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6ED PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x754 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x6 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x594 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x569 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x594 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x823 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x88A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8E8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7468697320746F6B656E206973206E6F74206D696E7461626C65000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6B2 PUSH2 0x8F3 PUSH2 0xBD5 JUMP JUMPDEST DUP4 PUSH2 0xFFF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B2 PUSH2 0x906 PUSH2 0xBD5 JUMP JUMPDEST DUP5 PUSH2 0x639 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12CF PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x930 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B2 PUSH2 0x96E PUSH2 0xBD5 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x9B9 JUMPI POP PUSH2 0x9B9 PUSH2 0x10E5 JUMP JUMPDEST DUP1 PUSH2 0x9C7 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xA02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1258 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xA2D JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND MUL OR SWAP1 SSTORE DUP7 MLOAD PUSH2 0xA60 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP11 ADD SWAP1 PUSH2 0x112D JUMP JUMPDEST POP DUP6 MLOAD PUSH2 0xA74 SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP10 ADD SWAP1 PUSH2 0x112D JUMP JUMPDEST POP PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP8 AND OR PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL DUP6 ISZERO ISZERO MUL OR SWAP1 SSTORE PUSH2 0xA9F DUP3 DUP6 PUSH2 0xFFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAB1 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAC2 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xB29 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB6E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x120A PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x11E6 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1337 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x11C1 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x12AC PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD8C DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1286 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xDBB SWAP1 DUP3 PUSH2 0xEAE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xEA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE6B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE53 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xE98 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xF08 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x12F4 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF91 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1315 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x3 SLOAD PUSH2 0xFB7 SWAP1 DUP3 PUSH2 0x10EB JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x105A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1067 SWAP1 DUP3 PUSH2 0xEAE JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x108D SWAP1 DUP3 PUSH2 0xEAE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF08 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xE17 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x116E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x119B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x119B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x119B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1180 JUMP JUMPDEST POP PUSH2 0x11A7 SWAP3 SWAP2 POP PUSH2 0x11AB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x11A7 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x11AC JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E6365496E PUSH10 0x7469616C697A61626C65 GASPRICE KECCAK256 PUSH4 0x6F6E7472 PUSH2 0x6374 KECCAK256 PUSH10 0x7320616C726561647920 PUSH10 0x6E697469616C697A6564 TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737342455032303A206275726E20616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65424550 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A264697066735822122000C874143EE1 GASPRICE 0xAF SHR LOG1 0x4E 0xAC MSTORE MOD 0xB1 0x4F 0xD2 SWAP1 SAR PUSH14 0xEDEDE60E600221BC4CC036306473 PUSH16 0x6C634300060C00330000000000000000 ",
							"sourceMap": "11584:10012:0:-:0;;;12083:28;;;;;;;;;;11584:10012;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063a457c2d711610071578063a457c2d714610310578063a9059cbb1461033c578063dd62ed3e14610368578063ef3ebcb814610396578063f2fde38b146104e257610116565b8063715018a6146102bd578063893d20e8146102c757806395d89b41146102eb578063a0712d68146102f357610116565b8063313ce567116100e9578063313ce56714610228578063395093511461024657806342966c68146102725780634bf365df1461028f57806370a082311461029757610116565b806306fdde031461011b578063095ea7b31461019857806318160ddd146101d857806323b872dd146101f2575b600080fd5b610123610508565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561015d578181015183820152602001610145565b50505050905090810190601f16801561018a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101c4600480360360408110156101ae57600080fd5b506001600160a01b03813516906020013561059e565b604080519115158252519081900360200190f35b6101e06105bb565b60408051918252519081900360200190f35b6101c46004803603606081101561020857600080fd5b506001600160a01b038135811691602081013590911690604001356105c1565b610230610648565b6040805160ff9092168252519081900360200190f35b6101c46004803603604081101561025c57600080fd5b506001600160a01b038135169060200135610651565b6101c46004803603602081101561028857600080fd5b503561069f565b6101c46106ba565b6101e0600480360360208110156102ad57600080fd5b50356001600160a01b03166106ca565b6102c56106e5565b005b6102cf6107a4565b604080516001600160a01b039092168252519081900360200190f35b6101236107b8565b6101c46004803603602081101561030957600080fd5b5035610819565b6101c46004803603604081101561032657600080fd5b506001600160a01b0381351690602001356108f9565b6101c46004803603604081101561035257600080fd5b506001600160a01b038135169060200135610961565b6101e06004803603604081101561037e57600080fd5b506001600160a01b0381358116916020013516610975565b6102c5600480360360c08110156103ac57600080fd5b8101906020810181356401000000008111156103c757600080fd5b8201836020820111156103d957600080fd5b803590602001918460018302840111640100000000831117156103fb57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561044e57600080fd5b82018360208201111561046057600080fd5b8035906020019184600183028401116401000000008311171561048257600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505050813560ff169250506020810135906040810135151590606001356001600160a01b03166109a0565b6102c5600480360360208110156104f857600080fd5b50356001600160a01b0316610aba565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105945780601f1061056957610100808354040283529160200191610594565b820191906000526020600020905b81548152906001019060200180831161057757829003601f168201915b5050505050905090565b60006105b26105ab610bd5565b8484610bd9565b50600192915050565b60035490565b60006105ce848484610cc5565b61063e846105da610bd5565b61063985604051806060016040528060288152602001611230602891396001600160a01b038a16600090815260026020526040812090610618610bd5565b6001600160a01b031681526020810191909152604001600020549190610e17565b610bd9565b5060019392505050565b60065460ff1690565b60006105b261065e610bd5565b84610639856002600061066f610bd5565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610eae565b60006106b26106ac610bd5565b83610f0f565b506001919050565b600654600160a81b900460ff1690565b6001600160a01b031660009081526001602052604090205490565b6106ed610bd5565b60065461010090046001600160a01b03908116911614610754576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60065460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360068054610100600160a81b0319169055565b60065461010090046001600160a01b031690565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105945780601f1061056957610100808354040283529160200191610594565b6000610823610bd5565b60065461010090046001600160a01b0390811691161461088a576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600654600160a81b900460ff166108e8576040805162461bcd60e51b815260206004820152601a60248201527f7468697320746f6b656e206973206e6f74206d696e7461626c65000000000000604482015290519081900360640190fd5b6106b26108f3610bd5565b83610fff565b60006105b2610906610bd5565b84610639856040518060600160405280602581526020016112cf6025913960026000610930610bd5565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610e17565b60006105b261096e610bd5565b8484610cc5565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b600054610100900460ff16806109b957506109b96110e5565b806109c7575060005460ff16155b610a025760405162461bcd60e51b815260040180806020018281038252602e815260200180611258602e913960400191505060405180910390fd5b600054610100900460ff16158015610a2d576000805460ff1961ff0019909116610100171660011790555b60068054610100600160a81b0319166101006001600160a01b038516021790558651610a609060049060208a019061112d565b508551610a7490600590602089019061112d565b506006805460ff191660ff87161760ff60a81b1916600160a81b85151502179055610a9f8285610fff565b8015610ab1576000805461ff00191690555b50505050505050565b610ac2610bd5565b60065461010090046001600160a01b03908116911614610b29576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116610b6e5760405162461bcd60e51b815260040180806020018281038252602681526020018061120a6026913960400191505060405180910390fd5b6006546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600680546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b3390565b6001600160a01b038316610c1e5760405162461bcd60e51b81526004018080602001828103825260248152602001806111e66024913960400191505060405180910390fd5b6001600160a01b038216610c635760405162461bcd60e51b81526004018080602001828103825260228152602001806113376022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610d0a5760405162461bcd60e51b81526004018080602001828103825260258152602001806111c16025913960400191505060405180910390fd5b6001600160a01b038216610d4f5760405162461bcd60e51b81526004018080602001828103825260238152602001806112ac6023913960400191505060405180910390fd5b610d8c81604051806060016040528060268152602001611286602691396001600160a01b0386166000908152600160205260409020549190610e17565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610dbb9082610eae565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610ea65760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610e6b578181015183820152602001610e53565b50505050905090810190601f168015610e985780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610f08576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610f545760405162461bcd60e51b81526004018080602001828103825260218152602001806112f46021913960400191505060405180910390fd5b610f9181604051806060016040528060228152602001611315602291396001600160a01b0385166000908152600160205260409020549190610e17565b6001600160a01b038316600090815260016020526040902055600354610fb790826110eb565b6003556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6001600160a01b03821661105a576040805162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6003546110679082610eae565b6003556001600160a01b03821660009081526001602052604090205461108d9082610eae565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b303b1590565b6000610f0883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610e17565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061116e57805160ff191683800117855561119b565b8280016001018555821561119b579182015b8281111561119b578251825591602001919060010190611180565b506111a79291506111ab565b5090565b5b808211156111a757600081556001016111ac56fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a656442455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e2066726f6d20746865207a65726f206164647265737342455032303a206275726e20616d6f756e7420657863656564732062616c616e636542455032303a20617070726f766520746f20746865207a65726f2061646472657373a264697066735822122000c874143ee13aaf1ca14eac5206b14fd2901d6dedede60e600221bc4cc0363064736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0xEF3EBCB8 EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4E2 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2F3 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x4BF365DF EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x297 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x145 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x18A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x59E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x648 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x651 JUMP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x69F JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x6BA JUMP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6CA JUMP JUMPDEST PUSH2 0x2C5 PUSH2 0x6E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CF PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x123 PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x819 JUMP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x8F9 JUMP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x961 JUMP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x975 JUMP JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP POP DUP2 CALLDATALOAD PUSH1 0xFF AND SWAP3 POP POP PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xABA JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x594 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x569 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x594 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x577 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B2 PUSH2 0x5AB PUSH2 0xBD5 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xBD9 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CE DUP5 DUP5 DUP5 PUSH2 0xCC5 JUMP JUMPDEST PUSH2 0x63E DUP5 PUSH2 0x5DA PUSH2 0xBD5 JUMP JUMPDEST PUSH2 0x639 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1230 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x618 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xE17 JUMP JUMPDEST PUSH2 0xBD9 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B2 PUSH2 0x65E PUSH2 0xBD5 JUMP JUMPDEST DUP5 PUSH2 0x639 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x66F PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xEAE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B2 PUSH2 0x6AC PUSH2 0xBD5 JUMP JUMPDEST DUP4 PUSH2 0xF0F JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6ED PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x754 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x6 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x594 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x569 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x594 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x823 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x88A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8E8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7468697320746F6B656E206973206E6F74206D696E7461626C65000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6B2 PUSH2 0x8F3 PUSH2 0xBD5 JUMP JUMPDEST DUP4 PUSH2 0xFFF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B2 PUSH2 0x906 PUSH2 0xBD5 JUMP JUMPDEST DUP5 PUSH2 0x639 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12CF PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x930 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B2 PUSH2 0x96E PUSH2 0xBD5 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x9B9 JUMPI POP PUSH2 0x9B9 PUSH2 0x10E5 JUMP JUMPDEST DUP1 PUSH2 0x9C7 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xA02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1258 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xA2D JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND MUL OR SWAP1 SSTORE DUP7 MLOAD PUSH2 0xA60 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP11 ADD SWAP1 PUSH2 0x112D JUMP JUMPDEST POP DUP6 MLOAD PUSH2 0xA74 SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP10 ADD SWAP1 PUSH2 0x112D JUMP JUMPDEST POP PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP8 AND OR PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL DUP6 ISZERO ISZERO MUL OR SWAP1 SSTORE PUSH2 0xA9F DUP3 DUP6 PUSH2 0xFFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAB1 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAC2 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xB29 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB6E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x120A PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x11E6 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1337 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x11C1 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x12AC PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD8C DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1286 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xDBB SWAP1 DUP3 PUSH2 0xEAE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xEA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE6B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE53 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xE98 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xF08 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x12F4 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF91 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1315 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x3 SLOAD PUSH2 0xFB7 SWAP1 DUP3 PUSH2 0x10EB JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x105A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1067 SWAP1 DUP3 PUSH2 0xEAE JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x108D SWAP1 DUP3 PUSH2 0xEAE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF08 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xE17 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x116E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x119B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x119B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x119B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1180 JUMP JUMPDEST POP PUSH2 0x11A7 SWAP3 SWAP2 POP PUSH2 0x11AB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x11A7 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x11AC JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E6365496E PUSH10 0x7469616C697A61626C65 GASPRICE KECCAK256 PUSH4 0x6F6E7472 PUSH2 0x6374 KECCAK256 PUSH10 0x7320616C726561647920 PUSH10 0x6E697469616C697A6564 TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737342455032303A206275726E20616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65424550 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A264697066735822122000C874143EE1 GASPRICE 0xAF SHR LOG1 0x4E 0xAC MSTORE MOD 0xB1 0x4F 0xD2 SWAP1 SAR PUSH14 0xEDEDE60E600221BC4CC036306473 PUSH16 0x6C634300060C00330000000000000000 ",
							"sourceMap": "11584:10012:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14226:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15358:160;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;15358:160:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;14377:100;;;:::i;:::-;;;;;;;;;;;;;;;;15975:311;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;15975:311:0;;;;;;;;;;;;;;;;;:::i;13922:92::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;16680:207;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;16680:207:0;;;;;;;;:::i;18142:117::-;;;;;;;;;;;;;;;;-1:-1:-1;18142:117:0;;:::i;13624:82::-;;;:::i;14534:119::-;;;;;;;;;;;;;;;;-1:-1:-1;14534:119:0;-1:-1:-1;;;;;14534:119:0;;:::i;13032:137::-;;;:::i;:::-;;13769:91;;;:::i;:::-;;;;-1:-1:-1;;;;;13769:91:0;;;;;;;;;;;;;;14074:96;;;:::i;17873:185::-;;;;;;;;;;;;;;;;-1:-1:-1;17873:185:0;;:::i;17373:258::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;17373:258:0;;;;;;;;:::i;14855:166::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;14855:166:0;;;;;;;;:::i;15078:143::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;15078:143:0;;;;;;;;;;:::i;12384:312::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12384:312:0;;;;;;;;-1:-1:-1;12384:312:0;;-1:-1:-1;;12384:312:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12384:312:0;;-1:-1:-1;;;12384:312:0;;;;;-1:-1:-1;;12384:312:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;12384:312:0;;:::i;13318:232::-;;;;;;;;;;;;;;;;-1:-1:-1;13318:232:0;-1:-1:-1;;;;;13318:232:0;;:::i;14226:92::-;14306:5;14299:12;;;;;;;;-1:-1:-1;;14299:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14274:13;;14299:12;;14306:5;;14299:12;;14306:5;14299:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14226:92;:::o;15358:160::-;15435:4;15451:39;15460:12;:10;:12::i;:::-;15474:7;15483:6;15451:8;:39::i;:::-;-1:-1:-1;15507:4:0;15358:160;;;;:::o;14377:100::-;14458:12;;14377:100;:::o;15975:311::-;16075:4;16091:36;16101:6;16109:9;16120:6;16091:9;:36::i;:::-;16137:121;16146:6;16154:12;:10;:12::i;:::-;16168:89;16206:6;16168:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16168:19:0;;;;;;:11;:19;;;;;;16188:12;:10;:12::i;:::-;-1:-1:-1;;;;;16168:33:0;;;;;;;;;;;;-1:-1:-1;16168:33:0;;;:89;:37;:89::i;:::-;16137:8;:121::i;:::-;-1:-1:-1;16275:4:0;15975:311;;;;;:::o;13922:92::-;13998:9;;;;13922:92;:::o;16680:207::-;16760:4;16776:83;16785:12;:10;:12::i;:::-;16799:7;16808:50;16847:10;16808:11;:25;16820:12;:10;:12::i;:::-;-1:-1:-1;;;;;16808:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;16808:25:0;;;:34;;;;;;;;;;;:38;:50::i;18142:117::-;18188:4;18204:27;18210:12;:10;:12::i;:::-;18224:6;18204:5;:27::i;:::-;-1:-1:-1;18248:4:0;18142:117;;;:::o;13624:82::-;13690:9;;-1:-1:-1;;;13690:9:0;;;;;13624:82::o;14534:119::-;-1:-1:-1;;;;;14628:18:0;14602:7;14628:18;;;:9;:18;;;;;;;14534:119::o;13032:137::-;12248:12;:10;:12::i;:::-;12238:6;;;;;-1:-1:-1;;;;;12238:6:0;;;:22;;;12230:67;;;;;-1:-1:-1;;;12230:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13114:6:::1;::::0;13093:40:::1;::::0;13130:1:::1;::::0;13114:6:::1;::::0;::::1;-1:-1:-1::0;;;;;13114:6:0::1;::::0;13093:40:::1;::::0;13130:1;;13093:40:::1;13143:6;:19:::0;;-1:-1:-1;;;;;;13143:19:0::1;::::0;;13032:137::o;13769:91::-;13847:6;;;;;-1:-1:-1;;;;;13847:6:0;;13769:91::o;14074:96::-;14156:7;14149:14;;;;;;;;-1:-1:-1;;14149:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14124:13;;14149:14;;14156:7;;14149:14;;14156:7;14149:14;;;;;;;;;;;;;;;;;;;;;;;;17873:185;17929:4;12248:12;:10;:12::i;:::-;12238:6;;;;;-1:-1:-1;;;;;12238:6:0;;;:22;;;12230:67;;;;;-1:-1:-1;;;12230:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17953:9:::1;::::0;-1:-1:-1;;;17953:9:0;::::1;;;17945:48;;;::::0;;-1:-1:-1;;;17945:48:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;18003:27;18009:12;:10;:12::i;:::-;18023:6;18003:5;:27::i;17373:258::-:0;17458:4;17474:129;17483:12;:10;:12::i;:::-;17497:7;17506:96;17545:15;17506:96;;;;;;;;;;;;;;;;;:11;:25;17518:12;:10;:12::i;:::-;-1:-1:-1;;;;;17506:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;17506:25:0;;;:34;;;;;;;;;;;:96;:38;:96::i;14855:166::-;14935:4;14951:42;14961:12;:10;:12::i;:::-;14975:9;14986:6;14951:9;:42::i;15078:143::-;-1:-1:-1;;;;;15187:18:0;;;15161:7;15187:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;15078:143::o;12384:312::-;10516:13;;;;;;;;:33;;;10533:16;:14;:16::i;:::-;10516:50;;;-1:-1:-1;10554:12:0;;;;10553:13;10516:50;10508:109;;;;-1:-1:-1;;;10508:109:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10628:19;10651:13;;;;;;10650:14;10674:98;;;;10708:13;:20;;-1:-1:-1;;;;10708:20:0;;;;;10742:19;10724:4;10742:19;;;10674:98;12537:6:::1;:14:::0;;-1:-1:-1;;;;;;12537:14:0::1;;-1:-1:-1::0;;;;;12537:14:0;::::1;;;::::0;;12561:12;;::::1;::::0;:5:::1;::::0;:12:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;12583:16:0;;::::1;::::0;:7:::1;::::0;:16:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;12609:9:0::1;:20:::0;;-1:-1:-1;;12609:20:0::1;;::::0;::::1;;-1:-1:-1::0;;;;12639:20:0::1;-1:-1:-1::0;;;12639:20:0;::::1;;;;::::0;;12669::::1;12675:5:::0;12682:6;12669:5:::1;:20::i;:::-;10798:14:::0;10794:66;;;10844:5;10828:21;;-1:-1:-1;;10828:21:0;;;10794:66;12384:312;;;;;;;:::o;13318:232::-;12248:12;:10;:12::i;:::-;12238:6;;;;;-1:-1:-1;;;;;12238:6:0;;;:22;;;12230:67;;;;;-1:-1:-1;;;12230:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13398:22:0;::::1;13390:73;;;;-1:-1:-1::0;;;13390:73:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13499:6;::::0;13478:38:::1;::::0;-1:-1:-1;;;;;13478:38:0;;::::1;::::0;13499:6:::1;::::0;::::1;;::::0;13478:38:::1;::::0;;;::::1;13526:6;:17:::0;;-1:-1:-1;;;;;13526:17:0;;::::1;;;-1:-1:-1::0;;;;;;13526:17:0;;::::1;::::0;;;::::1;::::0;;13318:232::o;3606:104::-;3693:10;3606:104;:::o;20855:332::-;-1:-1:-1;;;;;20948:19:0;;20940:68;;;;-1:-1:-1;;;20940:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21026:21:0;;21018:68;;;;-1:-1:-1;;;21018:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21097:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;21148:32;;;;;;;;;;;;;;;;;20855:332;;;:::o;18733:464::-;-1:-1:-1;;;;;18830:20:0;;18822:70;;;;-1:-1:-1;;;18822:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18910:23:0;;18902:71;;;;-1:-1:-1;;;18902:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19004;19026:6;19004:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19004:17:0;;;;;;:9;:17;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;18984:17:0;;;;;;;:9;:17;;;;;;:91;;;;19108:20;;;;;;;:32;;19133:6;19108:24;:32::i;:::-;-1:-1:-1;;;;;19085:20:0;;;;;;;:9;:20;;;;;;;;;:55;;;;19155:35;;;;;;;19085:20;;19155:35;;;;;;;;;;;;;18733:464;;;:::o;5665:187::-;5751:7;5786:12;5778:6;;;;5770:29;;;;-1:-1:-1;;;5770:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5821:5:0;;;5665:187::o;4793:176::-;4851:7;4882:5;;;4905:6;;;;4897:46;;;;;-1:-1:-1;;;4897:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;4961:1;4793:176;-1:-1:-1;;;4793:176:0:o;20088:342::-;-1:-1:-1;;;;;20163:21:0;;20155:67;;;;-1:-1:-1;;;20155:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20254:68;20277:6;20254:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20254:18:0;;;;;;:9;:18;;;;;;;:68;:22;:68::i;:::-;-1:-1:-1;;;;;20233:18:0;;;;;;:9;:18;;;;;:89;20347:12;;:24;;20364:6;20347:16;:24::i;:::-;20332:12;:39;20386:37;;;;;;;;20412:1;;-1:-1:-1;;;;;20386:37:0;;;;;;;;;;;;20088:342;;:::o;19467:302::-;-1:-1:-1;;;;;19542:21:0;;19534:65;;;;;-1:-1:-1;;;19534:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;19625:12;;:24;;19642:6;19625:16;:24::i;:::-;19610:12;:39;-1:-1:-1;;;;;19680:18:0;;;;;;:9;:18;;;;;;:30;;19703:6;19680:22;:30::i;:::-;-1:-1:-1;;;;;19659:18:0;;;;;;:9;:18;;;;;;;;:51;;;;19725:37;;;;;;;19659:18;;;;19725:37;;;;;;;;;;19467:302;;:::o;10956:593::-;11392:4;11500:17;11535:7;10956:593;:::o;5240:134::-;5298:7;5324:43;5328:1;5331;5324:43;;;;;;;;;;;;;;;;;:3;:43::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1001200",
								"executionCost": "1041",
								"totalCost": "1002241"
							},
							"external": {
								"allowance(address,address)": "1316",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1253",
								"burn(uint256)": "infinite",
								"decimals()": "1036",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "1093",
								"increaseAllowance(address,uint256)": "infinite",
								"initialize(string,string,uint8,uint256,bool,address)": "infinite",
								"mint(uint256)": "infinite",
								"mintable()": "1116",
								"name()": "infinite",
								"renounceOwnership()": "24246",
								"symbol()": "infinite",
								"totalSupply()": "1066",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 11584,
									"end": 21596,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 11584,
									"end": 21596,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11584,
									"end": 21596,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12083,
									"end": 12111,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 12083,
									"end": 12111,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12083,
									"end": 12111,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12083,
									"end": 12111,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12083,
									"end": 12111,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12083,
									"end": 12111,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12083,
									"end": 12111,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12083,
									"end": 12111,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12083,
									"end": 12111,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12083,
									"end": 12111,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12083,
									"end": 12111,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11584,
									"end": 21596,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11584,
									"end": 21596,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11584,
									"end": 21596,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11584,
									"end": 21596,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11584,
									"end": 21596,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 11584,
									"end": 21596,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11584,
									"end": 21596,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122000c874143ee13aaf1ca14eac5206b14fd2901d6dedede60e600221bc4cc0363064736f6c634300060c0033",
									".code": [
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH",
											"source": 0,
											"value": "EF3EBCB8"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH",
											"source": 0,
											"value": "A0712D68"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH",
											"source": 0,
											"value": "4BF365DF"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 21596,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14377,
											"end": 14477,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14377,
											"end": 14477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14377,
											"end": 14477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14377,
											"end": 14477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14377,
											"end": 14477,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14377,
											"end": 14477,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14377,
											"end": 14477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14377,
											"end": 14477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14377,
											"end": 14477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14377,
											"end": 14477,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14377,
											"end": 14477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14377,
											"end": 14477,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14377,
											"end": 14477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14377,
											"end": 14477,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14377,
											"end": 14477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14377,
											"end": 14477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14377,
											"end": 14477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14377,
											"end": 14477,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14377,
											"end": 14477,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14377,
											"end": 14477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14377,
											"end": 14477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14377,
											"end": 14477,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13922,
											"end": 14014,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13922,
											"end": 14014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 13922,
											"end": 14014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 13922,
											"end": 14014,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13922,
											"end": 14014,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 13922,
											"end": 14014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14014,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13922,
											"end": 14014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14014,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 13922,
											"end": 14014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14014,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14014,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14014,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13922,
											"end": 14014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14014,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16887,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 16680,
											"end": 16887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 16680,
											"end": 16887,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16680,
											"end": 16887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16887,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16887,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16887,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16680,
											"end": 16887,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16887,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16887,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 16680,
											"end": 16887,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16887,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16680,
											"end": 16887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16887,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16887,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 16680,
											"end": 16887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16680,
											"end": 16887,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16887,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16887,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16887,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16680,
											"end": 16887,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16887,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16680,
											"end": 16887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 16680,
											"end": 16887,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18142,
											"end": 18259,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 18142,
											"end": 18259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18142,
											"end": 18259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 18142,
											"end": 18259,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18142,
											"end": 18259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18142,
											"end": 18259,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18142,
											"end": 18259,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18142,
											"end": 18259,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18142,
											"end": 18259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18142,
											"end": 18259,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18142,
											"end": 18259,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18142,
											"end": 18259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 18142,
											"end": 18259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18142,
											"end": 18259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18142,
											"end": 18259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18142,
											"end": 18259,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18142,
											"end": 18259,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 18142,
											"end": 18259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18142,
											"end": 18259,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 18142,
											"end": 18259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 18142,
											"end": 18259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13624,
											"end": 13706,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 13624,
											"end": 13706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13624,
											"end": 13706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 13624,
											"end": 13706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 13624,
											"end": 13706,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14534,
											"end": 14653,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 14534,
											"end": 14653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14534,
											"end": 14653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14534,
											"end": 14653,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14534,
											"end": 14653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14534,
											"end": 14653,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14534,
											"end": 14653,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14534,
											"end": 14653,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14534,
											"end": 14653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14534,
											"end": 14653,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14534,
											"end": 14653,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14534,
											"end": 14653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 14534,
											"end": 14653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14534,
											"end": 14653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14534,
											"end": 14653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14534,
											"end": 14653,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14534,
											"end": 14653,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 14534,
											"end": 14653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14534,
											"end": 14653,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14534,
											"end": 14653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14534,
											"end": 14653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 14534,
											"end": 14653,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13032,
											"end": 13169,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13032,
											"end": 13169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13032,
											"end": 13169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 13032,
											"end": 13169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 13032,
											"end": 13169,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13032,
											"end": 13169,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 13032,
											"end": 13169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13032,
											"end": 13169,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 13769,
											"end": 13860,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13769,
											"end": 13860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13769,
											"end": 13860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13769,
											"end": 13860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13769,
											"end": 13860,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13769,
											"end": 13860,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13769,
											"end": 13860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13769,
											"end": 13860,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13769,
											"end": 13860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13769,
											"end": 13860,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13769,
											"end": 13860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13769,
											"end": 13860,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13769,
											"end": 13860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13769,
											"end": 13860,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13769,
											"end": 13860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13769,
											"end": 13860,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13769,
											"end": 13860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13769,
											"end": 13860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13769,
											"end": 13860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13769,
											"end": 13860,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13769,
											"end": 13860,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13769,
											"end": 13860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13769,
											"end": 13860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13769,
											"end": 13860,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14074,
											"end": 14170,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 14074,
											"end": 14170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14074,
											"end": 14170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14074,
											"end": 14170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14074,
											"end": 14170,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17873,
											"end": 18058,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 17873,
											"end": 18058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17873,
											"end": 18058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 17873,
											"end": 18058,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17873,
											"end": 18058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17873,
											"end": 18058,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17873,
											"end": 18058,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17873,
											"end": 18058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17873,
											"end": 18058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17873,
											"end": 18058,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17873,
											"end": 18058,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17873,
											"end": 18058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 17873,
											"end": 18058,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17873,
											"end": 18058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17873,
											"end": 18058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17873,
											"end": 18058,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17873,
											"end": 18058,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 17873,
											"end": 18058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17873,
											"end": 18058,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17873,
											"end": 18058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 17873,
											"end": 18058,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17373,
											"end": 17631,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 17373,
											"end": 17631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17373,
											"end": 17631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 17373,
											"end": 17631,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17373,
											"end": 17631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17373,
											"end": 17631,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17373,
											"end": 17631,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17373,
											"end": 17631,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17373,
											"end": 17631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17373,
											"end": 17631,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17373,
											"end": 17631,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17373,
											"end": 17631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 17373,
											"end": 17631,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17373,
											"end": 17631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17373,
											"end": 17631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17373,
											"end": 17631,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17373,
											"end": 17631,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 17373,
											"end": 17631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17373,
											"end": 17631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17373,
											"end": 17631,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17373,
											"end": 17631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17373,
											"end": 17631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17373,
											"end": 17631,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17373,
											"end": 17631,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17373,
											"end": 17631,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17373,
											"end": 17631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 17373,
											"end": 17631,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14855,
											"end": 15021,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 14855,
											"end": 15021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 15021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 14855,
											"end": 15021,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14855,
											"end": 15021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 15021,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 15021,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 15021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14855,
											"end": 15021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 15021,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 15021,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 15021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 14855,
											"end": 15021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 15021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14855,
											"end": 15021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 15021,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 15021,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 14855,
											"end": 15021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14855,
											"end": 15021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 15021,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 15021,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 15021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 15021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14855,
											"end": 15021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 15021,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 15021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 14855,
											"end": 15021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13318,
											"end": 13550,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13318,
											"end": 13550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 13318,
											"end": 13550,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13318,
											"end": 13550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13550,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13550,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13550,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13318,
											"end": 13550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13550,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13550,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 13318,
											"end": 13550,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13318,
											"end": 13550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13550,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13550,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 13318,
											"end": 13550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13318,
											"end": 13550,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13318,
											"end": 13550,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 13318,
											"end": 13550,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14306,
											"end": 14311,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14274,
											"end": 14287,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14274,
											"end": 14287,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14306,
											"end": 14311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14306,
											"end": 14311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14306,
											"end": 14311,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14226,
											"end": 14318,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15435,
											"end": 15439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15451,
											"end": 15490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 15460,
											"end": 15472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 15460,
											"end": 15470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 15460,
											"end": 15472,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15460,
											"end": 15472,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 15460,
											"end": 15472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15474,
											"end": 15481,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15483,
											"end": 15489,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15451,
											"end": 15459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 15451,
											"end": 15490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15451,
											"end": 15490,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 15451,
											"end": 15490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15507,
											"end": 15511,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15358,
											"end": 15518,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14377,
											"end": 14477,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14377,
											"end": 14477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14458,
											"end": 14470,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14458,
											"end": 14470,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14377,
											"end": 14477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14377,
											"end": 14477,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16075,
											"end": 16079,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16091,
											"end": 16127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 16101,
											"end": 16107,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16118,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16120,
											"end": 16126,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 16100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 16091,
											"end": 16127,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16091,
											"end": 16127,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 16091,
											"end": 16127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16137,
											"end": 16258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 16146,
											"end": 16152,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16154,
											"end": 16166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 16154,
											"end": 16164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 16154,
											"end": 16166,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16154,
											"end": 16166,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 16154,
											"end": 16166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16206,
											"end": 16212,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16168,
											"end": 16257,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16257,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16168,
											"end": 16257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16168,
											"end": 16257,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16257,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 16168,
											"end": 16257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16257,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16257,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16168,
											"end": 16257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16257,
											"name": "PUSH data",
											"source": 0,
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 16168,
											"end": 16257,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 16168,
											"end": 16257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16257,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16168,
											"end": 16187,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16187,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16168,
											"end": 16187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16179,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16168,
											"end": 16187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16168,
											"end": 16187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16168,
											"end": 16187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16187,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16188,
											"end": 16200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 16188,
											"end": 16198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 16188,
											"end": 16200,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16188,
											"end": 16200,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 16188,
											"end": 16200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16168,
											"end": 16201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16168,
											"end": 16201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16201,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16201,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16168,
											"end": 16201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 16168,
											"end": 16201,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16201,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16201,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16168,
											"end": 16205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 16168,
											"end": 16257,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16168,
											"end": 16257,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16168,
											"end": 16257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16137,
											"end": 16145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 16137,
											"end": 16258,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16137,
											"end": 16258,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 16137,
											"end": 16258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16275,
											"end": 16279,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15975,
											"end": 16286,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13922,
											"end": 14014,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 13922,
											"end": 14014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13998,
											"end": 14007,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13998,
											"end": 14007,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13998,
											"end": 14007,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 13998,
											"end": 14007,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 14014,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16680,
											"end": 16887,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 16680,
											"end": 16887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16760,
											"end": 16764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16776,
											"end": 16859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 16785,
											"end": 16797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 16785,
											"end": 16795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 16785,
											"end": 16797,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16785,
											"end": 16797,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 16785,
											"end": 16797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16799,
											"end": 16806,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 16858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16847,
											"end": 16857,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 16819,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16808,
											"end": 16833,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16820,
											"end": 16832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 16820,
											"end": 16830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 16820,
											"end": 16832,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16820,
											"end": 16832,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 16820,
											"end": 16832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16808,
											"end": 16833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 16833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 16833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 16833,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 16833,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 16833,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16808,
											"end": 16833,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 16833,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 16833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 16833,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 16833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 16833,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 16833,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 16833,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16808,
											"end": 16833,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 16833,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 16833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 16808,
											"end": 16833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 16833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 16833,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 16842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 16842,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 16842,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 16842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 16842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 16842,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 16842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 16842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 16842,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 16842,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 16842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16808,
											"end": 16846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 16808,
											"end": 16858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18142,
											"end": 18259,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 18142,
											"end": 18259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18188,
											"end": 18192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18204,
											"end": 18231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 18210,
											"end": 18222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 18210,
											"end": 18220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 18210,
											"end": 18222,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18210,
											"end": 18222,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 18210,
											"end": 18222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18230,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18204,
											"end": 18209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 18204,
											"end": 18231,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18204,
											"end": 18231,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 18204,
											"end": 18231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18248,
											"end": 18252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18142,
											"end": 18259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18142,
											"end": 18259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18142,
											"end": 18259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18142,
											"end": 18259,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13624,
											"end": 13706,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 13624,
											"end": 13706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13690,
											"end": 13699,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13690,
											"end": 13699,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13690,
											"end": 13699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13690,
											"end": 13699,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13690,
											"end": 13699,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 13690,
											"end": 13699,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13690,
											"end": 13699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13624,
											"end": 13706,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14534,
											"end": 14653,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 14534,
											"end": 14653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14602,
											"end": 14609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14637,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14534,
											"end": 14653,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13032,
											"end": 13169,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 13032,
											"end": 13169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12248,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 12248,
											"end": 12258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 12248,
											"end": 12260,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12248,
											"end": 12260,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 12248,
											"end": 12260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12244,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12238,
											"end": 12244,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12244,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12238,
											"end": 12244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12244,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12238,
											"end": 12244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12244,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12260,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12260,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13120,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13114,
											"end": 13120,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13093,
											"end": 13133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13093,
											"end": 13133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13130,
											"end": 13131,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13120,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13114,
											"end": 13120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13120,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13114,
											"end": 13120,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13093,
											"end": 13133,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 13093,
											"end": 13133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13131,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13093,
											"end": 13133,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13143,
											"end": 13149,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13143,
											"end": 13162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13143,
											"end": 13162,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13143,
											"end": 13162,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13143,
											"end": 13162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13143,
											"end": 13162,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13032,
											"end": 13169,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13769,
											"end": 13860,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13769,
											"end": 13860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13847,
											"end": 13853,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13847,
											"end": 13853,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13847,
											"end": 13853,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13847,
											"end": 13853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13847,
											"end": 13853,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13847,
											"end": 13853,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13847,
											"end": 13853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13769,
											"end": 13860,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14074,
											"end": 14170,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14074,
											"end": 14170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14156,
											"end": 14163,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14124,
											"end": 14137,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14124,
											"end": 14137,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14156,
											"end": 14163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14156,
											"end": 14163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14156,
											"end": 14163,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14149,
											"end": 14163,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17873,
											"end": 18058,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 17873,
											"end": 18058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17929,
											"end": 17933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12248,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 12248,
											"end": 12258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 12248,
											"end": 12260,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12248,
											"end": 12260,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 12248,
											"end": 12260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12244,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12238,
											"end": 12244,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12244,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12238,
											"end": 12244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12244,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12238,
											"end": 12244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12244,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12260,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12260,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 17962,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 17953,
											"end": 17962,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17953,
											"end": 17962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 17962,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 17953,
											"end": 17962,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 17953,
											"end": 17962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "PUSH",
											"source": 0,
											"value": "7468697320746F6B656E206973206E6F74206D696E7461626C65000000000000"
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 17945,
											"end": 17993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18003,
											"end": 18030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 18009,
											"end": 18021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 18009,
											"end": 18019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 18009,
											"end": 18021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18009,
											"end": 18021,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 18009,
											"end": 18021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18023,
											"end": 18029,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18003,
											"end": 18008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 18003,
											"end": 18030,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17373,
											"end": 17631,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 17373,
											"end": 17631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17458,
											"end": 17462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17474,
											"end": 17603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 17483,
											"end": 17495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 17483,
											"end": 17493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 17483,
											"end": 17495,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17483,
											"end": 17495,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 17483,
											"end": 17495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 17504,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 17545,
											"end": 17560,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17506,
											"end": 17602,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17602,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17506,
											"end": 17602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17506,
											"end": 17602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17602,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 17506,
											"end": 17602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17602,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17506,
											"end": 17602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17602,
											"name": "PUSH data",
											"source": 0,
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 17506,
											"end": 17602,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 17506,
											"end": 17602,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17602,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17517,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17506,
											"end": 17531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17518,
											"end": 17530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 17518,
											"end": 17528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 17518,
											"end": 17530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17518,
											"end": 17530,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 17518,
											"end": 17530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17506,
											"end": 17531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17531,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17531,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17506,
											"end": 17531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17531,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17531,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17506,
											"end": 17531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17531,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 17506,
											"end": 17531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17531,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17540,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17540,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17540,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17540,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17540,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17540,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17540,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17540,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17540,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17506,
											"end": 17544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 17506,
											"end": 17602,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14855,
											"end": 15021,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 14855,
											"end": 15021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14935,
											"end": 14939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14951,
											"end": 14993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 14961,
											"end": 14973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 14961,
											"end": 14971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 14961,
											"end": 14973,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14961,
											"end": 14973,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 14961,
											"end": 14973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14975,
											"end": 14984,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14986,
											"end": 14992,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14951,
											"end": 14960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 14951,
											"end": 14993,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15187,
											"end": 15205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15187,
											"end": 15205,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15187,
											"end": 15205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15161,
											"end": 15168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15187,
											"end": 15205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15187,
											"end": 15205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15187,
											"end": 15205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15187,
											"end": 15198,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15187,
											"end": 15205,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15187,
											"end": 15205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15187,
											"end": 15205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15187,
											"end": 15205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15187,
											"end": 15205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15187,
											"end": 15205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15187,
											"end": 15205,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15187,
											"end": 15205,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15187,
											"end": 15214,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15187,
											"end": 15214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15187,
											"end": 15214,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15187,
											"end": 15214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15187,
											"end": 15214,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15187,
											"end": 15214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15187,
											"end": 15214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15187,
											"end": 15214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15187,
											"end": 15214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15187,
											"end": 15214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15187,
											"end": 15214,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15187,
											"end": 15214,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15187,
											"end": 15214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15078,
											"end": 15221,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10516,
											"end": 10529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10516,
											"end": 10529,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10516,
											"end": 10529,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10516,
											"end": 10529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10516,
											"end": 10529,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10516,
											"end": 10529,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10516,
											"end": 10529,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10516,
											"end": 10529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10516,
											"end": 10549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 10516,
											"end": 10549,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10516,
											"end": 10549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10533,
											"end": 10549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 10533,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 10533,
											"end": 10549,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10533,
											"end": 10549,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 10533,
											"end": 10549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10516,
											"end": 10566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10516,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 10516,
											"end": 10566,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10554,
											"end": 10566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10554,
											"end": 10566,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10554,
											"end": 10566,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10554,
											"end": 10566,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10553,
											"end": 10566,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10516,
											"end": 10566,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 10516,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "PUSH",
											"source": 0,
											"value": "2E"
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "PUSH data",
											"source": 0,
											"value": "7A2A4E26842155EA933FE6EB6E3137EB5A296DCDF55721C552BE7B4C3CC23759"
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "PUSH",
											"source": 0,
											"value": "2E"
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 10508,
											"end": 10617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10628,
											"end": 10647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10651,
											"end": 10664,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10651,
											"end": 10664,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10651,
											"end": 10664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10651,
											"end": 10664,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10651,
											"end": 10664,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10651,
											"end": 10664,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10650,
											"end": 10664,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10674,
											"end": 10772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10674,
											"end": 10772,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10674,
											"end": 10772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 10674,
											"end": 10772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10708,
											"end": 10721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10708,
											"end": 10728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10708,
											"end": 10728,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10708,
											"end": 10728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10708,
											"end": 10728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10708,
											"end": 10728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10708,
											"end": 10728,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10708,
											"end": 10728,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10742,
											"end": 10761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10724,
											"end": 10728,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10742,
											"end": 10761,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10742,
											"end": 10761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10742,
											"end": 10761,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10674,
											"end": 10772,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 10674,
											"end": 10772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12543,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12537,
											"end": 12551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12551,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12537,
											"end": 12551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12551,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12537,
											"end": 12551,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12551,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12551,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12537,
											"end": 12551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12573,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12573,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 12561,
											"end": 12573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12566,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12561,
											"end": 12566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12573,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12561,
											"end": 12573,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12561,
											"end": 12573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 12561,
											"end": 12573,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12561,
											"end": 12573,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 12561,
											"end": 12573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12583,
											"end": 12599,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12583,
											"end": 12599,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12583,
											"end": 12599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 12583,
											"end": 12599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12583,
											"end": 12590,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12583,
											"end": 12590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12583,
											"end": 12599,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12583,
											"end": 12599,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 12583,
											"end": 12599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12583,
											"end": 12599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12583,
											"end": 12599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 12583,
											"end": 12599,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12583,
											"end": 12599,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 12583,
											"end": 12599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12609,
											"end": 12618,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12609,
											"end": 12629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12609,
											"end": 12629,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12609,
											"end": 12629,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12609,
											"end": 12629,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 12609,
											"end": 12629,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12609,
											"end": 12629,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12609,
											"end": 12629,
											"name": "OR",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12639,
											"end": 12659,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12639,
											"end": 12659,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12639,
											"end": 12659,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12639,
											"end": 12659,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12639,
											"end": 12659,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12639,
											"end": 12659,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12639,
											"end": 12659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12639,
											"end": 12659,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12669,
											"end": 12689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 12675,
											"end": 12680,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12682,
											"end": 12688,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12669,
											"end": 12674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 12669,
											"end": 12689,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12669,
											"end": 12689,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 12669,
											"end": 12689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10798,
											"end": 10812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10794,
											"end": 10860,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10794,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 10794,
											"end": 10860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10844,
											"end": 10849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10828,
											"end": 10849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10828,
											"end": 10849,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10828,
											"end": 10849,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10828,
											"end": 10849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10828,
											"end": 10849,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10794,
											"end": 10860,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 10794,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12696,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13318,
											"end": 13550,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 13318,
											"end": 13550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12248,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 12248,
											"end": 12258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 12248,
											"end": 12260,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12248,
											"end": 12260,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 12248,
											"end": 12260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12244,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12238,
											"end": 12244,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12244,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12238,
											"end": 12244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12244,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12238,
											"end": 12244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12244,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12260,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12260,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 12230,
											"end": 12297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13398,
											"end": 13420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13398,
											"end": 13420,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "PUSH data",
											"source": 0,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 13390,
											"end": 13463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13499,
											"end": 13505,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13499,
											"end": 13505,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13478,
											"end": 13516,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13478,
											"end": 13516,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13478,
											"end": 13516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13478,
											"end": 13516,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13478,
											"end": 13516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13478,
											"end": 13516,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13499,
											"end": 13505,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13499,
											"end": 13505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13499,
											"end": 13505,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13499,
											"end": 13505,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13499,
											"end": 13505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13478,
											"end": 13516,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 13478,
											"end": 13516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13478,
											"end": 13516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13478,
											"end": 13516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13478,
											"end": 13516,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13526,
											"end": 13532,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13526,
											"end": 13543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13526,
											"end": 13543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13526,
											"end": 13543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13526,
											"end": 13543,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13526,
											"end": 13543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13526,
											"end": 13543,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13526,
											"end": 13543,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13526,
											"end": 13543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13526,
											"end": 13543,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13526,
											"end": 13543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13526,
											"end": 13543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13526,
											"end": 13543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13526,
											"end": 13543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13526,
											"end": 13543,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13526,
											"end": 13543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13526,
											"end": 13543,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13550,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3606,
											"end": 3710,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3606,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3693,
											"end": 3703,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3606,
											"end": 3710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3606,
											"end": 3710,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20855,
											"end": 21187,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 20855,
											"end": 21187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20948,
											"end": 20967,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20948,
											"end": 20967,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "PUSH data",
											"source": 0,
											"value": "1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4"
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 20940,
											"end": 21008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21026,
											"end": 21047,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21026,
											"end": 21047,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "PUSH data",
											"source": 0,
											"value": "F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5"
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 21018,
											"end": 21086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21097,
											"end": 21115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21097,
											"end": 21115,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21097,
											"end": 21115,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21097,
											"end": 21115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21097,
											"end": 21115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21097,
											"end": 21115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21097,
											"end": 21115,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21097,
											"end": 21108,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21097,
											"end": 21115,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21097,
											"end": 21115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21097,
											"end": 21115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21097,
											"end": 21115,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21097,
											"end": 21115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21097,
											"end": 21115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21097,
											"end": 21115,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21097,
											"end": 21115,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21097,
											"end": 21124,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 21097,
											"end": 21124,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21097,
											"end": 21124,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21097,
											"end": 21124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21097,
											"end": 21124,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21097,
											"end": 21124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21097,
											"end": 21124,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 21097,
											"end": 21124,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21097,
											"end": 21124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21097,
											"end": 21124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21097,
											"end": 21124,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21097,
											"end": 21124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21097,
											"end": 21124,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21097,
											"end": 21133,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21097,
											"end": 21133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21097,
											"end": 21133,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21148,
											"end": 21180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21148,
											"end": 21180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21148,
											"end": 21180,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21148,
											"end": 21180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21148,
											"end": 21180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21148,
											"end": 21180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21148,
											"end": 21180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21148,
											"end": 21180,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 21148,
											"end": 21180,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21148,
											"end": 21180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21148,
											"end": 21180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21148,
											"end": 21180,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21148,
											"end": 21180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21148,
											"end": 21180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21148,
											"end": 21180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21148,
											"end": 21180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21148,
											"end": 21180,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20855,
											"end": 21187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20855,
											"end": 21187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20855,
											"end": 21187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20855,
											"end": 21187,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18733,
											"end": 19197,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 18733,
											"end": 19197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18830,
											"end": 18850,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18830,
											"end": 18850,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "PUSH data",
											"source": 0,
											"value": "D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57"
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 18822,
											"end": 18892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18910,
											"end": 18933,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18910,
											"end": 18933,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "PUSH data",
											"source": 0,
											"value": "ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2"
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 18902,
											"end": 18973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 19026,
											"end": 19032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19075,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19004,
											"end": 19075,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19075,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19004,
											"end": 19075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19075,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19004,
											"end": 19075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19075,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 19004,
											"end": 19075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19004,
											"end": 19075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19075,
											"name": "PUSH data",
											"source": 0,
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 19004,
											"end": 19075,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 19004,
											"end": 19075,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19075,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19004,
											"end": 19021,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19021,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19004,
											"end": 19021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19013,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19004,
											"end": 19021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19004,
											"end": 19021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19004,
											"end": 19021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19021,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19021,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19004,
											"end": 19025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 19004,
											"end": 19075,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19004,
											"end": 19075,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 19004,
											"end": 19075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18984,
											"end": 19001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18984,
											"end": 19001,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18984,
											"end": 19001,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18984,
											"end": 19001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18984,
											"end": 19001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18984,
											"end": 19001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18984,
											"end": 19001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18984,
											"end": 18993,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18984,
											"end": 19001,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18984,
											"end": 19001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18984,
											"end": 19001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18984,
											"end": 19001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18984,
											"end": 19001,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18984,
											"end": 19001,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18984,
											"end": 19075,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18984,
											"end": 19075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18984,
											"end": 19075,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18984,
											"end": 19075,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19108,
											"end": 19128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19108,
											"end": 19128,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19108,
											"end": 19128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19108,
											"end": 19128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19108,
											"end": 19128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19108,
											"end": 19128,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19108,
											"end": 19128,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19108,
											"end": 19140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 19108,
											"end": 19140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19133,
											"end": 19139,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19108,
											"end": 19132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 19108,
											"end": 19140,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19108,
											"end": 19140,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 19108,
											"end": 19140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19085,
											"end": 19105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19085,
											"end": 19105,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19085,
											"end": 19105,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19085,
											"end": 19105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19085,
											"end": 19105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19085,
											"end": 19105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19085,
											"end": 19105,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19085,
											"end": 19094,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19085,
											"end": 19105,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19085,
											"end": 19105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19085,
											"end": 19105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19085,
											"end": 19105,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19085,
											"end": 19105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19085,
											"end": 19105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19085,
											"end": 19105,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19085,
											"end": 19105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19085,
											"end": 19105,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19085,
											"end": 19140,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 19085,
											"end": 19140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19085,
											"end": 19140,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 19085,
											"end": 19140,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19155,
											"end": 19190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19155,
											"end": 19190,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19155,
											"end": 19190,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19155,
											"end": 19190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19155,
											"end": 19190,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19155,
											"end": 19190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19155,
											"end": 19190,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19085,
											"end": 19105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19085,
											"end": 19105,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19155,
											"end": 19190,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19155,
											"end": 19190,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19155,
											"end": 19190,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19155,
											"end": 19190,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19155,
											"end": 19190,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 19155,
											"end": 19190,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19155,
											"end": 19190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19155,
											"end": 19190,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19155,
											"end": 19190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19155,
											"end": 19190,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19155,
											"end": 19190,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19155,
											"end": 19190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19155,
											"end": 19190,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 18733,
											"end": 19197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18733,
											"end": 19197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18733,
											"end": 19197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18733,
											"end": 19197,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5665,
											"end": 5852,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5665,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5751,
											"end": 5758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5786,
											"end": 5798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5778,
											"end": 5784,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5778,
											"end": 5784,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5778,
											"end": 5784,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5778,
											"end": 5784,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 5770,
											"end": 5799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5821,
											"end": 5826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5826,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5821,
											"end": 5826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5852,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4793,
											"end": 4969,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4793,
											"end": 4969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4851,
											"end": 4858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4882,
											"end": 4887,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4882,
											"end": 4887,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4882,
											"end": 4887,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4905,
											"end": 4911,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4905,
											"end": 4911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4905,
											"end": 4911,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4905,
											"end": 4911,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 4897,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4961,
											"end": 4962,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4969,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4793,
											"end": 4969,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20088,
											"end": 20430,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 20088,
											"end": 20430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20163,
											"end": 20184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20163,
											"end": 20184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "PUSH data",
											"source": 0,
											"value": "B81EDBF10508D9B81724F18FF8F3D8BFBA9790734CE1F1C54DFE1030B4914855"
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 20155,
											"end": 20222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20254,
											"end": 20322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 20277,
											"end": 20283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20254,
											"end": 20322,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20254,
											"end": 20322,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20254,
											"end": 20322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20254,
											"end": 20322,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 20254,
											"end": 20322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20254,
											"end": 20322,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20254,
											"end": 20322,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20254,
											"end": 20322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20254,
											"end": 20322,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 20254,
											"end": 20322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20254,
											"end": 20322,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20254,
											"end": 20322,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20254,
											"end": 20322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20254,
											"end": 20322,
											"name": "PUSH data",
											"source": 0,
											"value": "DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032"
										},
										{
											"begin": 20254,
											"end": 20322,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 20254,
											"end": 20322,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20254,
											"end": 20322,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20254,
											"end": 20272,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20254,
											"end": 20272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20254,
											"end": 20272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20254,
											"end": 20272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20254,
											"end": 20272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20254,
											"end": 20272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20254,
											"end": 20263,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20254,
											"end": 20272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20254,
											"end": 20272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20254,
											"end": 20272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20254,
											"end": 20272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20254,
											"end": 20272,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20254,
											"end": 20272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20254,
											"end": 20272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20254,
											"end": 20322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20254,
											"end": 20276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 20254,
											"end": 20322,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20254,
											"end": 20322,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 20254,
											"end": 20322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20233,
											"end": 20251,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20233,
											"end": 20251,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20233,
											"end": 20251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20233,
											"end": 20251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20233,
											"end": 20251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20233,
											"end": 20251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20233,
											"end": 20242,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20233,
											"end": 20251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20233,
											"end": 20251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20233,
											"end": 20251,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20233,
											"end": 20251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20233,
											"end": 20251,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20233,
											"end": 20322,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20347,
											"end": 20359,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 20347,
											"end": 20359,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20347,
											"end": 20371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 20347,
											"end": 20371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20370,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20347,
											"end": 20363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 20347,
											"end": 20371,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20347,
											"end": 20371,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 20347,
											"end": 20371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20332,
											"end": 20344,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 20332,
											"end": 20371,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20386,
											"end": 20423,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20386,
											"end": 20423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20386,
											"end": 20423,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20386,
											"end": 20423,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20386,
											"end": 20423,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20386,
											"end": 20423,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20386,
											"end": 20423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20386,
											"end": 20423,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20412,
											"end": 20413,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20412,
											"end": 20413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20386,
											"end": 20423,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20386,
											"end": 20423,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20386,
											"end": 20423,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20386,
											"end": 20423,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 20386,
											"end": 20423,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20386,
											"end": 20423,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20386,
											"end": 20423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20386,
											"end": 20423,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20386,
											"end": 20423,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20386,
											"end": 20423,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20386,
											"end": 20423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20386,
											"end": 20423,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20088,
											"end": 20430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20088,
											"end": 20430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20088,
											"end": 20430,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19467,
											"end": 19769,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 19467,
											"end": 19769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19542,
											"end": 19563,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19542,
											"end": 19563,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "PUSH",
											"source": 0,
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 19534,
											"end": 19599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19625,
											"end": 19637,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 19625,
											"end": 19637,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19625,
											"end": 19649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 19625,
											"end": 19649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19642,
											"end": 19648,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19625,
											"end": 19641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 19625,
											"end": 19649,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19625,
											"end": 19649,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 19625,
											"end": 19649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19610,
											"end": 19622,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 19610,
											"end": 19649,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19680,
											"end": 19698,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19680,
											"end": 19698,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19680,
											"end": 19698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19680,
											"end": 19698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19680,
											"end": 19698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19680,
											"end": 19698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19680,
											"end": 19689,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19680,
											"end": 19698,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19680,
											"end": 19698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19680,
											"end": 19698,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19680,
											"end": 19698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19680,
											"end": 19698,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19680,
											"end": 19698,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19680,
											"end": 19710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 19680,
											"end": 19710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19703,
											"end": 19709,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19680,
											"end": 19702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 19680,
											"end": 19710,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19680,
											"end": 19710,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 19680,
											"end": 19710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19659,
											"end": 19677,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19677,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19677,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19659,
											"end": 19677,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19677,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19677,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19668,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19659,
											"end": 19677,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19659,
											"end": 19677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19677,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19677,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19677,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19659,
											"end": 19677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19677,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19677,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19710,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19710,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19710,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19725,
											"end": 19762,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19725,
											"end": 19762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19725,
											"end": 19762,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19725,
											"end": 19762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19725,
											"end": 19762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19725,
											"end": 19762,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19725,
											"end": 19762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19677,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19677,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19677,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19659,
											"end": 19677,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19725,
											"end": 19762,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 19725,
											"end": 19762,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19725,
											"end": 19762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19725,
											"end": 19762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19725,
											"end": 19762,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19725,
											"end": 19762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19725,
											"end": 19762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19725,
											"end": 19762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19725,
											"end": 19762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19725,
											"end": 19762,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 19769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 19769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19467,
											"end": 19769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10956,
											"end": 11549,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 10956,
											"end": 11549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11392,
											"end": 11396,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 11500,
											"end": 11517,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 11535,
											"end": 11542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10956,
											"end": 11549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10956,
											"end": 11549,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5240,
											"end": 5374,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 5240,
											"end": 5374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5298,
											"end": 5305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5324,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 5328,
											"end": 5329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5331,
											"end": 5332,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5324,
											"end": 5367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5324,
											"end": 5367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5324,
											"end": 5367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5367,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 5324,
											"end": 5367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5367,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5324,
											"end": 5367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5367,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 5324,
											"end": 5367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5324,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5324,
											"end": 5367,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "190"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "192"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "190"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "192"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "191"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "192"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "191"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "192"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "193"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "194"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "193"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "194"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "195"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "193"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "195"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										}
									],
									".data": {
										"1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"7A2A4E26842155EA933FE6EB6E3137EB5A296DCDF55721C552BE7B4C3CC23759": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"B81EDBF10508D9B81724F18FF8F3D8BFBA9790734CE1F1C54DFE1030B4914855": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
										"D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
										"F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"initialize(string,string,uint8,uint256,bool,address)": "ef3ebcb8",
							"mint(uint256)": "a0712d68",
							"mintable()": "4bf365df",
							"name()": "06fdde03",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"mintable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burn `amount` tokens and decreasing the total supply.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize(string,string,uint8,uint256,bool,address)\":{\"details\":\"sets initials supply and the owner\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner - `_mintable` must be true\"},\"mintable()\":{\"details\":\"Returns if the token is mintable or not\"},\"name()\":{\"details\":\"Returns the token name.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":\"BEP20TokenImplementation\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":{\"keccak256\":\"0x20ddb6890c5e04b7a435414f969b6e5d37171fcd4a7c86b334ac46a5a60d7827\",\"urls\":[\"bzz-raw://8c015e2c3b72177ec7e49559374c4e981f3ff2a43f56bf07ed3cc47b8d314f34\",\"dweb:/ipfs/QmafnZcrL9EyvhMMrKzAkaQad1k1f4d8MfXhL7yoAN5Tmw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 322,
								"contract": "Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 325,
								"contract": "Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 401,
								"contract": "Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 407,
								"contract": "Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 409,
								"contract": "Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 411,
								"contract": "Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 413,
								"contract": "Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 415,
								"contract": "Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_decimals",
								"offset": 0,
								"slot": "6",
								"type": "t_uint8"
							},
							{
								"astId": 417,
								"contract": "Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_owner",
								"offset": 1,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 425,
								"contract": "Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_mintable",
								"offset": 21,
								"slot": "6",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":{\"keccak256\":\"0x20ddb6890c5e04b7a435414f969b6e5d37171fcd4a7c86b334ac46a5a60d7827\",\"urls\":[\"bzz-raw://8c015e2c3b72177ec7e49559374c4e981f3ff2a43f56bf07ed3cc47b8d314f34\",\"dweb:/ipfs/QmafnZcrL9EyvhMMrKzAkaQad1k1f4d8MfXhL7yoAN5Tmw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":\"IBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":{\"keccak256\":\"0x20ddb6890c5e04b7a435414f969b6e5d37171fcd4a7c86b334ac46a5a60d7827\",\"urls\":[\"bzz-raw://8c015e2c3b72177ec7e49559374c4e981f3ff2a43f56bf07ed3cc47b8d314f34\",\"dweb:/ipfs/QmafnZcrL9EyvhMMrKzAkaQad1k1f4d8MfXhL7yoAN5Tmw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Initializable": {
					"abi": [],
					"devdoc": {
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.  TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.  CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.  TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.  CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":\"Initializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":{\"keccak256\":\"0x20ddb6890c5e04b7a435414f969b6e5d37171fcd4a7c86b334ac46a5a60d7827\",\"urls\":[\"bzz-raw://8c015e2c3b72177ec7e49559374c4e981f3ff2a43f56bf07ed3cc47b8d314f34\",\"dweb:/ipfs/QmafnZcrL9EyvhMMrKzAkaQad1k1f4d8MfXhL7yoAN5Tmw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 322,
								"contract": "Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 325,
								"contract": "Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":4541:9119  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":4541:9119  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122059877b29c3a973481bd549292a2093531299f0cdb3b0ae022016ce9abe5203e764736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122059877b29c3a973481bd549292a2093531299f0cdb3b0ae022016ce9abe5203e764736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE DUP8 PUSH28 0x29C3A973481BD549292A2093531299F0CDB3B0AE022016CE9ABE5203 0xE7 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "4541:4578:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122059877b29c3a973481bd549292a2093531299f0cdb3b0ae022016ce9abe5203e764736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE DUP8 PUSH28 0x29C3A973481BD549292A2093531299F0CDB3B0AE022016CE9ABE5203 0xE7 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "4541:4578:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4541,
									"end": 9119,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4541,
									"end": 9119,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4541,
									"end": 9119,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 4541,
									"end": 9119,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4541,
									"end": 9119,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4541,
									"end": 9119,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4541,
									"end": 9119,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 4541,
									"end": 9119,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4541,
									"end": 9119,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4541,
									"end": 9119,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4541,
									"end": 9119,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 4541,
									"end": 9119,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 4541,
									"end": 9119,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 4541,
									"end": 9119,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4541,
									"end": 9119,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 4541,
									"end": 9119,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 4541,
									"end": 9119,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4541,
									"end": 9119,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4541,
									"end": 9119,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 4541,
									"end": 9119,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4541,
									"end": 9119,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4541,
									"end": 9119,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 4541,
									"end": 9119,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4541,
									"end": 9119,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 4541,
									"end": 9119,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4541,
									"end": 9119,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4541,
									"end": 9119,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122059877b29c3a973481bd549292a2093531299f0cdb3b0ae022016ce9abe5203e764736f6c634300060c0033",
									".code": [
										{
											"begin": 4541,
											"end": 9119,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 4541,
											"end": 9119,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4541,
											"end": 9119,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4541,
											"end": 9119,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4541,
											"end": 9119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4541,
											"end": 9119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4541,
											"end": 9119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4541,
											"end": 9119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4541,
											"end": 9119,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol\":{\"keccak256\":\"0x20ddb6890c5e04b7a435414f969b6e5d37171fcd4a7c86b334ac46a5a60d7827\",\"urls\":[\"bzz-raw://8c015e2c3b72177ec7e49559374c4e981f3ff2a43f56bf07ed3cc47b8d314f34\",\"dweb:/ipfs/QmafnZcrL9EyvhMMrKzAkaQad1k1f4d8MfXhL7yoAN5Tmw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol": {
				"ast": {
					"absolutePath": "Users/leilei/Downloads/TradingCompV2RewardDistribution/contracts/BEP20TokenImplementation.sol",
					"exportedSymbols": {
						"BEP20TokenImplementation": [
							1034
						],
						"Context": [
							122
						],
						"IBEP20": [
							100
						],
						"Initializable": [
							387
						],
						"SafeMath": [
							317
						]
					},
					"id": 1035,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100
							],
							"name": "IBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "48:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 7,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "139:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 7,
												"src": "165:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "165:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "164:9:0"
									},
									"scope": 100,
									"src": "119:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "180:51:0",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "253:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 13,
												"src": "279:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 10,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "279:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "278:7:0"
									},
									"scope": 100,
									"src": "236:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "292:49:0",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "361:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 19,
												"src": "387:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 16,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "387:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "386:15:0"
									},
									"scope": 100,
									"src": "346:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "408:45:0",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "471:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 25,
												"src": "497:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 22,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "497:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "496:15:0"
									},
									"scope": 100,
									"src": "458:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "518:52:0",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "592:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "618:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "618:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "617:9:0"
									},
									"scope": 100,
									"src": "575:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "633:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 39,
												"src": "729:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "728:17:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 39,
												"src": "769:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "768:9:0"
									},
									"scope": 100,
									"src": "710:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "784:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 49,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 49,
												"src": "1016:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 49,
												"src": "1035:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1015:35:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 49,
												"src": "1069:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1069:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1068:6:0"
									},
									"scope": 100,
									"src": "998:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1081:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 59,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 59,
												"src": "1369:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1369:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 59,
												"src": "1385:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1385:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1368:33:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 59,
												"src": "1425:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1425:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1424:9:0"
									},
									"scope": 100,
									"src": "1350:84:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "1440:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 69,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 69,
												"src": "2104:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 69,
												"src": "2121:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2103:33:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 69,
												"src": "2155:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 66,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2155:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2154:6:0"
									},
									"scope": 100,
									"src": "2087:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "2167:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "2490:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2490:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "2506:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "2525:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2489:51:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "2559:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 78,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2559:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2558:6:0"
									},
									"scope": 100,
									"src": "2468:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2571:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 90,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "2749:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "2771:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2771:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "2791:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2748:57:0"
									},
									"src": "2734:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "2812:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 99,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 99,
												"src": "2980:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2980:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 99,
												"src": "3003:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3003:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 99,
												"src": "3028:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3028:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2979:63:0"
									},
									"src": "2965:78:0"
								}
							],
							"scope": 1035,
							"src": "25:3020:0"
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3049:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 122,
							"linearizedBaseContracts": [
								122
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "3676:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 106,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "3693:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3693:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 105,
												"id": 108,
												"nodeType": "Return",
												"src": "3686:17:0"
											}
										]
									},
									"documentation": null,
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3625:2:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 110,
												"src": "3659:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3659:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3658:17:0"
									},
									"scope": 122,
									"src": "3606:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "3781:165:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 115,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "3791:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$122",
														"typeString": "contract Context"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "3791:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 117,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "3931:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3931:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 114,
												"id": 119,
												"nodeType": "Return",
												"src": "3924:15:0"
											}
										]
									},
									"documentation": null,
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3733:2:0"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 121,
												"src": "3767:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 112,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3767:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3766:14:0"
									},
									"scope": 122,
									"src": "3716:230:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1035,
							"src": "3574:374:0"
						},
						{
							"id": 123,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3952:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 124,
								"nodeType": "StructuredDocumentation",
								"src": "3977:563:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 317,
							"linearizedBaseContracts": [
								317
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "4860:109:0",
										"statements": [
											{
												"assignments": [
													135
												],
												"declarations": [
													{
														"constant": false,
														"id": 135,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 149,
														"src": "4870:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 134,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4870:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 139,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 136,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "4882:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 137,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4886:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4882:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4870:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 141,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "4905:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 142,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 127,
																"src": "4910:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4905:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4913:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 140,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4897:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "4897:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 147,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 135,
													"src": "4961:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 133,
												"id": 148,
												"nodeType": "Return",
												"src": "4954:8:0"
											}
										]
									},
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "4564:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 150,
												"src": "4806:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4806:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 150,
												"src": "4817:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4817:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4805:22:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 150,
												"src": "4851:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4851:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4850:9:0"
									},
									"scope": 317,
									"src": "4793:176:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "5307:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 161,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "5328:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 162,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "5331:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5334:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 160,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															167,
															195
														],
														"referencedDeclaration": 195,
														"src": "5324:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5324:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 159,
												"id": 165,
												"nodeType": "Return",
												"src": "5317:50:0"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "4975:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 167,
												"src": "5253:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5253:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 167,
												"src": "5264:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5264:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5252:22:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 167,
												"src": "5298:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5298:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5297:9:0"
									},
									"scope": 317,
									"src": "5240:134:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "5760:92:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 180,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "5778:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 181,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 170,
																"src": "5783:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5778:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 183,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "5786:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 179,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5770:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5770:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "5770:29:0"
											},
											{
												"assignments": [
													187
												],
												"declarations": [
													{
														"constant": false,
														"id": 187,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 194,
														"src": "5809:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 186,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5809:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 191,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 188,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 170,
														"src": "5821:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 189,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "5825:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5821:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5809:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 192,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 187,
													"src": "5844:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 178,
												"id": 193,
												"nodeType": "Return",
												"src": "5837:8:0"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "5380:280:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 195,
												"src": "5678:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5678:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 195,
												"src": "5689:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 195,
												"src": "5700:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5700:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5677:50:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 195,
												"src": "5751:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5750:9:0"
									},
									"scope": 317,
									"src": "5665:187:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "6166:392:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 205,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "6398:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 206,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6403:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6398:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 211,
												"nodeType": "IfStatement",
												"src": "6394:45:0",
												"trueBody": {
													"id": 210,
													"nodeType": "Block",
													"src": "6406:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6427:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 204,
															"id": 209,
															"nodeType": "Return",
															"src": "6420:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													213
												],
												"declarations": [
													{
														"constant": false,
														"id": 213,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 229,
														"src": "6449:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 212,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6449:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 217,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 214,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "6461:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 215,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "6465:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6461:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6449:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 219,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 213,
																	"src": "6484:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 220,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "6488:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6484:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 222,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "6493:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6484:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6496:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 218,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6476:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6476:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "6476:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 227,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 213,
													"src": "6550:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 204,
												"id": 228,
												"nodeType": "Return",
												"src": "6543:8:0"
											}
										]
									},
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "5858:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 230,
												"src": "6112:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6112:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 230,
												"src": "6123:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6123:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6111:22:0"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 230,
												"src": "6157:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6157:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6156:9:0"
									},
									"scope": 317,
									"src": "6099:459:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 246,
										"nodeType": "Block",
										"src": "7087:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 241,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "7108:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 242,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "7111:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7114:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 240,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															247,
															275
														],
														"referencedDeclaration": 275,
														"src": "7104:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7104:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 239,
												"id": 245,
												"nodeType": "Return",
												"src": "7097:46:0"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "6564:451:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 247,
												"src": "7033:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7033:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 247,
												"src": "7044:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7044:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7032:22:0"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 247,
												"src": "7078:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7077:9:0"
									},
									"scope": 317,
									"src": "7020:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "7727:177:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 260,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "7745:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7749:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7745:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 263,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "7752:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 259,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7737:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7737:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "7737:28:0"
											},
											{
												"assignments": [
													267
												],
												"declarations": [
													{
														"constant": false,
														"id": 267,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 274,
														"src": "7775:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 266,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7775:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 271,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 268,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 250,
														"src": "7787:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 269,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "7791:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7787:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7775:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 272,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 267,
													"src": "7896:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 258,
												"id": 273,
												"nodeType": "Return",
												"src": "7889:8:0"
											}
										]
									},
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "7156:471:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 275,
												"src": "7645:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7645:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 275,
												"src": "7656:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 275,
												"src": "7667:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 253,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7667:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7644:50:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 275,
												"src": "7718:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7718:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7717:9:0"
									},
									"scope": 317,
									"src": "7632:272:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "8422:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 286,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "8443:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 287,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "8446:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8449:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 285,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															292,
															316
														],
														"referencedDeclaration": 316,
														"src": "8439:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8439:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 284,
												"id": 290,
												"nodeType": "Return",
												"src": "8432:44:0"
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "7910:440:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 292,
												"src": "8368:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 292,
												"src": "8379:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8379:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8367:22:0"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 292,
												"src": "8413:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8413:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8412:9:0"
									},
									"scope": 317,
									"src": "8355:128:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "9049:68:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 297,
																"src": "9067:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9072:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9067:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 308,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "9075:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 304,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9059:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9059:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "9059:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 311,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "9105:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 312,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "9109:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9105:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 303,
												"id": 314,
												"nodeType": "Return",
												"src": "9098:12:0"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "8489:460:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 316,
												"src": "8967:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 316,
												"src": "8978:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8978:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 316,
												"src": "8989:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 298,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8989:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8966:50:0"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 316,
												"src": "9040:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9040:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9039:9:0"
									},
									"scope": 317,
									"src": "8954:163:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1035,
							"src": "4541:4578:0"
						},
						{
							"id": 318,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".24",
								"<",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "9123:32:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 319,
								"nodeType": "StructuredDocumentation",
								"src": "9158:940:0",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n \n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.\n \n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity."
							},
							"fullyImplemented": true,
							"id": 387,
							"linearizedBaseContracts": [
								387
							],
							"name": "Initializable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "10138:73:0",
										"text": " @dev Indicates that the contract has been initialized."
									},
									"id": 322,
									"mutability": "mutable",
									"name": "_initialized",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 387,
									"src": "10216:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 321,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "10216:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "10248:91:0",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 325,
									"mutability": "mutable",
									"name": "_initializing",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 387,
									"src": "10344:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 324,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "10344:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "10498:368:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 329,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 325,
																	"src": "10516:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 330,
																		"name": "_isConstructor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 386,
																		"src": "10533:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																			"typeString": "function () view returns (bool)"
																		}
																	},
																	"id": 331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10533:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "10516:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "10553:13:0",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 333,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "10554:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "10516:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10568:48:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 328,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10508:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10508:109:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "10508:109:0"
											},
											{
												"assignments": [
													340
												],
												"declarations": [
													{
														"constant": false,
														"id": 340,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 363,
														"src": "10628:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 339,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10628:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 343,
												"initialValue": {
													"argumentTypes": null,
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10650:14:0",
													"subExpression": {
														"argumentTypes": null,
														"id": 341,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 325,
														"src": "10651:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10628:36:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 344,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 340,
													"src": "10678:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 354,
												"nodeType": "IfStatement",
												"src": "10674:98:0",
												"trueBody": {
													"id": 353,
													"nodeType": "Block",
													"src": "10694:78:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 345,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 325,
																	"src": "10708:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10724:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "10708:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 348,
															"nodeType": "ExpressionStatement",
															"src": "10708:20:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 349,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "10742:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10757:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "10742:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 352,
															"nodeType": "ExpressionStatement",
															"src": "10742:19:0"
														}
													]
												}
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "10782:1:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 356,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 340,
													"src": "10798:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 362,
												"nodeType": "IfStatement",
												"src": "10794:66:0",
												"trueBody": {
													"id": 361,
													"nodeType": "Block",
													"src": "10814:46:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 357,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 325,
																	"src": "10828:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "66616c7365",
																	"id": 358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10844:5:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "10828:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 360,
															"nodeType": "ExpressionStatement",
															"src": "10828:21:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "10377:93:0",
										"text": " @dev Modifier to protect an initializer function from being invoked twice."
									},
									"id": 364,
									"name": "initializer",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10495:2:0"
									},
									"src": "10475:391:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "11010:539:0",
										"statements": [
											{
												"assignments": [
													371
												],
												"declarations": [
													{
														"constant": false,
														"id": 371,
														"mutability": "mutable",
														"name": "self",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 385,
														"src": "11369:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 370,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11369:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 376,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 374,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -28,
															"src": "11392:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Initializable_$387",
																"typeString": "contract Initializable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_Initializable_$387",
																"typeString": "contract Initializable"
															}
														],
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11384:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 372,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11384:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11384:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11369:28:0"
											},
											{
												"assignments": [
													378
												],
												"declarations": [
													{
														"constant": false,
														"id": 378,
														"mutability": "mutable",
														"name": "cs",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 385,
														"src": "11407:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 377,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11407:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "11407:10:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "11492:27:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11494:23:0",
															"value": {
																"arguments": [
																	{
																		"name": "self",
																		"nodeType": "YulIdentifier",
																		"src": "11512:4:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "11500:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "11500:17:0"
															},
															"variableNames": [
																{
																	"name": "cs",
																	"nodeType": "YulIdentifier",
																	"src": "11494:2:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 378,
														"isOffset": false,
														"isSlot": false,
														"src": "11494:2:0",
														"valueSize": 1
													},
													{
														"declaration": 371,
														"isOffset": false,
														"isSlot": false,
														"src": "11512:4:0",
														"valueSize": 1
													}
												],
												"id": 380,
												"nodeType": "InlineAssembly",
												"src": "11483:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 381,
														"name": "cs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "11535:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11541:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11535:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 369,
												"id": 384,
												"nodeType": "Return",
												"src": "11528:14:0"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "10872:79:0",
										"text": "@dev Returns true if and only if the function is running in the constructor"
									},
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isConstructor",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10979:2:0"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 386,
												"src": "11004:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 367,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11004:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11003:6:0"
									},
									"scope": 387,
									"src": "10956:593:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1035,
							"src": "10099:1452:0"
						},
						{
							"id": 388,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "11555:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 389,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 122,
										"src": "11621:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$122",
											"typeString": "contract Context"
										}
									},
									"id": 390,
									"nodeType": "InheritanceSpecifier",
									"src": "11621:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 391,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 100,
										"src": "11630:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$100",
											"typeString": "contract IBEP20"
										}
									},
									"id": 392,
									"nodeType": "InheritanceSpecifier",
									"src": "11630:6:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 393,
										"name": "Initializable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 387,
										"src": "11638:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Initializable_$387",
											"typeString": "contract Initializable"
										}
									},
									"id": 394,
									"nodeType": "InheritanceSpecifier",
									"src": "11638:13:0"
								}
							],
							"contractDependencies": [
								100,
								122,
								387
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1034,
							"linearizedBaseContracts": [
								1034,
								387,
								100,
								122
							],
							"name": "BEP20TokenImplementation",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 397,
									"libraryName": {
										"contractScope": null,
										"id": 395,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 317,
										"src": "11664:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$317",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "11658:27:0",
									"typeName": {
										"id": 396,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11677:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 401,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1034,
									"src": "11691:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 400,
										"keyType": {
											"id": 398,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11700:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11691:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 399,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "11711:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 407,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1034,
									"src": "11743:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 406,
										"keyType": {
											"id": 402,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11752:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11743:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 405,
											"keyType": {
												"id": 403,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11772:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "11763:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 404,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11783:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 409,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1034,
									"src": "11818:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 408,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11818:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 411,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1034,
									"src": "11852:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 410,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11852:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 413,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1034,
									"src": "11878:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 412,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11878:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 415,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1034,
									"src": "11906:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 414,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "11906:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 417,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1034,
									"src": "11936:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 416,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "11936:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 423,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 423,
												"src": "11991:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11991:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 423,
												"src": "12022:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12022:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11990:57:0"
									},
									"src": "11964:84:0"
								},
								{
									"constant": false,
									"id": 425,
									"mutability": "mutable",
									"name": "_mintable",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1034,
									"src": "12054:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 424,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "12054:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "12104:7:0",
										"statements": []
									},
									"documentation": null,
									"id": 429,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12094:2:0"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12104:0:0"
									},
									"scope": 1034,
									"src": "12083:28:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "12220:95:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 433,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "12238:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 434,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "12248:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12248:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "12238:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12262:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 432,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "12230:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12230:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "12230:67:0"
											},
											{
												"id": 440,
												"nodeType": "PlaceholderStatement",
												"src": "12307:1:0"
											}
										]
									},
									"documentation": {
										"id": 430,
										"nodeType": "StructuredDocumentation",
										"src": "12117:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 442,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12217:2:0"
									},
									"src": "12199:116:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "12527:169:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 460,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "12537:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 461,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 455,
														"src": "12546:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12537:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "12537:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 464,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "12561:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 465,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "12569:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12561:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 467,
												"nodeType": "ExpressionStatement",
												"src": "12561:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 468,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "12583:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 469,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "12593:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12583:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "12583:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 472,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "12609:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 473,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "12621:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "12609:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "12609:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 476,
														"name": "_mintable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "12639:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 477,
														"name": "mintable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "12651:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12639:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "12639:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 481,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "12675:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 482,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "12682:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 480,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "12669:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12669:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "12669:20:0"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "12321:58:0",
										"text": " @dev sets initials supply and the owner"
									},
									"functionSelector": "ef3ebcb8",
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 458,
											"modifierName": {
												"argumentTypes": null,
												"id": 457,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 364,
												"src": "12515:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12515:11:0"
										}
									],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "name",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 486,
												"src": "12404:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 444,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12404:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 486,
												"src": "12424:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 446,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12424:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "decimals",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 486,
												"src": "12446:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 448,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "12446:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 486,
												"src": "12462:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12462:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "mintable",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 486,
												"src": "12478:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 452,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12478:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 486,
												"src": "12493:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12493:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12403:104:0"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12527:0:0"
									},
									"scope": 1034,
									"src": "12384:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "13078:91:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 493,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "13114:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13130:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13122:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 494,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13122:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13122:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 492,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "13093:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13093:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "EmitStatement",
												"src": "13088:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 500,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "13143:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13160:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13152:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 501,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13152:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13152:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "13143:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "13143:19:0"
											}
										]
									},
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "12702:325:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 490,
											"modifierName": {
												"argumentTypes": null,
												"id": 489,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "13068:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "13068:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13058:2:0"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13078:0:0"
									},
									"scope": 1034,
									"src": "13032:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "13380:170:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 517,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "13398:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13418:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13410:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 518,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13410:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13410:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "13398:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13422:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 516,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "13390:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13390:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "13390:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 527,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "13499:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 528,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "13507:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 526,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "13478:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13478:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 530,
												"nodeType": "EmitStatement",
												"src": "13473:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 531,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "13526:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 532,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 511,
														"src": "13535:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13526:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "13526:17:0"
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "13175:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 514,
											"modifierName": {
												"argumentTypes": null,
												"id": 513,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "13370:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "13370:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 536,
												"src": "13345:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13345:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13344:18:0"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13380:0:0"
									},
									"scope": 1034,
									"src": "13318:232:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "13673:33:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 542,
													"name": "_mintable",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 425,
													"src": "13690:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 541,
												"id": 543,
												"nodeType": "Return",
												"src": "13683:16:0"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "13556:63:0",
										"text": " @dev Returns if the token is mintable or not"
									},
									"functionSelector": "4bf365df",
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintable",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13641:2:0"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 545,
												"src": "13667:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 539,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13667:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13666:6:0"
									},
									"scope": 1034,
									"src": "13624:82:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										31
									],
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "13830:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 552,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 417,
													"src": "13847:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 551,
												"id": 553,
												"nodeType": "Return",
												"src": "13840:13:0"
											}
										]
									},
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "13712:52:0",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 548,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13798:8:0"
									},
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13786:2:0"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 555,
												"src": "13821:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13821:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13820:9:0"
									},
									"scope": 1034,
									"src": "13769:91:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										13
									],
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "13981:33:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 562,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 415,
													"src": "13998:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 561,
												"id": 563,
												"nodeType": "Return",
												"src": "13991:16:0"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "13866:51:0",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 558,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13951:8:0"
									},
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13939:2:0"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 565,
												"src": "13974:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 559,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13974:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13973:7:0"
									},
									"scope": 1034,
									"src": "13922:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										19
									],
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "14139:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 572,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 413,
													"src": "14156:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 571,
												"id": 573,
												"nodeType": "Return",
												"src": "14149:14:0"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "14020:49:0",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 568,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14101:8:0"
									},
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14089:2:0"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 575,
												"src": "14124:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 569,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14124:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14123:15:0"
									},
									"scope": 1034,
									"src": "14074:96:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										25
									],
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "14289:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 582,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 411,
													"src": "14306:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 581,
												"id": 583,
												"nodeType": "Return",
												"src": "14299:12:0"
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "14176:45:0",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 578,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14251:8:0"
									},
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14239:2:0"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 585,
												"src": "14274:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 579,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14274:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14273:15:0"
									},
									"scope": 1034,
									"src": "14226:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										7
									],
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "14441:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 592,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 409,
													"src": "14458:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 591,
												"id": 593,
												"nodeType": "Return",
												"src": "14451:19:0"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "14324:48:0",
										"text": " @dev See {BEP20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 588,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14409:8:0"
									},
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14397:2:0"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 595,
												"src": "14432:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14432:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14431:9:0"
									},
									"scope": 1034,
									"src": "14377:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										39
									],
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "14611:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 604,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "14628:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 606,
													"indexExpression": {
														"argumentTypes": null,
														"id": 605,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "14638:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14628:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 603,
												"id": 607,
												"nodeType": "Return",
												"src": "14621:25:0"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "14483:46:0",
										"text": " @dev See {BEP20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 600,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14579:8:0"
									},
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 609,
												"src": "14553:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14553:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14552:17:0"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 609,
												"src": "14602:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14601:9:0"
									},
									"scope": 1034,
									"src": "14534:119:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										49
									],
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "14941:80:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 621,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "14961:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14961:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 623,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "14975:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 624,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "14986:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 620,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "14951:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14951:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "14951:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15010:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 619,
												"id": 628,
												"nodeType": "Return",
												"src": "15003:11:0"
											}
										]
									},
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "14659:191:0",
										"text": " @dev See {BEP20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 616,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14917:8:0"
									},
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 630,
												"src": "14873:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 630,
												"src": "14892:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14892:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14872:35:0"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 630,
												"src": "14935:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14935:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14934:6:0"
									},
									"scope": 1034,
									"src": "14855:166:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										59
									],
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "15170:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 641,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "15187:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 643,
														"indexExpression": {
															"argumentTypes": null,
															"id": 642,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "15199:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "15187:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 645,
													"indexExpression": {
														"argumentTypes": null,
														"id": 644,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "15206:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15187:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 640,
												"id": 646,
												"nodeType": "Return",
												"src": "15180:34:0"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "15027:46:0",
										"text": " @dev See {BEP20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 637,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15138:8:0"
									},
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "15097:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15097:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "15112:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15112:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15096:32:0"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "15161:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15161:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15160:9:0"
									},
									"scope": 1034,
									"src": "15078:143:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										69
									],
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "15441:77:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 660,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "15460:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15460:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 662,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "15474:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 663,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "15483:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 659,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "15451:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15451:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "15451:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15507:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 658,
												"id": 667,
												"nodeType": "Return",
												"src": "15500:11:0"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "15227:126:0",
										"text": " @dev See {BEP20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 655,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15417:8:0"
									},
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 669,
												"src": "15375:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15375:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 669,
												"src": "15392:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15374:33:0"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 669,
												"src": "15435:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 656,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15435:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15434:6:0"
									},
									"scope": 1034,
									"src": "15358:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										81
									],
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "16081:205:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 683,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "16101:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 684,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "16109:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 685,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "16120:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 682,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "16091:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16091:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "16091:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 689,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "16146:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 690,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "16154:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16154:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 699,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 676,
																	"src": "16206:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16214:42:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 692,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "16168:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 694,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 693,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 672,
																			"src": "16180:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "16168:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 697,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 695,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 110,
																			"src": "16188:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16188:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16168:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 195,
																"src": "16168:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16168:89:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 688,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "16137:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16137:121:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "16137:121:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16275:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 681,
												"id": 705,
												"nodeType": "Return",
												"src": "16268:11:0"
											}
										]
									},
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "15524:446:0",
										"text": " @dev See {BEP20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {BEP20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for `sender`'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 678,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16057:8:0"
									},
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 707,
												"src": "15997:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15997:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 707,
												"src": "16013:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16013:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 707,
												"src": "16032:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16032:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15996:51:0"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 707,
												"src": "16075:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 679,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16075:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16074:6:0"
									},
									"scope": 1034,
									"src": "15975:311:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "16766:121:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 718,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "16785:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16785:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 720,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "16799:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 728,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "16847:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 721,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "16808:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 724,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 722,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 110,
																				"src": "16820:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16820:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "16808:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 726,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 725,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 710,
																		"src": "16834:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16808:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 150,
																"src": "16808:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16808:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 717,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "16776:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16776:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 731,
												"nodeType": "ExpressionStatement",
												"src": "16776:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16876:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 716,
												"id": 733,
												"nodeType": "Return",
												"src": "16869:11:0"
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "16292:383:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 735,
												"src": "16707:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16707:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 735,
												"src": "16724:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16706:37:0"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 735,
												"src": "16760:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 714,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16760:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16759:6:0"
									},
									"scope": 1034,
									"src": "16680:207:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "17464:167:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 746,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "17483:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17483:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 748,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "17497:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 756,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "17545:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17562:39:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 749,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "17506:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 752,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 750,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 110,
																				"src": "17518:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17518:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "17506:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 754,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 753,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 738,
																		"src": "17532:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17506:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 195,
																"src": "17506:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17506:96:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 745,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "17474:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17474:129:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "17474:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17620:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 744,
												"id": 762,
												"nodeType": "Return",
												"src": "17613:11:0"
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "16893:475:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 764,
												"src": "17400:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17400:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 764,
												"src": "17417:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17417:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17399:42:0"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 764,
												"src": "17458:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 742,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17458:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17457:6:0"
									},
									"scope": 1034,
									"src": "17373:258:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "17935:123:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 775,
															"name": "_mintable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "17953:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7468697320746f6b656e206973206e6f74206d696e7461626c65",
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17964:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386",
																"typeString": "literal_string \"this token is not mintable\""
															},
															"value": "this token is not mintable"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386",
																"typeString": "literal_string \"this token is not mintable\""
															}
														],
														"id": 774,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "17945:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17945:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "17945:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 780,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "18009:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18009:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 782,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "18023:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 779,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "18003:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18003:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "18003:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18047:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 773,
												"id": 786,
												"nodeType": "Return",
												"src": "18040:11:0"
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "17637:231:0",
										"text": " @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n the total supply.\n Requirements\n - `msg.sender` must be the token owner\n - `_mintable` must be true"
									},
									"functionSelector": "a0712d68",
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 770,
											"modifierName": {
												"argumentTypes": null,
												"id": 769,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 442,
												"src": "17910:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "17910:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 788,
												"src": "17887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17886:16:0"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 788,
												"src": "17929:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 771,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17929:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17928:6:0"
									},
									"scope": 1034,
									"src": "17873:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 804,
										"nodeType": "Block",
										"src": "18194:65:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 797,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "18210:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18210:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 799,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "18224:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 796,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "18204:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18204:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 801,
												"nodeType": "ExpressionStatement",
												"src": "18204:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18248:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 795,
												"id": 803,
												"nodeType": "Return",
												"src": "18241:11:0"
											}
										]
									},
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "18064:73:0",
										"text": " @dev Burn `amount` tokens and decreasing the total supply."
									},
									"functionSelector": "42966c68",
									"id": 805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 805,
												"src": "18156:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18156:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18155:16:0"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 805,
												"src": "18188:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 793,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18188:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18187:6:0"
									},
									"scope": 1034,
									"src": "18142:117:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "18812:385:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 816,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "18830:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18848:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18840:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 817,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18840:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18840:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18830:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18852:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 815,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "18822:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18822:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "18822:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 826,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "18910:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18931:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18923:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 827,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18923:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18923:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18910:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18935:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 825,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "18902:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18902:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "18902:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 835,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "18984:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 837,
														"indexExpression": {
															"argumentTypes": null,
															"id": 836,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "18994:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18984:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 842,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 812,
																"src": "19026:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19034:40:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 838,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "19004:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 840,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 839,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "19014:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19004:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 195,
															"src": "19004:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19004:71:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18984:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "18984:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 847,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "19085:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 849,
														"indexExpression": {
															"argumentTypes": null,
															"id": 848,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "19095:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19085:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 854,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 812,
																"src": "19133:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 850,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "19108:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 852,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 851,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "19118:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19108:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 150,
															"src": "19108:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19108:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19085:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "19085:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 859,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "19164:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 860,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "19172:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 861,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "19183:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 858,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "19155:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19155:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 863,
												"nodeType": "EmitStatement",
												"src": "19150:40:0"
											}
										]
									},
									"documentation": {
										"id": 806,
										"nodeType": "StructuredDocumentation",
										"src": "18265:463:0",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 865,
												"src": "18752:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18752:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 865,
												"src": "18768:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18768:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 865,
												"src": "18787:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18787:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18751:51:0"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18812:0:0"
									},
									"scope": 1034,
									"src": "18733:464:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 910,
										"nodeType": "Block",
										"src": "19524:245:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 874,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 868,
																"src": "19542:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19561:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19553:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 875,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19553:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19553:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "19542:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19565:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 873,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "19534:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19534:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 882,
												"nodeType": "ExpressionStatement",
												"src": "19534:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 883,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "19610:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 886,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "19642:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 884,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "19625:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 150,
															"src": "19625:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19625:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19610:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 889,
												"nodeType": "ExpressionStatement",
												"src": "19610:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 890,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "19659:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 892,
														"indexExpression": {
															"argumentTypes": null,
															"id": 891,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "19669:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19659:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 897,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "19703:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 893,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "19680:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 895,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 894,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "19690:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19680:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 150,
															"src": "19680:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19680:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19659:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 900,
												"nodeType": "ExpressionStatement",
												"src": "19659:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19742:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19734:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 902,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19734:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19734:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 906,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "19746:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 907,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "19755:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 901,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "19725:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19725:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 909,
												"nodeType": "EmitStatement",
												"src": "19720:42:0"
											}
										]
									},
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "19203:259:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
									},
									"id": 911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 911,
												"src": "19482:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19482:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 911,
												"src": "19499:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19499:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19481:33:0"
									},
									"returnParameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19524:0:0"
									},
									"scope": 1034,
									"src": "19467:302:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "20145:285:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 920,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "20163:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20182:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 921,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20174:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "20163:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20186:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 919,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "20155:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20155:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "20155:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 929,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "20233:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 931,
														"indexExpression": {
															"argumentTypes": null,
															"id": 930,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "20243:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20233:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 936,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 916,
																"src": "20277:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20285:36:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 932,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "20254:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 934,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 933,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 914,
																	"src": "20264:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20254:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 195,
															"src": "20254:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 938,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20254:68:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20233:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 940,
												"nodeType": "ExpressionStatement",
												"src": "20233:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 941,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "20332:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 944,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 916,
																"src": "20364:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 942,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "20347:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 167,
															"src": "20347:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20347:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20332:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 947,
												"nodeType": "ExpressionStatement",
												"src": "20332:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 949,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "20395:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20412:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20404:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 950,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20404:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20404:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 954,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "20416:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 948,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "20386:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20386:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 956,
												"nodeType": "EmitStatement",
												"src": "20381:42:0"
											}
										]
									},
									"documentation": {
										"id": 912,
										"nodeType": "StructuredDocumentation",
										"src": "19775:308:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 958,
												"src": "20103:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20103:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 958,
												"src": "20120:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20120:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20102:33:0"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20145:0:0"
									},
									"scope": 1034,
									"src": "20088:342:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "20930:257:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 969,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "20948:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20965:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20957:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 970,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20957:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20957:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "20948:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20969:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 968,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "20940:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20940:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "20940:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 979,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "21026:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21045:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21037:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 980,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21037:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21037:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "21026:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21049:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 978,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "21018:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21018:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "21018:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 988,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "21097:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 991,
															"indexExpression": {
																"argumentTypes": null,
																"id": 989,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "21109:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21097:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 992,
														"indexExpression": {
															"argumentTypes": null,
															"id": 990,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "21116:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21097:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 993,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "21127:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21097:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 995,
												"nodeType": "ExpressionStatement",
												"src": "21097:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 997,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "21157:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 998,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "21164:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 999,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "21173:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 996,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "21148:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21148:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1001,
												"nodeType": "EmitStatement",
												"src": "21143:37:0"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "20436:414:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1003,
												"src": "20873:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1003,
												"src": "20888:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20888:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1003,
												"src": "20905:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20905:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20872:48:0"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20930:0:0"
									},
									"scope": 1034,
									"src": "20855:332:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "21426:168:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1012,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "21442:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1013,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "21451:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1011,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "21436:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21436:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1015,
												"nodeType": "ExpressionStatement",
												"src": "21436:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1017,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "21477:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1018,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "21486:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21486:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1027,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "21539:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21547:38:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1020,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "21500:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1022,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1021,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1006,
																			"src": "21512:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "21500:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1025,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1023,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 110,
																			"src": "21521:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 1024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21521:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "21500:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 195,
																"src": "21500:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21500:86:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1016,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "21468:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21468:119:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "21468:119:0"
											}
										]
									},
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "21193:167:0",
										"text": " @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n from the caller's allowance.\n See {_burn} and {_approve}."
									},
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1033,
												"src": "21384:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1033,
												"src": "21401:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21383:33:0"
									},
									"returnParameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21426:0:0"
									},
									"scope": 1034,
									"src": "21365:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1035,
							"src": "11584:10012:0"
						}
					],
					"src": "0:21596:0"
				},
				"id": 0
			}
		}
	}
}